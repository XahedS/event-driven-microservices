<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<modules>
		<module>twitter-to-kafka-service</module>
        <module>app-config-data</module>
		<module>kafka</module>
		<module>kafka/kafka-admin</module>
		<module>kafka/kafka-model</module>
		<module>kafka/kafka-producer</module>
		<module>common-config</module>
        <module>config-server</module>
		<module>kafka/kafka-consumer</module>
		<module>kafka-to-elastic-service</module>
        <module>elastic</module>
		<module>elastic/elastic-model</module>
		<module>elastic/elastic-config</module>
		<module>elastic/elastic-index-client</module>
		<module>elastic/elastic-query-client</module>
		<module>common-util</module>
		<module>elastic-query-service</module>
		<module>elastic-query-web-client</module>
        <module>elastic-query-service-common</module>
		<module>elastic-query-web-client-common</module>
		<module>reactive-elastic-query-service</module>
	</modules>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.11</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.microservices.demo</groupId>
	<artifactId>microservices-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>microservices-demo</name>
	<description>Microservices demo project for spring boot</description>
	<packaging>pom</packaging>

	<properties>
		<java.version>11</java.version>
		<spring-boot.version>2.7.11</spring-boot.version>
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
		<twitter4j.version>4.0.6</twitter4j.version>
		<lombok.version>1.18.26</lombok.version>
		<avro.version>1.10.0</avro.version>
		<spring-kafka.version>2.9.2</spring-kafka.version>
		<spring-retry.version>1.3.4</spring-retry.version>
<!--		<spring-aop.version>2.4.0</spring-aop.version>-->
		<spring-aop.version>3.0.0</spring-aop.version>
<!--		<kafka-avro-serializer.version>2.4.0</kafka-avro-serializer.version>-->
		<kafka-avro-serializer.version>5.5.1</kafka-avro-serializer.version>
<!--		<spring-cloud.version>2.2.6.RELEASE</spring-cloud.version>-->
		<spring-cloud.version>3.1.4</spring-cloud.version>
<!--		<spring-cloud-dependencies.version>Hoxton.SR9</spring-cloud-dependencies.version>-->
		<spring-cloud-dependencies.version>2021.0.4</spring-cloud-dependencies.version>
<!--		<spring-cloud-autoconfigure.version>2.6.1</spring-cloud-autoconfigure.version>-->
		<spring-cloud-autoconfigure.version>2.7.11</spring-cloud-autoconfigure.version>
<!--		<spring-cloud-starter-config.version>2.2.6.RELEASE</spring-cloud-starter-config.version>-->
		<spring-cloud-starter-config.version>3.1.4</spring-cloud-starter-config.version>
		<spring-boot-starter-security.version>2.7.11</spring-boot-starter-security.version>
<!--		<elastic.version>7.9.1</elastic.version>-->
		<elastic.version>7.16.0</elastic.version>
		<spring-validation.version>2.7.11</spring-validation.version>
<!--		<spring-hateoas.version>2.3.4.RELEASE</spring-hateoas.version>-->
		<spring-doc.version>1.6.8</spring-doc.version>
		<spring-boot-starter-thymeleaf.version>2.7.11</spring-boot-starter-thymeleaf.version>
<!--		<spring-boot-thymeleaf-extras.version>3.1.0.RELEASE</spring-boot-thymeleaf-extras.version>-->
		<spring-boot-thymeleaf-extras.version>3.0.4.RELEASE</spring-boot-thymeleaf-extras.version>
		<spring-cloud-loadbalancer.version>3.1.4</spring-cloud-loadbalancer.version>

	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-query-web-client-common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-query-service-common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-loadbalancer</artifactId>
				<version>${spring-cloud-loadbalancer.version}</version>
			</dependency>
			<dependency>
				<groupId>org.thymeleaf.extras</groupId>
				<artifactId>thymeleaf-extras-springsecurity5</artifactId>
				<version>${spring-boot-thymeleaf-extras.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-thymeleaf</artifactId>
				<version>${spring-boot-starter-thymeleaf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${spring-doc.version}</version>
			</dependency>
			<!--			<dependency>-->
<!--				<groupId>org.springframework.boot</groupId>-->
<!--				<artifactId>spring-boot-starter-hateoas</artifactId>-->
<!--				<version>${spring-hateoas.version}</version>-->
<!--			</dependency>-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring-validation.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-query-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>common-util</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-config</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>elastic-index-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elastic.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elastic.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-consumer</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot-starter-security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-config</artifactId>
				<version>${spring-cloud-starter-config.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-autoconfigure</artifactId>
				<version>${spring-cloud-autoconfigure.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-admin</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-producer</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-avro-serializer</artifactId>
				<version>${kafka-avro-serializer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-annotations</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>common-config</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>app-config-data</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.microservices.demo</groupId>
				<artifactId>kafka-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
 				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.twitter4j</groupId>
				<artifactId>twitter4j-stream</artifactId>
				<version>${twitter4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring-kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.retry</groupId>
				<artifactId>spring-retry</artifactId>
				<version>${spring-retry.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-aop</artifactId>
				<version>${spring-aop.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
							<plugin>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-maven-plugin</artifactId>
								<version>${spring-boot.version}</version>
								<configuration>
									<image>
										<name>${project.groupId}/twitter.to.kafka.service:${project.version}</name>
									</image>
								</configuration>
								<executions>
									<execution>
										<phase>install</phase>
										<goals>
											<goal>build-image</goal>
										</goals>
									</execution>
								</executions>
							</plugin>

		</plugins>
<!--		<pluginManagement>-->
<!--			<plugins>-->
<!--				<plugin>-->
<!--					<groupId>org.springframework.boot</groupId>-->
<!--					<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--					<version>${spring-boot.version}</version>-->
<!--					<configuration>-->
<!--						<image>-->
<!--							<name>${project.groupId}/twitter.to.kafka.service:${project.version}</name>-->
<!--						</image>-->
<!--					</configuration>-->
<!--					<executions>-->
<!--						<execution>-->
<!--							<phase>install</phase>-->
<!--							<goals>-->
<!--								<goal>build-image</goal>-->
<!--							</goals>-->
<!--						</execution>-->
<!--					</executions>-->
<!--				</plugin>-->
<!--			</plugins>-->

<!--		</pluginManagement>-->

	</build>

</project>
