server:
  port: 8888

logging:
  level:
    ROOT: INFO
    org.spring.framework.cloud.config: DEBUG

spring:
  application:
    name: configserver
  cloud:
    config:
      server:
        git:
          uri: git@github.com:XahedS/spring-cloud-config-server-repository.git
          username: XahedS
          password: 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
          #Below two fields of uri & default were used for local-repo
#          uri: /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/config-server-repository
#          default-label: master
          default-label: main
          clone-on-start: true
    fail-fast: true
  security:
    user:
      name: spring_cloud_user
#Below password is generated using the old password springCloud_Pwd! from jasypt
      password: ENC(o+Ei3+fudsNcFfSj/5lTSLvwgOcb1cYUyz8m+lEndMJfKS2Jiuy+q4DTA6cMcZDwYSApWM5MS+zXba5tNgCjNA==)
      #      password: springCloud_Pwd!
#following key has been used to get the above encrypted password. Defining the jasypt.encryptor.password will
#provide the key to spring boot at runtime!
jasypt:
  encryptor:
#    password: ${JASYPT_ENCRYPTOR_PASSWORD} #This key will be read in runtime from enviornment variable defined
#Once defined it as env variable this section jasypt.encryptor.password can be removed!
    password: Demo_Pwd!2020 #This is direct key and non-secure.