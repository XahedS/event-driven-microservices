2023-09-02 12:21:36 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 8563 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 12:21:36 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 12:21:36 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 12:21:36 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 12:21:36 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 12:21:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 12:21:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 169 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 12:21:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 12:21:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 12:21:37 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 12:21:38 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
2023-09-02 12:21:38 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 12:21:38 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:107)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.lambda$getExpressionForIndexName$3(SimpleElasticsearchPersistentEntity.java:330)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getExpressionForIndexName(SimpleElasticsearchPersistentEntity.java:329)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:313)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 71 common frames omitted
2023-09-02 12:41:40 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 9580 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 12:41:40 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 12:41:40 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 12:41:40 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 12:41:40 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 12:41:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 12:41:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 340 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 12:41:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 12:41:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 12:41:42 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 12:41:43 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
2023-09-02 12:41:43 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 12:41:43 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:107)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.lambda$getExpressionForIndexName$3(SimpleElasticsearchPersistentEntity.java:330)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getExpressionForIndexName(SimpleElasticsearchPersistentEntity.java:329)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:313)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 71 common frames omitted
2023-09-02 12:43:23 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 9725 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 12:43:23 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 12:43:23 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 12:43:23 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 12:43:23 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 12:43:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 12:43:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 12:43:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 12:43:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 12:43:25 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=81fb7469-5a31-3a4e-9473-d788c69e89fd
2023-09-02 12:43:26 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
2023-09-02 12:43:26 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 12:43:26 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:107)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.lambda$getExpressionForIndexName$3(SimpleElasticsearchPersistentEntity.java:330)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getExpressionForIndexName(SimpleElasticsearchPersistentEntity.java:329)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:313)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 71 common frames omitted
2023-09-02 13:16:25 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 11555 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 13:16:25 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 13:16:25 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 13:16:25 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 13:16:25 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 13:16:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:16:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 13:16:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:16:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 13:16:27 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 13:16:27 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: cb1053a1-9df3-4131-a31b-285f166f498b

2023-09-02 13:16:29 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
2023-09-02 13:16:29 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 13:16:29 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:936)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:107)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.lambda$getExpressionForIndexName$3(SimpleElasticsearchPersistentEntity.java:330)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getExpressionForIndexName(SimpleElasticsearchPersistentEntity.java:329)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:313)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 29 common frames omitted
2023-09-02 13:17:34 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 11679 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 13:17:34 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 13:17:34 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 13:17:34 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 13:17:34 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 13:17:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:17:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 13:17:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:17:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 13:17:36 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 13:17:36 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 1138dcc2-de8d-4954-aeb0-3c45dd6b60be

2023-09-02 13:17:38 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
2023-09-02 13:17:38 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 13:17:38 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:936)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:107)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.lambda$getExpressionForIndexName$3(SimpleElasticsearchPersistentEntity.java:330)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getExpressionForIndexName(SimpleElasticsearchPersistentEntity.java:329)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:313)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 29 common frames omitted
2023-09-02 13:18:50 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 13:18:50 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 11845 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 13:18:50 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 13:18:50 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 13:18:50 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 13:18:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:18:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 13:18:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:18:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2023-09-02 13:18:51 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d48b18fc-15a6-3c7e-a364-22c0e26d6333
2023-09-02 13:18:52 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 0e0b4a6b-799e-488a-8abe-f9b0ebe43251

2023-09-02 13:18:54 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-09-02 13:18:54 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8183
2023-09-02 13:18:55 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-09-02 13:18:56 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-09-02 13:18:56 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 11.699 seconds (JVM running for 12.792)
2023-09-02 13:28:27 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 12417 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 13:28:27 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 13:28:27 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 13:28:27 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 13:28:27 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 13:28:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:28:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 13:28:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 13:28:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Reactive Elasticsearch repository interfaces.
2023-09-02 13:28:28 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d48b18fc-15a6-3c7e-a364-22c0e26d6333
2023-09-02 13:28:29 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 21e43c6e-f997-448f-bbf5-303940436c25

2023-09-02 13:28:30 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8183
2023-09-02 13:28:30 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.258 seconds (JVM running for 10.261)
2023-09-02 14:17:59 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 14:17:59 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 15572 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 14:17:59 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 14:17:59 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 14:17:59 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 14:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 14:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 14:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 14:18:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 14:18:00 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 14:18:01 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
2023-09-02 14:18:01 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 14:18:01 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:107)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.lambda$getExpressionForIndexName$3(SimpleElasticsearchPersistentEntity.java:330)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getExpressionForIndexName(SimpleElasticsearchPersistentEntity.java:329)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:313)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 71 common frames omitted
2023-09-02 14:25:41 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 14:25:41 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 15996 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 14:25:41 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 14:25:41 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 14:25:41 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 14:25:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 14:25:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 14:25:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 14:25:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 14:25:42 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 14:25:43 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
2023-09-02 14:25:43 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 14:25:43 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:219)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:106)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:93)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:56)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:315)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 71 common frames omitted
2023-09-02 14:28:19 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 14:28:19 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 16208 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 14:28:19 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 14:28:19 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 14:28:19 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 14:28:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 14:28:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 185 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 14:28:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 14:28:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 37 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 14:28:20 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 14:28:21 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
2023-09-02 14:28:21 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 14:28:21 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:219)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:106)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:93)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:56)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:315)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 71 common frames omitted
2023-09-02 15:02:20 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 15:02:20 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 17638 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 15:02:20 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 15:02:20 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 15:02:20 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 15:02:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 15:02:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 190 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 15:02:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 15:02:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 15:02:22 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 15:02:23 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 6a93d453-9325-4b9d-a9de-37f55b6391f7

2023-09-02 15:02:24 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8183
2023-09-02 15:02:24 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 10.152 seconds (JVM running for 11.204)
2023-09-02 15:05:40 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying reactive elasticsearch for text kafka
2023-09-02 15:05:40 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text kafka
2023-09-02 15:05:40 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2023-09-02 15:05:40 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2023-09-02 15:05:40 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - request(1)
2023-09-02 15:05:41 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5699031294702110489, text=turpis varius id Kafka venenatis turpis, userId=3422399338741206665, textV2=null, createdAt=2023-06-03T21:30:32))
2023-09-02 15:05:41 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - request(31)
2023-09-02 15:05:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1699168514160768051, text=lectus varius mauris Kafka sit dolor, userId=7725865971603324911, textV2=null, createdAt=2023-06-03T21:51:13))
2023-09-02 15:05:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9222059817655180342, text=in venenatis in Kafka tempus varius, userId=1663270945858508315, textV2=null, createdAt=2023-05-28T23:20:31))
2023-09-02 15:05:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3661660540089992258, text=venenatis consectetur ultricies Kafka adipiscing adipiscing, userId=2971298477575787006, textV2=null, createdAt=2023-05-29T00:05:11))
2023-09-02 15:05:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4441058273720202783, text=ipsum elit ornare Kafka mauris ultricies, userId=7610550145122782120, textV2=null, createdAt=2023-06-03T18:00:19))
2023-09-02 15:05:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3727725397816085731, text=adipiscing sit tempus Kafka consectetur venenatis, userId=281867724747015057, textV2=null, createdAt=2023-06-03T18:43:40))
2023-09-02 15:05:44 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5754569116174586109, text=ornare in tristique Kafka dignissim dolor, userId=2016134781864580339, textV2=null, createdAt=2023-06-03T18:52:30))
2023-09-02 15:05:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5668160367789733333, text=tristique dignissim adipiscing Kafka tempus ipsum, userId=9104306049075529117, textV2=null, createdAt=2023-06-03T19:00:10))
2023-09-02 15:05:45 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=477080962564646396, text=ut consectetur tristique Kafka elit in, userId=154786038746588520, textV2=null, createdAt=2023-06-03T19:05:30))
2023-09-02 15:05:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2428211052769091517, text=venenatis sit venenatis Kafka ipsum tempus, userId=6976139117227763496, textV2=null, createdAt=2023-06-03T19:07:10))
2023-09-02 15:05:46 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3380047361961469400, text=in elit ornare Kafka mauris tempus, userId=224743309440113767, textV2=null, createdAt=2023-06-04T00:36:51))
2023-09-02 15:05:47 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1971509295310424845, text=adipiscing in consectetur Kafka turpis adipiscing, userId=3460819274432524595, textV2=null, createdAt=2023-05-29T00:10:51))
2023-09-02 15:05:47 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3706733783532070455, text=pharetra mauris ornare Kafka adipiscing turpis, userId=4399520498698912207, textV2=null, createdAt=2023-05-28T22:16:31))
2023-09-02 15:05:48 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5175789315787363790, text=in adipiscing id Kafka dignissim consectetur, userId=6863184644203828493, textV2=null, createdAt=2023-05-28T22:31:51))
2023-09-02 15:05:48 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=334891178286155779, text=tempus elit adipiscing Kafka in ultricies, userId=6378884126996579273, textV2=null, createdAt=2023-05-28T22:39:41))
2023-09-02 15:05:49 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3330582274671239397, text=pharetra tristique id Kafka ultricies ornare, userId=313497953861835778, textV2=null, createdAt=2023-06-03T16:54:19))
2023-09-02 15:05:49 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5531525469418027040, text=venenatis tempus consectetur Kafka tristique ornare, userId=5230479650689833614, textV2=null, createdAt=2023-06-03T17:30:09))
2023-09-02 15:05:50 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8035827207311855013, text=dolor lectus tempus Kafka consectetur in, userId=106331434273388380, textV2=null, createdAt=2023-06-03T17:42:29))
2023-09-02 15:05:50 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8256835684576024050, text=pharetra venenatis lectus Kafka mauris adipiscing, userId=3018710213175630135, textV2=null, createdAt=2023-06-03T22:12:33))
2023-09-02 15:05:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3394005016458128866, text=venenatis ut consectetur Kafka adipiscing ipsum, userId=7812307898791684662, textV2=null, createdAt=2023-06-03T22:41:43))
2023-09-02 15:05:51 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6986993504486241249, text=dolor lectus id Kafka adipiscing id, userId=8588596590842061462, textV2=null, createdAt=2023-06-03T23:15:54))
2023-09-02 15:05:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2266258218323930240, text=dolor in lectus Kafka id in, userId=2691224782240074606, textV2=null, createdAt=2023-06-03T23:47:14))
2023-09-02 15:05:52 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5140534164528832331, text=venenatis ut turpis Kafka elit tempus, userId=409884765127830197, textV2=null, createdAt=2023-06-04T00:59:32))
2023-09-02 15:05:53 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3323354565585557744, text=dignissim turpis varius Kafka lectus tristique, userId=2289552754020537094, textV2=null, createdAt=2023-06-04T12:21:07))
2023-09-02 15:05:53 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:05:54 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1583860571391003196, text=mauris varius varius Kafka consectetur ornare, userId=1639709581359254607, textV2=null, createdAt=2023-08-16T00:10:48))
2023-09-02 15:05:54 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7202212430400017026, text=id tempus venenatis Kafka tristique dignissim, userId=2272724596061148136, textV2=null, createdAt=2023-08-16T00:08:08))
2023-09-02 15:05:55 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1578467221563942932, text=ipsum lectus venenatis Kafka in varius, userId=8720943933888668899, textV2=null, createdAt=2023-08-16T00:27:18))
2023-09-02 15:05:55 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1675299108008638272, text=tempus in elit Kafka elit adipiscing, userId=1073895761593713264, textV2=null, createdAt=2023-08-16T00:34:18))
2023-09-02 15:05:56 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2000512213313076862, text=varius turpis sit Kafka dolor elit, userId=8575917140683518410, textV2=null, createdAt=2023-08-17T00:38:58))
2023-09-02 15:05:56 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4474723291489771839, text=venenatis ut sit Kafka elit tristique, userId=1147177396401468552, textV2=null, createdAt=2023-08-17T00:44:49))
2023-09-02 15:05:57 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=320215877336682532, text=pharetra tristique varius Kafka ipsum sit, userId=5678638907018151492, textV2=null, createdAt=2023-08-17T00:45:19))
2023-09-02 15:05:57 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3362167498199410117, text=sit in adipiscing Kafka tempus id, userId=2497763960667659117, textV2=null, createdAt=2023-08-17T00:47:49))
2023-09-02 15:05:58 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8143455638241796828, text=sit ut ultricies Kafka ultricies ipsum, userId=5462892777227842330, textV2=null, createdAt=2023-08-17T00:50:09))
2023-09-02 15:05:58 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9203744620826465453, text=id sit turpis Kafka ornare tristique, userId=3612095813797481911, textV2=null, createdAt=2023-08-17T00:59:39))
2023-09-02 15:05:59 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3444445978763971748, text=in sit lectus Kafka venenatis id, userId=8408784555546805148, textV2=null, createdAt=2023-08-17T01:21:49))
2023-09-02 15:05:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1459771823396046078, text=varius sit pharetra Kafka ipsum lectus, userId=5581738706265883110, textV2=null, createdAt=2023-08-16T00:50:29))
2023-09-02 15:06:00 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7724146689424612154, text=adipiscing dolor tempus Kafka in tempus, userId=2942057887732947388, textV2=null, createdAt=2023-05-28T21:32:10))
2023-09-02 15:06:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8461099133790582680, text=varius id pharetra Kafka pharetra tristique, userId=6373927216333826345, textV2=null, createdAt=2023-05-28T21:38))
2023-09-02 15:06:01 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7233671175713228869, text=adipiscing sit elit Kafka consectetur adipiscing, userId=7083984098116690475, textV2=null, createdAt=2023-05-28T22:11:51))
2023-09-02 15:06:01 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8536910338393740831, text=venenatis varius pharetra Kafka tristique id, userId=5110963011016859680, textV2=null, createdAt=2023-05-28T22:19:51))
2023-09-02 15:06:02 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5259732540467214874, text=tempus ut dolor Kafka in ultricies, userId=4352666947936785188, textV2=null, createdAt=2023-05-28T22:28:11))
2023-09-02 15:06:02 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8717641229282699743, text=pharetra ipsum mauris Kafka id pharetra, userId=2896226460646287193, textV2=null, createdAt=2023-05-28T22:29:51))
2023-09-02 15:06:03 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1464840020616961660, text=tristique sit elit Kafka tristique ut, userId=7464105592120338039, textV2=null, createdAt=2023-05-28T22:58:31))
2023-09-02 15:06:03 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3226700166629943729, text=tempus lectus venenatis Kafka tempus dolor, userId=2559354140800196871, textV2=null, createdAt=2023-05-28T23:22:42))
2023-09-02 15:06:04 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5378665897583589062, text=in ut consectetur Kafka ultricies consectetur, userId=1552164405606045017, textV2=null, createdAt=2023-05-29T00:00:31))
2023-09-02 15:06:04 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=697613289882404801, text=lectus ultricies in Kafka in dolor, userId=5000687148226912464, textV2=null, createdAt=2023-05-29T00:15:51))
2023-09-02 15:06:05 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=959515115844508325, text=ultricies in tristique Kafka id elit, userId=2416908564688927844, textV2=null, createdAt=2023-05-29T00:21:41))
2023-09-02 15:06:05 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=611934602968717071, text=venenatis in elit Kafka ornare tempus, userId=5698598646980467294, textV2=null, createdAt=2023-06-03T16:32:08))
2023-09-02 15:06:05 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:06:06 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3429517562796393089, text=dignissim ipsum ornare Kafka ut id, userId=4384924635904333338, textV2=null, createdAt=2023-06-03T16:35:28))
2023-09-02 15:06:06 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1492637239967913838, text=mauris elit ultricies Kafka adipiscing elit, userId=1573647117003974193, textV2=null, createdAt=2023-06-03T16:49:19))
2023-09-02 15:06:07 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1342547157460967171, text=adipiscing venenatis ultricies Kafka mauris dignissim, userId=5161169679410155642, textV2=null, createdAt=2023-06-03T16:53:39))
2023-09-02 15:06:07 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2909994045856287562, text=dignissim ultricies ipsum Kafka pharetra lectus, userId=8621468141836531306, textV2=null, createdAt=2023-06-03T16:58:09))
2023-09-02 15:06:08 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6791040906733798639, text=varius pharetra tristique Kafka ut ultricies, userId=8038558461476494693, textV2=null, createdAt=2023-06-03T17:36:39))
2023-09-02 15:06:08 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4699096083692475012, text=dolor varius sit Kafka pharetra sit, userId=4449948136035998110, textV2=null, createdAt=2023-06-03T18:21:20))
2023-09-02 15:06:09 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4024236420955855279, text=dignissim elit sit Kafka consectetur ornare, userId=1065480897252535282, textV2=null, createdAt=2023-06-03T18:54:30))
2023-09-02 15:06:09 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7947770233610268157, text=dolor sit pharetra Kafka tempus ornare, userId=8818592518696435361, textV2=null, createdAt=2023-06-03T21:50:13))
2023-09-02 15:06:10 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6583331444947973848, text=elit pharetra consectetur Kafka id turpis, userId=7700736925062074893, textV2=null, createdAt=2023-06-03T22:35:23))
2023-09-02 15:06:10 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7875846457974299856, text=elit id adipiscing Kafka tempus turpis, userId=1458767493459792625, textV2=null, createdAt=2023-06-03T22:35:33))
2023-09-02 15:06:11 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8830129525801786568, text=ultricies pharetra dignissim Kafka sit ornare, userId=8076491369298973879, textV2=null, createdAt=2023-05-28T21:58:31))
2023-09-02 15:06:11 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8458819990250478486, text=pharetra lectus dignissim Kafka elit adipiscing, userId=7967135110114772363, textV2=null, createdAt=2023-05-28T22:15:31))
2023-09-02 15:06:12 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6904311318860476784, text=mauris turpis dignissim Kafka dolor elit, userId=1159654836158149588, textV2=null, createdAt=2023-05-28T22:49:31))
2023-09-02 15:06:12 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1634450050356530723, text=sit tempus varius Kafka ipsum varius, userId=6824354996242498458, textV2=null, createdAt=2023-05-28T22:50:41))
2023-09-02 15:06:13 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5527831707289812409, text=ut varius sit Kafka elit dolor, userId=4655367837219725599, textV2=null, createdAt=2023-05-28T23:24:32))
2023-09-02 15:06:13 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6428322240608733064, text=consectetur tristique venenatis Kafka ultricies consectetur, userId=3984862591735476053, textV2=null, createdAt=2023-06-03T23:26:54))
2023-09-02 15:06:14 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5870903447134210661, text=dignissim dignissim dolor Kafka lectus tristique, userId=9120937118174286824, textV2=null, createdAt=2023-06-03T23:27:24))
2023-09-02 15:06:14 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5386032746071981405, text=ultricies tristique elit Kafka id in, userId=6708656136280978277, textV2=null, createdAt=2023-06-04T00:05:04))
2023-09-02 15:06:15 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3732313174759625520, text=tristique elit lectus Kafka adipiscing id, userId=6748713952144832649, textV2=null, createdAt=2023-06-04T00:09:04))
2023-09-02 15:06:15 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4185697038726750315, text=adipiscing turpis varius Kafka consectetur lectus, userId=5039849049047381435, textV2=null, createdAt=2023-06-04T00:53:12))
2023-09-02 15:06:16 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4380590533380190817, text=tristique ornare id Kafka tempus id, userId=7390332995959193699, textV2=null, createdAt=2023-06-03T15:59:28))
2023-09-02 15:06:16 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1811955673974703939, text=dolor venenatis pharetra Kafka dignissim dolor, userId=5574112673890527987, textV2=null, createdAt=2023-06-03T16:47:18))
2023-09-02 15:06:17 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6460346767269459383, text=ornare tempus venenatis Kafka turpis mauris, userId=2801225619303053518, textV2=null, createdAt=2023-06-03T16:52:29))
2023-09-02 15:06:17 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4157955814090305660, text=elit venenatis tempus Kafka adipiscing ultricies, userId=892694956132382161, textV2=null, createdAt=2023-06-03T17:18:49))
2023-09-02 15:06:17 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:06:18 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5397426795152408340, text=ut venenatis adipiscing Kafka lectus mauris, userId=3275766138373541938, textV2=null, createdAt=2023-06-03T18:38:50))
2023-09-02 15:06:18 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3728593648398911393, text=ultricies sit id Kafka lectus ut, userId=5279420664993020465, textV2=null, createdAt=2023-06-03T18:50:40))
2023-09-02 15:06:19 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6634863634241653301, text=lectus tempus pharetra Kafka dolor dignissim, userId=3394949772686421015, textV2=null, createdAt=2023-06-03T19:13))
2023-09-02 15:06:19 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=61267884024938403, text=pharetra ipsum ut Kafka adipiscing ut, userId=3554513523180763710, textV2=null, createdAt=2023-06-03T21:10:12))
2023-09-02 15:06:20 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2241149547190642129, text=pharetra dolor ut Kafka venenatis adipiscing, userId=5293691292522771654, textV2=null, createdAt=2023-06-03T21:17:52))
2023-09-02 15:06:20 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5522353942497560395, text=ut mauris tristique Kafka mauris dignissim, userId=5801871912542994945, textV2=null, createdAt=2023-06-03T21:44:03))
2023-09-02 15:06:21 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4114300111172866566, text=turpis dolor ornare Kafka id tristique, userId=8883556385973208335, textV2=null, createdAt=2023-06-03T21:44:53))
2023-09-02 15:06:21 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6607104120989409013, text=ipsum tempus tempus Kafka varius turpis, userId=687175036226054378, textV2=null, createdAt=2023-09-01T02:14:40))
2023-09-02 15:06:22 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3036301685934619468, text=ut ornare tempus varius Kafka tristique mauris, userId=46662945273354219, textV2=null, createdAt=2023-06-03T23:01:43))
2023-09-02 15:06:22 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6413974492615664171, text=turpis adipiscing adipiscing pharetra Kafka lectus lectus, userId=1688141546404894840, textV2=null, createdAt=2023-06-03T23:33:04))
2023-09-02 15:06:23 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7184662160769149061, text=ut tempus tempus consectetur Kafka id venenatis, userId=2164479368022675788, textV2=null, createdAt=2023-06-03T21:12:12))
2023-09-02 15:06:23 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2677163691762907859, text=sit sit pharetra ornare Kafka consectetur ultricies, userId=4775162048326849466, textV2=null, createdAt=2023-06-03T21:14:52))
2023-09-02 15:06:24 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7709385884696544508, text=consectetur ornare varius ipsum Kafka consectetur ut, userId=2843150145573413608, textV2=null, createdAt=2023-06-03T21:22:02))
2023-09-02 15:06:24 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5592503814308115228, text=elit sit lectus consectetur Kafka dolor lectus, userId=7455723843829164098, textV2=null, createdAt=2023-06-03T21:28:42))
2023-09-02 15:06:25 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7469760363640584440, text=ipsum consectetur ultricies venenatis Kafka elit pharetra, userId=6842210826482104691, textV2=null, createdAt=2023-06-03T22:00:33))
2023-09-02 15:06:25 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2921358065948304862, text=ipsum adipiscing dignissim dignissim Kafka elit dignissim, userId=6061782497383936443, textV2=null, createdAt=2023-05-28T23:12:41))
2023-09-02 15:06:26 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4868619360660653700, text=varius dignissim dolor id Kafka ut varius, userId=3824534333900696950, textV2=null, createdAt=2023-05-28T23:43:32))
2023-09-02 15:06:26 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=758147311174686380, text=tempus tempus dolor sit Kafka ultricies ultricies, userId=8629656546487168185, textV2=null, createdAt=2023-05-28T23:46:12))
2023-09-02 15:06:27 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1843824091366704859, text=ultricies tristique ornare ut Kafka sit ultricies, userId=5638513254221210793, textV2=null, createdAt=2023-06-03T18:02:09))
2023-09-02 15:06:27 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=187814534572267691, text=dolor tempus dolor venenatis Kafka dignissim in, userId=5581029749136592447, textV2=null, createdAt=2023-06-03T18:06:39))
2023-09-02 15:06:28 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=338116641464158929, text=id adipiscing lectus ipsum Kafka lectus turpis, userId=7070455079363142452, textV2=null, createdAt=2023-06-03T18:10))
2023-09-02 15:06:28 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3112823634755542942, text=varius ipsum ultricies ipsum Kafka in venenatis, userId=2337059781749801576, textV2=null, createdAt=2023-06-04T00:10:14))
2023-09-02 15:06:29 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8027233407609427357, text=adipiscing consectetur tempus adipiscing Kafka venenatis ornare, userId=1424274192907567761, textV2=null, createdAt=2023-05-29T00:13:21))
2023-09-02 15:06:29 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2406233640707885178, text=ipsum id tristique sit Kafka ornare sit, userId=5091013540834751048, textV2=null, createdAt=2023-06-03T16:10:48))
2023-09-02 15:06:29 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:06:30 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2752164850259607906, text=adipiscing dolor ut consectetur Kafka mauris pharetra, userId=3503227193373769695, textV2=null, createdAt=2023-06-03T16:43:48))
2023-09-02 15:06:30 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7521204420804062262, text=ornare varius elit id Kafka tristique dignissim, userId=201304415458339563, textV2=null, createdAt=2023-06-03T16:48:08))
2023-09-02 15:06:31 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2944245958267334791, text=dolor elit lectus tristique Kafka dolor pharetra, userId=5346057335529589397, textV2=null, createdAt=2023-05-28T21:47:40))
2023-09-02 15:06:31 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7088460146851308291, text=in tempus turpis pharetra Kafka dolor venenatis, userId=2566879215126933776, textV2=null, createdAt=2023-05-28T21:54))
2023-09-02 15:06:32 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6400428190581985352, text=adipiscing lectus pharetra dignissim Kafka varius ultricies, userId=1594283462968035841, textV2=null, createdAt=2023-05-28T22:08:01))
2023-09-02 15:06:32 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3295875711936667320, text=tempus consectetur consectetur ornare Kafka consectetur tristique, userId=5566703564321347987, textV2=null, createdAt=2023-05-28T22:36:11))
2023-09-02 15:06:33 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9192549501663001119, text=id ornare dolor ornare Kafka sit dolor, userId=8777919571148699058, textV2=null, createdAt=2023-06-03T16:55:49))
2023-09-02 15:06:33 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4153453430108533103, text=varius dignissim ornare sit Kafka elit turpis, userId=5532100048280790015, textV2=null, createdAt=2023-06-03T17:16:49))
2023-09-02 15:06:34 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4412299743472389163, text=ultricies ornare adipiscing tristique Kafka mauris lectus, userId=1654241272441169395, textV2=null, createdAt=2023-06-03T22:11:23))
2023-09-02 15:06:34 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1300299809512703170, text=ornare ultricies ultricies ipsum Kafka tristique dignissim, userId=6314331425186584583, textV2=null, createdAt=2023-06-03T23:41:24))
2023-09-02 15:06:35 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3776373802603550260, text=id elit tristique lectus Kafka adipiscing pharetra, userId=3753964741242116445, textV2=null, createdAt=2023-06-04T00:07:14))
2023-09-02 15:06:35 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3333240819074577622, text=mauris dignissim in pharetra Kafka ipsum in, userId=6534158809543975460, textV2=null, createdAt=2023-06-04T12:16:57))
2023-09-02 15:06:36 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2707794717890480366, text=tristique dignissim dolor tempus Kafka ut varius, userId=1198619779597999374, textV2=null, createdAt=2023-06-04T12:21:58))
2023-09-02 15:06:36 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4665740309577980967, text=consectetur dignissim in turpis Kafka venenatis id, userId=7660535244900949263, textV2=null, createdAt=2023-08-16T00:09:28))
2023-09-02 15:06:37 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5184902525784982119, text=ultricies ipsum consectetur ultricies Kafka id turpis, userId=1393394133224911499, textV2=null, createdAt=2023-08-16T00:22:48))
2023-09-02 15:06:37 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1568904922649675398, text=ut ut ipsum elit Kafka in varius, userId=6125095042486193442, textV2=null, createdAt=2023-08-16T00:23:28))
2023-09-02 15:06:38 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=215106836770897684, text=tristique dignissim tristique sit Kafka turpis turpis, userId=4767475515708920450, textV2=null, createdAt=2023-08-16T00:27:28))
2023-09-02 15:06:38 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2900816552118657012, text=mauris adipiscing ultricies venenatis Kafka lectus dolor, userId=2766089677653046059, textV2=null, createdAt=2023-08-16T00:29:58))
2023-09-02 15:06:39 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=826289120573802936, text=mauris id ultricies ultricies Kafka in elit, userId=8607278897392182880, textV2=null, createdAt=2023-08-16T00:33:18))
2023-09-02 15:06:39 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6525121697211724270, text=lectus pharetra elit ut Kafka in ultricies, userId=2151563118976030575, textV2=null, createdAt=2023-08-16T00:40:59))
2023-09-02 15:06:40 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4788286397060632046, text=adipiscing tempus adipiscing lectus Kafka consectetur tristique, userId=6045042322255923491, textV2=null, createdAt=2023-08-17T00:48:29))
2023-09-02 15:06:40 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4582653646809551106, text=pharetra ornare adipiscing dignissim Kafka lectus dignissim, userId=1340155566068985018, textV2=null, createdAt=2023-08-17T00:50:49))
2023-09-02 15:06:41 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4340588283115918666, text=ornare dolor consectetur pharetra Kafka id tempus, userId=2305143181256213510, textV2=null, createdAt=2023-08-17T00:57:39))
2023-09-02 15:06:41 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7448058916610144567, text=elit mauris tristique tempus Kafka ultricies dignissim, userId=1497854436904047918, textV2=null, createdAt=2023-08-17T01:27:09))
2023-09-02 15:06:41 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:06:42 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6672940190603932413, text=mauris turpis in ultricies Kafka sit pharetra, userId=2424243212392380138, textV2=null, createdAt=2023-08-16T00:44:19))
2023-09-02 15:06:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1386004513894839830, text=ut adipiscing sit ut Kafka mauris dignissim, userId=6775487464536810667, textV2=null, createdAt=2023-05-28T22:08:11))
2023-09-02 15:06:43 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7148654763338245159, text=varius tristique varius dolor Kafka pharetra ipsum, userId=8053957034260124944, textV2=null, createdAt=2023-05-28T23:03:41))
2023-09-02 15:06:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5052565659328911925, text=varius tempus mauris pharetra Kafka consectetur ornare, userId=3525768360571785418, textV2=null, createdAt=2023-05-28T23:54:21))
2023-09-02 15:06:44 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7371684440201844168, text=ultricies adipiscing venenatis ornare Kafka ornare venenatis, userId=4430167488512876555, textV2=null, createdAt=2023-05-29T00:03:41))
2023-09-02 15:06:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5043347830117160547, text=lectus dolor ipsum consectetur Kafka lectus dignissim, userId=3714009271288090063, textV2=null, createdAt=2023-06-03T16:06:48))
2023-09-02 15:06:45 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=853167161501375659, text=ipsum pharetra venenatis ornare Kafka mauris consectetur, userId=428070118469405286, textV2=null, createdAt=2023-06-03T16:24:18))
2023-09-02 15:06:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3845740043959524591, text=id pharetra lectus ornare Kafka adipiscing mauris, userId=6943785518624568210, textV2=null, createdAt=2023-06-03T17:13:19))
2023-09-02 15:06:46 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2406348833170075987, text=dignissim ut adipiscing mauris Kafka id lectus, userId=562202249081293075, textV2=null, createdAt=2023-06-03T17:27:19))
2023-09-02 15:06:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=267338159096854956, text=id venenatis pharetra id Kafka sit tempus, userId=3959976133110735602, textV2=null, createdAt=2023-06-03T18:24:30))
2023-09-02 15:06:47 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5311009609051418894, text=ornare dignissim varius tempus Kafka consectetur turpis, userId=2088580105075363931, textV2=null, createdAt=2023-06-03T18:49:10))
2023-09-02 15:06:47 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2867606924933511868, text=tristique ipsum id mauris Kafka lectus venenatis, userId=4004027827683478316, textV2=null, createdAt=2023-06-03T21:21:52))
2023-09-02 15:06:48 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3721441623636837187, text=varius turpis dolor adipiscing Kafka mauris consectetur, userId=2891243864871464108, textV2=null, createdAt=2023-06-03T21:34:32))
2023-09-02 15:06:48 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1744062903282972141, text=varius dignissim elit adipiscing Kafka mauris turpis, userId=2141179062492617362, textV2=null, createdAt=2023-06-03T21:48:13))
2023-09-02 15:06:49 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5478409126068534199, text=ut ipsum adipiscing mauris Kafka id elit, userId=3116613904491303988, textV2=null, createdAt=2023-05-28T21:34:30))
2023-09-02 15:06:49 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2593671047459458745, text=dignissim in consectetur ipsum Kafka varius venenatis, userId=7739854117139775308, textV2=null, createdAt=2023-05-28T21:40:20))
2023-09-02 15:06:50 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8743365335049022952, text=turpis turpis adipiscing consectetur Kafka consectetur tristique, userId=1346292785887395568, textV2=null, createdAt=2023-05-28T22:05:51))
2023-09-02 15:06:50 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4074793914189649335, text=consectetur pharetra lectus ipsum Kafka tempus in, userId=913854628164995098, textV2=null, createdAt=2023-05-28T22:25:21))
2023-09-02 15:06:51 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4661537380204063837, text=adipiscing in ut tristique Kafka varius pharetra, userId=3774675087653459750, textV2=null, createdAt=2023-05-28T22:44:11))
2023-09-02 15:06:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7977776636073081758, text=venenatis dolor ultricies ultricies Kafka lectus adipiscing, userId=5333946489337946791, textV2=null, createdAt=2023-05-28T22:47:41))
2023-09-02 15:06:52 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4120882853609252907, text=ut turpis ut adipiscing Kafka lectus pharetra, userId=9117948677006485349, textV2=null, createdAt=2023-06-03T23:05:44))
2023-09-02 15:06:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4717175674190070378, text=ultricies ipsum mauris consectetur Kafka ornare dolor, userId=5437315803790244043, textV2=null, createdAt=2023-06-03T23:32:04))
2023-09-02 15:06:53 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2179415946955671351, text=pharetra consectetur ut adipiscing Kafka consectetur lectus, userId=8146087932673071063, textV2=null, createdAt=2023-06-03T23:34:04))
2023-09-02 15:06:53 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6904331577582894374, text=dignissim ornare ut varius Kafka dolor ut, userId=6268136364235020485, textV2=null, createdAt=2023-06-03T23:50:34))
2023-09-02 15:06:53 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:06:54 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8510083465075676844, text=pharetra ipsum in pharetra Kafka consectetur id, userId=7367080137718692205, textV2=null, createdAt=2023-06-04T00:30:01))
2023-09-02 15:06:54 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1088181036536575938, text=consectetur ipsum pharetra pharetra Kafka varius adipiscing, userId=1218976239573066031, textV2=null, createdAt=2023-05-28T23:43:02))
2023-09-02 15:06:55 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2836320951629218953, text=dignissim ornare lectus adipiscing Kafka varius varius, userId=6023428192053128613, textV2=null, createdAt=2023-05-28T23:51:41))
2023-09-02 15:06:55 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4552245275785473457, text=varius elit consectetur ut Kafka adipiscing ultricies, userId=7527132985331523498, textV2=null, createdAt=2023-06-03T15:51:27))
2023-09-02 15:06:56 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2072233405843086732, text=venenatis ut tristique tristique Kafka sit elit, userId=5532997545295665599, textV2=null, createdAt=2023-06-03T16:09:28))
2023-09-02 15:06:56 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=541418376225932270, text=tempus ut ut ut Kafka tristique tristique, userId=6559024227108110437, textV2=null, createdAt=2023-06-03T16:25:28))
2023-09-02 15:06:57 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8636330091494780085, text=ornare turpis turpis consectetur Kafka venenatis lectus, userId=6788971590973072026, textV2=null, createdAt=2023-06-03T16:36:08))
2023-09-02 15:06:57 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=669211539565928430, text=tempus ornare tempus turpis Kafka ultricies varius, userId=8322131552260438160, textV2=null, createdAt=2023-06-03T16:48:28))
2023-09-02 15:06:58 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5071028538999498878, text=sit ut dignissim mauris Kafka in ipsum, userId=6453013014563214578, textV2=null, createdAt=2023-06-03T17:08:19))
2023-09-02 15:06:58 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2169327897319536125, text=dolor tristique sit lectus Kafka adipiscing mauris, userId=3963244458642957566, textV2=null, createdAt=2023-06-03T18:35:30))
2023-09-02 15:06:59 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1988333018884914903, text=pharetra mauris consectetur ipsum Kafka ut tempus, userId=3388614584494863146, textV2=null, createdAt=2023-06-03T18:40:40))
2023-09-02 15:06:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7506161232323921832, text=sit in varius mauris Kafka dolor in, userId=4854958249793896185, textV2=null, createdAt=2023-06-03T21:12:42))
2023-09-02 15:07:00 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3310292686116631671, text=elit ornare dolor dolor Kafka consectetur turpis, userId=1776593121145744100, textV2=null, createdAt=2023-06-03T21:23:42))
2023-09-02 15:07:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2459333586181245088, text=ipsum id tristique consectetur Kafka in dignissim, userId=262457390084957473, textV2=null, createdAt=2023-06-03T22:00:23))
2023-09-02 15:07:01 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5427127605150984634, text=id consectetur adipiscing venenatis Kafka turpis turpis, userId=1870102698050716886, textV2=null, createdAt=2023-08-17T01:41:39))
2023-09-02 15:07:02 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8242645277292982585, text=pharetra tristique in lectus Kafka tristique lectus, userId=5519105665365427195, textV2=null, createdAt=2023-08-17T01:43:49))
2023-09-02 15:07:02 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6900893092473435099, text=varius in venenatis tristique Kafka adipiscing sit, userId=2697450642734828830, textV2=null, createdAt=2023-08-17T01:43:59))
2023-09-02 15:07:03 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5578685157182096901, text=pharetra ipsum mauris in Kafka elit dignissim, userId=1494477124812963668, textV2=null, createdAt=2023-09-01T02:14))
2023-09-02 15:07:03 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1322203481641113582, text=elit in tempus lectus Kafka elit elit sit, userId=2346779195460162225, textV2=null, createdAt=2023-06-03T22:17:03))
2023-09-02 15:07:04 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9058939095403004137, text=adipiscing lectus sit ipsum Kafka tristique dignissim adipiscing, userId=2451384716263745519, textV2=null, createdAt=2023-06-03T22:17:13))
2023-09-02 15:07:04 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4778814421031478629, text=venenatis lectus lectus tristique Kafka elit ornare elit, userId=7104521204509687234, textV2=null, createdAt=2023-06-03T22:45:23))
2023-09-02 15:07:05 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2645267710561492768, text=ornare turpis turpis lectus Kafka venenatis pharetra lectus, userId=7831083396250279851, textV2=null, createdAt=2023-06-03T23:02:34))
2023-09-02 15:07:05 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8920477546348042675, text=ultricies venenatis venenatis in Kafka dignissim dignissim ultricies, userId=2272816936808369267, textV2=null, createdAt=2023-06-03T23:24:34))
2023-09-02 15:07:06 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3659899143963155845, text=ultricies ipsum pharetra adipiscing Kafka in dignissim lectus, userId=6527594586089494459, textV2=null, createdAt=2023-06-03T23:42:34))
2023-09-02 15:07:06 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:07:06 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1892228973918244316, text=tristique tristique adipiscing tristique Kafka ut in ornare, userId=6626419323445250835, textV2=null, createdAt=2023-06-03T21:32:42))
2023-09-02 15:07:07 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2959645611200961503, text=pharetra in adipiscing dolor Kafka in ornare varius, userId=6075852072168645100, textV2=null, createdAt=2023-06-03T21:50:53))
2023-09-02 15:07:07 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3785459718058235631, text=adipiscing id pharetra venenatis Kafka dignissim tempus elit, userId=344234052710005122, textV2=null, createdAt=2023-06-03T21:57:13))
2023-09-02 15:07:08 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3726284243747077503, text=tempus venenatis tristique ipsum Kafka lectus dignissim consectetur, userId=4483844055567097842, textV2=null, createdAt=2023-05-28T23:57:31))
2023-09-02 15:07:08 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8371964508292531339, text=consectetur ut id dolor Kafka venenatis ut ut, userId=4322378185308743673, textV2=null, createdAt=2023-06-03T18:00:59))
2023-09-02 15:07:09 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8631350248266872683, text=tristique adipiscing id lectus Kafka tristique ut in, userId=6685482350428679235, textV2=null, createdAt=2023-06-03T18:01:39))
2023-09-02 15:07:09 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5630654494625421295, text=varius sit elit in Kafka id turpis pharetra, userId=11191560706966806, textV2=null, createdAt=2023-06-03T18:11:40))
2023-09-02 15:07:10 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9104983916952612363, text=ut tempus mauris mauris Kafka ipsum tristique tristique, userId=2349999050510097227, textV2=null, createdAt=2023-06-03T18:44:30))
2023-09-02 15:07:10 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4983425324594760099, text=ornare ultricies elit pharetra Kafka pharetra in turpis, userId=9030320780820522719, textV2=null, createdAt=2023-06-03T18:57:10))
2023-09-02 15:07:11 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=171163742668940426, text=consectetur id ipsum varius Kafka sit ipsum turpis, userId=2090739552536528306, textV2=null, createdAt=2023-06-04T00:30:51))
2023-09-02 15:07:11 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6665514155420454890, text=mauris varius elit dolor Kafka lectus consectetur ipsum, userId=6247838162713326631, textV2=null, createdAt=2023-06-04T00:45:02))
2023-09-02 15:07:12 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7942342098042156074, text=ut adipiscing tempus ornare Kafka elit dolor consectetur, userId=730329800266401538, textV2=null, createdAt=2023-06-03T16:30:48))
2023-09-02 15:07:12 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4863493793560697193, text=sit id ornare ornare Kafka ultricies tempus turpis, userId=8431294535635558267, textV2=null, createdAt=2023-06-03T16:45:58))
2023-09-02 15:07:13 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1524609474285501784, text=adipiscing tristique in adipiscing Kafka varius tristique turpis, userId=8316000937675667535, textV2=null, createdAt=2023-05-28T22:16:21))
2023-09-02 15:07:13 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7903342907645342748, text=tempus varius varius ornare Kafka varius pharetra tempus, userId=3477105914919410153, textV2=null, createdAt=2023-06-03T16:53:09))
2023-09-02 15:07:14 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8855795218746973707, text=elit ipsum elit in Kafka dignissim varius in, userId=3217623455936475237, textV2=null, createdAt=2023-06-03T16:57:19))
2023-09-02 15:07:14 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5722118487763529663, text=in lectus elit pharetra Kafka adipiscing sit varius, userId=5519260367049816556, textV2=null, createdAt=2023-06-03T17:06:59))
2023-09-02 15:07:15 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8106902466187810940, text=ut ornare venenatis ut Kafka id varius adipiscing, userId=6297048066640301995, textV2=null, createdAt=2023-06-03T17:28:29))
2023-09-02 15:07:15 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8515828870026459332, text=mauris dignissim tristique tristique Kafka elit tempus ipsum, userId=6836985405305418530, textV2=null, createdAt=2023-06-03T17:52:39))
2023-09-02 15:07:16 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5795427187635917771, text=elit adipiscing ornare adipiscing Kafka in elit pharetra, userId=2741459991559424438, textV2=null, createdAt=2023-06-03T22:21:33))
2023-09-02 15:07:16 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3836697029023338168, text=turpis turpis adipiscing venenatis Kafka in elit dolor, userId=2022443023307917226, textV2=null, createdAt=2023-06-03T22:28:33))
2023-09-02 15:07:17 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7610762264711719207, text=ornare ultricies in lectus Kafka ut consectetur lectus, userId=7720143120020643736, textV2=null, createdAt=2023-06-04T00:44:12))
2023-09-02 15:07:17 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=135953827361388314, text=elit sit in ultricies Kafka id ipsum adipiscing, userId=1365307281583207520, textV2=null, createdAt=2023-06-04T12:18:07))
2023-09-02 15:07:18 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=538589615608575847, text=ultricies ut ut mauris Kafka sit in elit, userId=389292590364406934, textV2=null, createdAt=2023-08-16T00:04:38))
2023-09-02 15:07:18 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:07:18 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8611753480058612594, text=in sit ut ut Kafka lectus sit ipsum, userId=3695865352415399069, textV2=null, createdAt=2023-08-16T00:02:48))
2023-09-02 15:07:19 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5399380987083764072, text=varius ornare tristique ornare Kafka adipiscing lectus in, userId=8977884788710156982, textV2=null, createdAt=2023-08-16T00:33:38))
2023-09-02 15:07:19 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3395334751751489671, text=in ut id ultricies Kafka dignissim id id, userId=1721071751718146450, textV2=null, createdAt=2023-08-17T00:43:58))
2023-09-02 15:07:20 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=81997319167532525, text=tempus sit venenatis ornare Kafka adipiscing consectetur in, userId=88585148327590627, textV2=null, createdAt=2023-08-17T00:48:49))
2023-09-02 15:07:20 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8952042097010730480, text=ut tristique ornare dignissim Kafka in lectus sit, userId=6855083603508382815, textV2=null, createdAt=2023-08-17T00:52:49))
2023-09-02 15:07:21 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8390915456000686851, text=dignissim ipsum dolor mauris Kafka dolor tempus ornare, userId=2076427541683209019, textV2=null, createdAt=2023-08-17T01:17:59))
2023-09-02 15:07:21 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7068508704294114772, text=id ornare adipiscing pharetra Kafka dolor dolor sit, userId=7927196748814643614, textV2=null, createdAt=2023-08-17T01:28:29))
2023-09-02 15:07:22 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=479679211199017132, text=pharetra ipsum sit turpis Kafka tristique ultricies sit, userId=8790895562709850464, textV2=null, createdAt=2023-08-16T00:47:49))
2023-09-02 15:07:22 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3609685763706510428, text=id tristique venenatis tempus Kafka pharetra varius varius, userId=6134209204321571553, textV2=null, createdAt=2023-08-16T00:49:29))
2023-09-02 15:07:23 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7654277939610393436, text=tempus elit adipiscing venenatis Kafka tristique varius venenatis, userId=2003217536649620202, textV2=null, createdAt=2023-05-28T21:48:10))
2023-09-02 15:07:23 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5236396988501080469, text=dignissim id dignissim venenatis Kafka sit adipiscing tristique, userId=7415148245548020986, textV2=null, createdAt=2023-05-28T22:28:41))
2023-09-02 15:07:24 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4138273509839661787, text=ut lectus venenatis sit Kafka in turpis dolor, userId=827486590262875646, textV2=null, createdAt=2023-05-28T22:53:11))
2023-09-02 15:07:24 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=232410711843175978, text=id ornare adipiscing ipsum Kafka turpis dignissim consectetur, userId=7039348291046798281, textV2=null, createdAt=2023-05-28T23:10:41))
2023-09-02 15:07:25 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2605250327081438617, text=venenatis adipiscing turpis consectetur Kafka venenatis tempus in, userId=7908426979418604947, textV2=null, createdAt=2023-05-28T23:18:21))
2023-09-02 15:07:25 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6786934204786501622, text=ipsum elit consectetur id Kafka dignissim id turpis, userId=2212195968624559223, textV2=null, createdAt=2023-05-28T23:22:01))
2023-09-02 15:07:26 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=110844308307044674, text=venenatis dignissim tristique turpis Kafka sit sit ipsum, userId=7807204562451245247, textV2=null, createdAt=2023-05-28T23:46:22))
2023-09-02 15:07:26 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=438483806829703616, text=ut tristique turpis sit Kafka lectus turpis venenatis, userId=6983499296663644767, textV2=null, createdAt=2023-05-29T00:00:41))
2023-09-02 15:07:27 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6413443536863233716, text=pharetra mauris tempus pharetra Kafka ornare ornare mauris, userId=7462002389180884174, textV2=null, createdAt=2023-05-29T00:03:11))
2023-09-02 15:07:27 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5287126127966176234, text=elit lectus tempus ipsum Kafka tempus venenatis turpis, userId=2326579158606223914, textV2=null, createdAt=2023-06-03T16:08:08))
2023-09-02 15:07:28 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2631896787998602739, text=ornare pharetra id ultricies Kafka tempus turpis pharetra, userId=9116718153784014235, textV2=null, createdAt=2023-06-03T16:09:18))
2023-09-02 15:07:28 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=20158188258257921, text=ornare dolor id in Kafka pharetra mauris id, userId=6661247906199848397, textV2=null, createdAt=2023-06-03T16:38:58))
2023-09-02 15:07:29 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5883869726027646081, text=id venenatis turpis ultricies Kafka in consectetur ornare, userId=2730690389773524940, textV2=null, createdAt=2023-06-03T17:00:29))
2023-09-02 15:07:29 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1837577419288840859, text=in mauris mauris sit Kafka venenatis dolor ultricies, userId=5262316509834168271, textV2=null, createdAt=2023-06-03T18:03:09))
2023-09-02 15:07:30 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=878662949708719530, text=ut ornare lectus ipsum Kafka ut varius id, userId=6172533263743286342, textV2=null, createdAt=2023-06-03T18:03:59))
2023-09-02 15:07:30 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:07:30 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6361234637670121516, text=elit ultricies varius ornare Kafka dignissim dolor mauris, userId=8451593588965760409, textV2=null, createdAt=2023-06-03T18:21:40))
2023-09-02 15:07:31 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5741312302545211304, text=tempus dolor lectus ipsum Kafka venenatis ipsum consectetur, userId=8509980693982066244, textV2=null, createdAt=2023-06-03T18:55:10))
2023-09-02 15:07:31 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1146697348939523916, text=pharetra dolor mauris adipiscing Kafka ut sit mauris, userId=3528636040520947180, textV2=null, createdAt=2023-06-03T19:07))
2023-09-02 15:07:32 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8914526236654197294, text=sit elit in ut Kafka pharetra ultricies varius, userId=465986800078770820, textV2=null, createdAt=2023-06-03T21:06:02))
2023-09-02 15:07:32 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2469454686931027678, text=dolor varius ornare in Kafka dolor pharetra venenatis, userId=7002341920508327315, textV2=null, createdAt=2023-06-03T21:25:02))
2023-09-02 15:07:33 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5214123844053447902, text=pharetra lectus adipiscing ipsum Kafka dignissim adipiscing ut, userId=5484302329491852630, textV2=null, createdAt=2023-06-03T21:51:33))
2023-09-02 15:07:33 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2385889326212916057, text=ut tristique elit mauris Kafka venenatis elit lectus, userId=1090875865198974417, textV2=null, createdAt=2023-05-28T21:45:40))
2023-09-02 15:07:34 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8977565653472322847, text=lectus in mauris id Kafka dolor dignissim id, userId=2020362337583809129, textV2=null, createdAt=2023-05-28T21:59:41))
2023-09-02 15:07:34 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3932910605631307371, text=venenatis ut ipsum in Kafka id varius mauris, userId=7865441532509523293, textV2=null, createdAt=2023-05-28T22:09:01))
2023-09-02 15:07:35 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1479344399702875534, text=pharetra varius ut sit Kafka adipiscing mauris lectus, userId=8724338252018220267, textV2=null, createdAt=2023-05-28T22:49:41))
2023-09-02 15:07:35 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=147055029672553327, text=venenatis ipsum lectus ornare Kafka ipsum turpis tristique, userId=7723162488738964582, textV2=null, createdAt=2023-05-28T23:28:02))
2023-09-02 15:07:36 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1053368373533230215, text=varius adipiscing varius ipsum Kafka adipiscing ornare pharetra, userId=4007280288824150472, textV2=null, createdAt=2023-05-28T23:29:52))
2023-09-02 15:07:36 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3850981521733250416, text=turpis ipsum lectus tristique Kafka mauris sit ut, userId=1950676855631752024, textV2=null, createdAt=2023-06-03T23:30:04))
2023-09-02 15:07:37 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1036433606254317691, text=turpis ornare ipsum ipsum Kafka dignissim elit ornare, userId=1885024375704147795, textV2=null, createdAt=2023-06-03T23:37:14))
2023-09-02 15:07:37 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=218343190325116085, text=venenatis tempus pharetra in Kafka lectus varius ornare, userId=4675938040155937568, textV2=null, createdAt=2023-06-04T00:35:01))
2023-09-02 15:07:38 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8114598058176771947, text=venenatis venenatis dolor dolor Kafka varius in adipiscing, userId=5219816525754563406, textV2=null, createdAt=2023-06-04T00:47:12))
2023-09-02 15:07:38 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4041521466336365366, text=turpis pharetra ut tristique Kafka consectetur in tempus, userId=2823103326627424394, textV2=null, createdAt=2023-05-29T00:11:11))
2023-09-02 15:07:39 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2176430029026971099, text=mauris pharetra in tristique Kafka pharetra consectetur venenatis, userId=2099911053869200550, textV2=null, createdAt=2023-05-29T00:16:21))
2023-09-02 15:07:39 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2978220156412482301, text=ultricies mauris pharetra adipiscing Kafka ut elit ornare, userId=8889403435878187537, textV2=null, createdAt=2023-06-03T16:23:58))
2023-09-02 15:07:40 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4731450494060987449, text=venenatis varius id dignissim Kafka in venenatis in, userId=4521491402276791370, textV2=null, createdAt=2023-06-03T16:30:38))
2023-09-02 15:07:40 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3890291624790907052, text=varius varius id ornare Kafka ipsum id adipiscing, userId=5288827204444045751, textV2=null, createdAt=2023-06-03T16:47:08))
2023-09-02 15:07:41 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4142981558091847497, text=lectus dolor ultricies lectus Kafka venenatis dignissim consectetur, userId=5910600707228306344, textV2=null, createdAt=2023-06-03T16:54:09))
2023-09-02 15:07:41 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8218372183356793266, text=consectetur elit turpis dolor Kafka ornare sit dignissim, userId=7807686300187276919, textV2=null, createdAt=2023-06-03T17:50:29))
2023-09-02 15:07:42 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8245675007026603160, text=elit tristique dignissim id Kafka varius mauris id, userId=1781695514798018907, textV2=null, createdAt=2023-06-03T18:20:40))
2023-09-02 15:07:42 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:07:42 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2077034631661212433, text=elit sit consectetur ornare Kafka dignissim elit varius, userId=4864150197792610356, textV2=null, createdAt=2023-06-03T18:23:30))
2023-09-02 15:07:43 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7856366708196203609, text=in mauris in elit Kafka dignissim sit tristique, userId=1910159502911927821, textV2=null, createdAt=2023-06-03T18:45:50))
2023-09-02 15:07:43 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2958334632304393227, text=venenatis turpis id tristique Kafka sit mauris varius, userId=8174727351139898763, textV2=null, createdAt=2023-06-03T19:14:30))
2023-09-02 15:07:44 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5418987909121406615, text=ornare in tristique tristique Kafka id turpis ultricies, userId=5449552904216162603, textV2=null, createdAt=2023-08-17T01:36:59))
2023-09-02 15:07:44 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6837913048973845038, text=consectetur tristique lectus ornare Kafka varius ipsum ipsum, userId=1190802202342533939, textV2=null, createdAt=2023-08-17T01:38:49))
2023-09-02 15:07:45 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3790523803114142646, text=ornare tempus pharetra ipsum Kafka varius ornare dignissim, userId=7114710960055970096, textV2=null, createdAt=2023-08-17T01:41:59))
2023-09-02 15:07:45 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=287159310667974517, text=dignissim pharetra mauris elit Kafka tempus adipiscing dolor, userId=2432598191920111970, textV2=null, createdAt=2023-08-17T01:43:29))
2023-09-02 15:07:46 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2412484058170296102, text=tristique varius dignissim ut Kafka id tempus tempus, userId=846867525360699762, textV2=null, createdAt=2023-09-01T02:20:51))
2023-09-02 15:07:46 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5371072270305623209, text=ipsum lectus in venenatis tempus Kafka id ornare ornare, userId=4674286955181664359, textV2=null, createdAt=2023-06-03T22:16:03))
2023-09-02 15:07:47 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=865162157362208852, text=elit turpis pharetra adipiscing ipsum Kafka ultricies tristique elit, userId=7685201254510574578, textV2=null, createdAt=2023-06-03T22:34:23))
2023-09-02 15:07:47 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3084807200710909125, text=tempus mauris in elit ut Kafka dignissim ultricies ornare, userId=831768068085067090, textV2=null, createdAt=2023-06-03T23:44:34))
2023-09-02 15:07:48 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2395024456950014698, text=pharetra in in varius ornare Kafka ipsum venenatis adipiscing, userId=1096749913403658421, textV2=null, createdAt=2023-05-28T23:07:01))
2023-09-02 15:07:48 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7497963408773285407, text=adipiscing ultricies in ornare adipiscing Kafka id sit ultricies, userId=5859812810694490933, textV2=null, createdAt=2023-05-28T23:10:01))
2023-09-02 15:07:49 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4439560963105102585, text=tempus consectetur ultricies turpis lectus Kafka venenatis sit ornare, userId=2745975292744786501, textV2=null, createdAt=2023-05-28T23:32:42))
2023-09-02 15:07:49 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=190006428844019685, text=consectetur pharetra ultricies tempus adipiscing Kafka ut dignissim sit, userId=7156925614599821605, textV2=null, createdAt=2023-05-28T23:36:22))
2023-09-02 15:07:50 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7521686038202439024, text=turpis tristique lectus pharetra ultricies Kafka tristique id ornare, userId=3567609210862151335, textV2=null, createdAt=2023-05-28T23:40:32))
2023-09-02 15:07:50 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7674951885192836544, text=tempus ultricies dignissim tristique ultricies Kafka ut ornare dignissim, userId=2323548177773565670, textV2=null, createdAt=2023-06-03T18:03:29))
2023-09-02 15:07:51 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3019013139385667226, text=elit sit varius dolor id Kafka ornare in elit, userId=5961051861751516077, textV2=null, createdAt=2023-06-03T18:05:39))
2023-09-02 15:07:51 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6305730108869486342, text=mauris ornare ornare consectetur id Kafka dignissim venenatis sit, userId=2159286126115257159, textV2=null, createdAt=2023-06-04T00:16:01))
2023-09-02 15:07:52 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5585133433006872890, text=in mauris sit turpis adipiscing Kafka adipiscing ipsum pharetra, userId=5405345483768008513, textV2=null, createdAt=2023-06-04T00:44:02))
2023-09-02 15:07:52 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5409452785583943760, text=venenatis varius ut ut varius Kafka ornare dolor venenatis, userId=6470827115158994297, textV2=null, createdAt=2023-06-03T15:49:17))
2023-09-02 15:07:53 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7246105099389068905, text=tempus venenatis mauris pharetra in Kafka pharetra consectetur ultricies, userId=8702803693214494788, textV2=null, createdAt=2023-06-03T16:23:18))
2023-09-02 15:07:53 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5660221637924715802, text=id ultricies ornare tristique varius Kafka ut pharetra mauris, userId=5862496601957562813, textV2=null, createdAt=2023-06-03T16:38:38))
2023-09-02 15:07:54 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3415951372462741170, text=venenatis dignissim lectus turpis ultricies Kafka venenatis dolor ornare, userId=4892258216523615955, textV2=null, createdAt=2023-05-28T21:53:10))
2023-09-02 15:07:54 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:07:54 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5433398072959951139, text=tempus consectetur ut ut dignissim Kafka ornare ornare id, userId=5757988494769829559, textV2=null, createdAt=2023-05-28T22:26:11))
2023-09-02 15:07:55 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4016276869532073646, text=mauris lectus ultricies tristique pharetra Kafka mauris tempus id, userId=8644533477228054830, textV2=null, createdAt=2023-05-28T22:42:21))
2023-09-02 15:07:55 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6473628602624732698, text=tristique ornare ultricies elit turpis Kafka in lectus adipiscing, userId=9058524370162030876, textV2=null, createdAt=2023-05-28T22:59:11))
2023-09-02 15:07:56 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6437473165748391646, text=ipsum dolor consectetur pharetra tempus Kafka ultricies ornare id, userId=7534905014056363081, textV2=null, createdAt=2023-06-03T17:14:49))
2023-09-02 15:07:56 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3797941968291205822, text=elit mauris mauris consectetur adipiscing Kafka ut mauris turpis, userId=7481112218070748453, textV2=null, createdAt=2023-06-03T22:44:23))
2023-09-02 15:07:57 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2918186885918690794, text=tristique adipiscing turpis ornare sit Kafka sit dolor consectetur, userId=3934344444067508973, textV2=null, createdAt=2023-06-03T22:49:43))
2023-09-02 15:07:57 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4493293870120153694, text=dignissim turpis lectus tristique ut Kafka dignissim dignissim varius, userId=5739389193793107943, textV2=null, createdAt=2023-06-03T22:50:53))
2023-09-02 15:07:58 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6585697405397044400, text=varius dignissim elit dolor pharetra Kafka venenatis id turpis, userId=4876259129373640675, textV2=null, createdAt=2023-06-03T22:54:23))
2023-09-02 15:07:58 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1167127303368000620, text=dignissim ultricies tempus ultricies tristique Kafka varius dignissim varius, userId=2968549325120869358, textV2=null, createdAt=2023-06-03T22:59:43))
2023-09-02 15:07:59 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6251626253394950866, text=adipiscing in pharetra dolor ipsum Kafka id sit adipiscing, userId=1891429018024233985, textV2=null, createdAt=2023-06-03T23:06:44))
2023-09-02 15:07:59 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2932495315955810202, text=sit ipsum consectetur varius turpis Kafka in dolor consectetur, userId=5542571432076626295, textV2=null, createdAt=2023-06-03T23:28:14))
2023-09-02 15:08:00 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2793615163690854537, text=ut turpis lectus dolor sit Kafka ornare adipiscing venenatis, userId=6125899141662944617, textV2=null, createdAt=2023-06-03T23:34:34))
2023-09-02 15:08:00 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8763577161440919174, text=adipiscing turpis pharetra mauris consectetur Kafka tempus pharetra id, userId=862542030707757509, textV2=null, createdAt=2023-06-03T23:45:44))
2023-09-02 15:08:01 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2055752124077128892, text=pharetra ultricies elit ut venenatis Kafka sit consectetur dignissim, userId=2380536906952662236, textV2=null, createdAt=2023-06-03T23:55:04))
2023-09-02 15:08:01 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3957792237261085688, text=dolor ornare varius sit mauris Kafka elit elit dolor, userId=1922940888599354543, textV2=null, createdAt=2023-06-04T00:00:34))
2023-09-02 15:08:02 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4595452130890465093, text=lectus ornare tempus venenatis consectetur Kafka dolor dignissim venenatis, userId=6610240897905378499, textV2=null, createdAt=2023-06-04T00:31:21))
2023-09-02 15:08:02 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=407103238248259554, text=tristique dignissim lectus pharetra dolor Kafka ut ultricies ornare, userId=7225966907845662600, textV2=null, createdAt=2023-06-04T00:41:51))
2023-09-02 15:08:03 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7556451266367330305, text=adipiscing sit sit pharetra adipiscing Kafka pharetra tempus dignissim, userId=4311920977795534120, textV2=null, createdAt=2023-06-04T00:49:32))
2023-09-02 15:08:03 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2728760954602767561, text=venenatis ut in ut adipiscing Kafka id lectus varius, userId=1421357758728571250, textV2=null, createdAt=2023-06-04T00:50:02))
2023-09-02 15:08:04 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8451949999103880308, text=varius sit ipsum lectus mauris Kafka ultricies mauris pharetra, userId=7599939444095249063, textV2=null, createdAt=2023-06-04T00:59:42))
2023-09-02 15:08:04 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4370474500797039657, text=venenatis lectus ornare tristique tempus Kafka dignissim venenatis consectetur, userId=2402225915809247916, textV2=null, createdAt=2023-06-04T12:18:57))
2023-09-02 15:08:05 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2351856475341593848, text=sit consectetur ultricies lectus elit Kafka pharetra adipiscing varius, userId=8167580854395202734, textV2=null, createdAt=2023-06-04T12:19:17))
2023-09-02 15:08:05 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7914863812577047675, text=adipiscing tristique tempus ornare turpis Kafka ut dignissim mauris, userId=3651708130750938510, textV2=null, createdAt=2023-06-04T12:19:27))
2023-09-02 15:08:06 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8390004364271177066, text=ultricies adipiscing elit venenatis tempus Kafka ut ut venenatis, userId=5751944868316403865, textV2=null, createdAt=2023-08-16T00:17:48))
2023-09-02 15:08:06 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:08:06 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5362892004920997675, text=turpis ultricies sit ultricies sit Kafka venenatis tristique tristique, userId=1255630545718300892, textV2=null, createdAt=2023-08-16T00:00:18))
2023-09-02 15:08:07 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8487913385592802800, text=venenatis ipsum in mauris mauris Kafka adipiscing varius venenatis, userId=6234549102879190488, textV2=null, createdAt=2023-08-15T23:54:18))
2023-09-02 15:08:07 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3501383256239863772, text=lectus venenatis ultricies lectus ultricies Kafka turpis sit ut, userId=8094104726553979670, textV2=null, createdAt=2023-08-15T23:54:58))
2023-09-02 15:08:08 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8565568675596110336, text=varius lectus turpis ultricies elit Kafka varius dolor elit, userId=3179128327072184598, textV2=null, createdAt=2023-08-16T00:27:38))
2023-09-02 15:08:08 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3285945293783385034, text=lectus mauris tristique sit turpis Kafka varius ultricies varius, userId=6974592425068453696, textV2=null, createdAt=2023-08-17T00:51:49))
2023-09-02 15:08:09 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3418738658347961370, text=mauris consectetur venenatis dolor venenatis Kafka ornare adipiscing ut, userId=8429012072517436699, textV2=null, createdAt=2023-08-17T00:55:49))
2023-09-02 15:08:09 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8835811041119207911, text=tristique mauris ipsum varius ultricies Kafka ut dolor varius, userId=2024887900226913058, textV2=null, createdAt=2023-08-17T01:07:59))
2023-09-02 15:08:10 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1720811114470197684, text=ipsum dolor venenatis tristique elit Kafka turpis sit ornare, userId=6340156322226658075, textV2=null, createdAt=2023-08-17T01:14:09))
2023-09-02 15:08:10 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6530602390561909615, text=sit ornare mauris pharetra mauris Kafka lectus varius elit, userId=3645932965569344667, textV2=null, createdAt=2023-08-16T00:46:09))
2023-09-02 15:08:11 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8246390607183692147, text=mauris turpis turpis varius sit Kafka pharetra lectus sit, userId=6061130005256508546, textV2=null, createdAt=2023-08-16T00:43:19))
2023-09-02 15:08:11 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6288505978425040732, text=lectus venenatis varius ultricies varius Kafka dolor lectus varius, userId=5113949518489066591, textV2=null, createdAt=2023-05-28T22:14:21))
2023-09-02 15:08:12 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6820426159957107545, text=pharetra mauris venenatis mauris in Kafka elit mauris mauris, userId=63904329371979356, textV2=null, createdAt=2023-05-28T23:10:21))
2023-09-02 15:08:12 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4849418565859014766, text=adipiscing varius sit id lectus Kafka ipsum tristique ornare, userId=7012298845641029659, textV2=null, createdAt=2023-05-28T23:19:21))
2023-09-02 15:08:13 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6229047629113571382, text=mauris varius ut dignissim ornare Kafka tristique venenatis ut, userId=3057469058491300764, textV2=null, createdAt=2023-05-28T23:51:01))
2023-09-02 15:08:13 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3703542133669181034, text=ultricies adipiscing elit in ut Kafka ipsum venenatis pharetra, userId=1977341476309350185, textV2=null, createdAt=2023-05-29T00:15:41))
2023-09-02 15:08:14 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=258105009147401960, text=adipiscing venenatis id turpis lectus Kafka ornare elit dolor, userId=2164174099420770028, textV2=null, createdAt=2023-06-03T16:30:58))
2023-09-02 15:08:14 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1817728609579139080, text=lectus elit pharetra elit tristique Kafka tristique sit consectetur, userId=6108639631626475654, textV2=null, createdAt=2023-06-03T16:39:28))
2023-09-02 15:08:15 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5488177047498637621, text=ultricies ultricies tristique ornare varius Kafka ut dignissim dolor, userId=4783600826232358560, textV2=null, createdAt=2023-06-03T17:05:09))
2023-09-02 15:08:15 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5720698687451491200, text=dignissim dolor ultricies adipiscing tristique Kafka dignissim consectetur adipiscing, userId=1970481868707953956, textV2=null, createdAt=2023-06-03T17:18:19))
2023-09-02 15:08:16 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4114608896671621403, text=ornare lectus adipiscing turpis tristique Kafka tempus ut pharetra, userId=3207473851041062768, textV2=null, createdAt=2023-06-03T17:34:39))
2023-09-02 15:08:16 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4316510405936545840, text=tempus tempus tristique tristique tempus Kafka elit elit pharetra, userId=3634170114539434647, textV2=null, createdAt=2023-06-03T17:53:29))
2023-09-02 15:08:17 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=472482918556519012, text=varius tempus mauris ultricies lectus Kafka tristique pharetra ut, userId=4255140697008684227, textV2=null, createdAt=2023-06-03T18:01:19))
2023-09-02 15:08:17 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5417039502197809569, text=ipsum dolor in mauris ultricies Kafka mauris consectetur lectus, userId=999822376414537263, textV2=null, createdAt=2023-06-03T18:18:20))
2023-09-02 15:08:18 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5619369342237578441, text=dolor tristique ut lectus elit Kafka pharetra mauris tristique, userId=6886503352970694327, textV2=null, createdAt=2023-06-03T18:22:10))
2023-09-02 15:08:18 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:08:18 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7993816482621877114, text=varius dolor mauris lectus venenatis Kafka ipsum ut adipiscing, userId=3744961069816083684, textV2=null, createdAt=2023-06-03T21:16:22))
2023-09-02 15:08:19 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2095763620730470975, text=dignissim elit lectus consectetur sit Kafka turpis mauris sit, userId=6507513372661540680, textV2=null, createdAt=2023-06-03T21:47:43))
2023-09-02 15:08:19 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2731977330702370894, text=pharetra venenatis venenatis dignissim lectus Kafka lectus sit adipiscing, userId=870961667794298874, textV2=null, createdAt=2023-06-03T21:52:53))
2023-09-02 15:08:20 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7840973151390416902, text=adipiscing adipiscing mauris adipiscing lectus Kafka mauris lectus ornare, userId=343071343033411790, textV2=null, createdAt=2023-06-03T22:15:23))
2023-09-02 15:08:20 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6345951147786281514, text=sit elit consectetur ultricies tempus Kafka ut ipsum turpis, userId=904299262564605985, textV2=null, createdAt=2023-06-03T22:40:03))
2023-09-02 15:08:21 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6834843141473962511, text=venenatis dolor in in turpis Kafka ipsum mauris dolor, userId=5729822795519508152, textV2=null, createdAt=2023-05-28T22:21:11))
2023-09-02 15:08:21 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8322864859488720836, text=tempus ornare dolor ut tristique Kafka tempus venenatis ipsum, userId=99903091067317396, textV2=null, createdAt=2023-05-28T22:21:21))
2023-09-02 15:08:22 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4707881205023787553, text=dignissim id varius pharetra ultricies Kafka id adipiscing sit, userId=5981165798715484737, textV2=null, createdAt=2023-05-28T22:23:01))
2023-09-02 15:08:22 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3708987545858075386, text=elit id adipiscing elit turpis Kafka turpis pharetra lectus, userId=8210127924433616789, textV2=null, createdAt=2023-05-28T22:52:21))
2023-09-02 15:08:23 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5095422507438715962, text=mauris varius adipiscing ultricies tristique Kafka in mauris in, userId=7599854877035158971, textV2=null, createdAt=2023-05-28T22:59:41))
2023-09-02 15:08:23 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8148521823897338209, text=in adipiscing venenatis ornare dolor Kafka ut ultricies dolor, userId=2332765278407792664, textV2=null, createdAt=2023-05-28T23:13:41))
2023-09-02 15:08:24 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5892317495816966014, text=in dignissim pharetra adipiscing consectetur Kafka turpis ornare ipsum, userId=7488322297064062098, textV2=null, createdAt=2023-06-03T23:26:44))
2023-09-02 15:08:24 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5481855310889914512, text=mauris varius dolor ultricies venenatis Kafka tristique ultricies pharetra, userId=7344448955401756193, textV2=null, createdAt=2023-06-03T23:33:54))
2023-09-02 15:08:25 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4297632254506206062, text=varius dignissim tempus ultricies tristique Kafka elit pharetra ut, userId=8656824102424179007, textV2=null, createdAt=2023-05-29T00:20:41))
2023-09-02 15:08:25 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1780065206466691922, text=dolor sit in id adipiscing Kafka pharetra id tempus, userId=1268532450654246846, textV2=null, createdAt=2023-06-03T15:56:38))
2023-09-02 15:08:26 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5036704218425266498, text=ultricies ultricies ultricies id sit Kafka pharetra lectus id, userId=7920479524788567344, textV2=null, createdAt=2023-06-03T16:01:38))
2023-09-02 15:08:26 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4976359076859041125, text=varius dignissim dolor tristique venenatis Kafka dolor ipsum elit, userId=5344997049148208192, textV2=null, createdAt=2023-06-03T16:04:38))
2023-09-02 15:08:27 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1561811927506867637, text=sit dignissim lectus id dolor Kafka ultricies consectetur mauris, userId=8113795491384886999, textV2=null, createdAt=2023-06-03T16:16:48))
2023-09-02 15:08:27 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6300183406199309114, text=venenatis varius ultricies varius ut Kafka id pharetra ornare, userId=8759915960001299662, textV2=null, createdAt=2023-06-03T18:05:09))
2023-09-02 15:08:28 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4921392633920994513, text=adipiscing dignissim elit sit dolor Kafka sit ultricies ornare, userId=8272179682796248716, textV2=null, createdAt=2023-06-03T18:24))
2023-09-02 15:08:28 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=65491306250685831, text=turpis venenatis venenatis adipiscing tristique Kafka tempus in consectetur, userId=974324064443413731, textV2=null, createdAt=2023-06-03T21:14:22))
2023-09-02 15:08:29 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1043271148582098045, text=dignissim ornare varius lectus dolor Kafka consectetur mauris tristique, userId=7345230431422855965, textV2=null, createdAt=2023-06-03T22:04:43))
2023-09-02 15:08:29 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9079968618265247493, text=ipsum turpis ut turpis elit Kafka dolor dignissim pharetra, userId=8521289329942195181, textV2=null, createdAt=2023-06-03T22:09:33))
2023-09-02 15:08:30 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6794383990523247440, text=mauris id ipsum in sit Kafka elit dolor ultricies, userId=6713142377429004362, textV2=null, createdAt=2023-06-03T22:09:53))
2023-09-02 15:08:30 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:08:31 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6590441937287588877, text=ut turpis turpis lectus lectus Kafka dolor id ornare, userId=701316383803833836, textV2=null, createdAt=2023-09-01T02:16:31))
2023-09-02 15:08:31 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2938180960252288366, text=mauris in consectetur ut ultricies Kafka tristique turpis elit, userId=5990076801485892928, textV2=null, createdAt=2023-09-01T02:20:11))
2023-09-02 15:08:32 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2371616395897708222, text=pharetra mauris in ornare tristique Kafka ultricies in ultricies, userId=9183976905133705482, textV2=null, createdAt=2023-09-01T02:20:31))
2023-09-02 15:08:32 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9067672077936623325, text=tempus tempus mauris mauris ut Kafka mauris lectus varius ipsum, userId=3428403241899267274, textV2=null, createdAt=2023-06-03T22:22:53))
2023-09-02 15:08:33 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7948622598491239151, text=ipsum dignissim dolor in sit Kafka elit id tristique ut, userId=9039887140413269677, textV2=null, createdAt=2023-06-03T22:26:13))
2023-09-02 15:08:33 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1835423475035799551, text=ipsum tempus ipsum mauris consectetur Kafka ornare varius mauris varius, userId=7210701866250615146, textV2=null, createdAt=2023-06-03T23:07:04))
2023-09-02 15:08:34 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3260210450905888521, text=lectus ipsum ornare in pharetra Kafka dignissim ut ipsum dignissim, userId=2986305255382665358, textV2=null, createdAt=2023-06-03T23:09:24))
2023-09-02 15:08:34 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=89148725961112797, text=adipiscing tristique ipsum ultricies ultricies Kafka dignissim dolor mauris venenatis, userId=5282107636512559545, textV2=null, createdAt=2023-06-03T23:18:34))
2023-09-02 15:08:35 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7049750479204302845, text=mauris dolor mauris tempus ultricies Kafka id ut turpis pharetra, userId=7499853754483327219, textV2=null, createdAt=2023-06-03T23:27:34))
2023-09-02 15:08:35 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4923314635527114641, text=ut venenatis elit pharetra ipsum Kafka ipsum varius dignissim pharetra, userId=354479966100824521, textV2=null, createdAt=2023-06-03T21:05:02))
2023-09-02 15:08:36 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8079622404707505287, text=ornare dolor ultricies tristique ornare Kafka lectus lectus elit consectetur, userId=6273014260656321309, textV2=null, createdAt=2023-06-03T22:10:23))
2023-09-02 15:08:36 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4936591272741083963, text=in turpis tempus turpis id Kafka ornare elit pharetra adipiscing, userId=4657310632097168059, textV2=null, createdAt=2023-05-28T23:11:41))
2023-09-02 15:08:37 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=495876859258006589, text=ut sit ut ultricies consectetur Kafka dolor elit tristique in, userId=797022309800590493, textV2=null, createdAt=2023-05-28T23:39:12))
2023-09-02 15:08:37 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7025999865208976498, text=consectetur pharetra ultricies sit in Kafka varius ut pharetra lectus, userId=1248312031244148111, textV2=null, createdAt=2023-05-29T00:05:51))
2023-09-02 15:08:38 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4940779615261943069, text=dolor ut varius id varius Kafka ultricies venenatis venenatis venenatis, userId=524865551766499685, textV2=null, createdAt=2023-06-03T18:58))
2023-09-02 15:08:38 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=89944617403461312, text=dignissim ut adipiscing turpis lectus Kafka id dignissim turpis tristique, userId=8342289324074337678, textV2=null, createdAt=2023-06-04T00:47:42))
2023-09-02 15:08:39 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7821102382661210089, text=ultricies dignissim elit mauris adipiscing Kafka dignissim varius elit tempus, userId=5345261524393094625, textV2=null, createdAt=2023-05-28T21:44))
2023-09-02 15:08:39 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3173426386317848718, text=dignissim sit ultricies tristique id Kafka elit turpis pharetra tristique, userId=957384334177445114, textV2=null, createdAt=2023-05-29T00:19:11))
2023-09-02 15:08:40 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8048483220401809389, text=sit tristique tempus dignissim dignissim Kafka consectetur ornare id dolor, userId=7289106107410986552, textV2=null, createdAt=2023-06-03T16:18:18))
2023-09-02 15:08:40 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2731757266600477121, text=ornare sit varius dolor ultricies Kafka venenatis ornare consectetur tristique, userId=1758331716174038617, textV2=null, createdAt=2023-06-03T16:26:38))
2023-09-02 15:08:41 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3930936678232615707, text=lectus ut tristique dolor ultricies Kafka dignissim ornare venenatis ipsum, userId=6798197699495405742, textV2=null, createdAt=2023-05-28T21:51))
2023-09-02 15:08:41 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=865083064098694752, text=varius consectetur lectus mauris ultricies Kafka ultricies elit ut ipsum, userId=1323248071170170089, textV2=null, createdAt=2023-06-03T16:51:49))
2023-09-02 15:08:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=930745025632352270, text=varius dignissim ut lectus varius Kafka dolor consectetur ornare lectus, userId=1223421052830131309, textV2=null, createdAt=2023-06-03T17:12:49))
2023-09-02 15:08:42 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5389907174005299840, text=tristique tristique elit ultricies tempus Kafka elit lectus pharetra venenatis, userId=245458316385656050, textV2=null, createdAt=2023-06-03T17:35:19))
2023-09-02 15:08:42 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:08:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1084025782044292443, text=sit in varius varius turpis Kafka id consectetur venenatis lectus, userId=1309222776858375597, textV2=null, createdAt=2023-06-03T17:40:09))
2023-09-02 15:08:43 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8392815442540384674, text=varius mauris mauris sit tristique Kafka ut ipsum venenatis ipsum, userId=876768914531522837, textV2=null, createdAt=2023-06-03T17:45:19))
2023-09-02 15:08:44 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6287876238555294909, text=sit id elit consectetur adipiscing Kafka adipiscing ornare tristique tempus, userId=1940079701240757619, textV2=null, createdAt=2023-06-03T17:55:19))
2023-09-02 15:08:44 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4518075102334582835, text=elit venenatis pharetra consectetur turpis Kafka dignissim adipiscing ut ut, userId=5469160354933015637, textV2=null, createdAt=2023-06-03T17:56:49))
2023-09-02 15:08:45 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5448802801086254064, text=ut pharetra id venenatis in Kafka mauris turpis dignissim mauris, userId=2014521837850521033, textV2=null, createdAt=2023-06-03T22:38:13))
2023-09-02 15:08:45 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=720328554815272239, text=elit turpis adipiscing mauris turpis Kafka elit ut elit tempus, userId=3615325131137554501, textV2=null, createdAt=2023-06-03T22:45:33))
2023-09-02 15:08:46 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6391399785339519191, text=in varius in tempus ornare Kafka tristique lectus varius ut, userId=7928417506250554746, textV2=null, createdAt=2023-06-03T23:18:44))
2023-09-02 15:08:46 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=970331008483041573, text=ultricies ut mauris varius in Kafka ut dignissim ut pharetra, userId=6257937115302090351, textV2=null, createdAt=2023-06-03T23:55:54))
2023-09-02 15:08:47 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=919036570355466574, text=id ultricies id varius ut Kafka pharetra sit in turpis, userId=7843011461770301120, textV2=null, createdAt=2023-06-03T23:58:24))
2023-09-02 15:08:47 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1868901460358778921, text=adipiscing ornare ipsum ultricies turpis Kafka dolor dignissim consectetur dolor, userId=8881760019750877035, textV2=null, createdAt=2023-06-04T00:07:54))
2023-09-02 15:08:48 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6833241326137791361, text=mauris pharetra venenatis sit venenatis Kafka in elit tristique dolor, userId=4435871826507119713, textV2=null, createdAt=2023-06-04T00:28:01))
2023-09-02 15:08:48 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=603996359828028911, text=sit tristique ut dignissim mauris Kafka lectus mauris pharetra elit, userId=2215059935564751160, textV2=null, createdAt=2023-06-04T00:57:12))
2023-09-02 15:08:49 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8941372441232612497, text=turpis elit dolor id consectetur Kafka pharetra tristique ornare dignissim, userId=2106568768591256694, textV2=null, createdAt=2023-08-15T23:51:08))
2023-09-02 15:08:49 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=997345202390445236, text=varius ultricies sit lectus dignissim Kafka ornare in in adipiscing, userId=6504274708377341356, textV2=null, createdAt=2023-08-16T00:36:08))
2023-09-02 15:08:50 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5416962729533870431, text=id mauris dignissim adipiscing venenatis Kafka tempus tristique in ornare, userId=7630118073700601769, textV2=null, createdAt=2023-08-16T00:37:18))
2023-09-02 15:08:50 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3091076183100531991, text=ut mauris dignissim venenatis ultricies Kafka ornare elit ultricies ultricies, userId=7347239101716546485, textV2=null, createdAt=2023-08-16T00:41:29))
2023-09-02 15:08:51 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5770468909756447578, text=in ipsum ipsum consectetur ut Kafka elit dignissim in dolor, userId=7185822769307067140, textV2=null, createdAt=2023-08-17T00:42:58))
2023-09-02 15:08:51 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4759779719071514069, text=dolor sit dignissim tempus dignissim Kafka ut elit tempus tristique, userId=9144801615175186883, textV2=null, createdAt=2023-08-17T00:52:19))
2023-09-02 15:08:52 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5775942779064904020, text=ut pharetra venenatis tristique id Kafka lectus dolor adipiscing ipsum, userId=6242113212126306849, textV2=null, createdAt=2023-08-17T00:55:59))
2023-09-02 15:08:52 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1536429598823332850, text=adipiscing ornare tempus id ultricies Kafka elit tempus tempus id, userId=4543271428967092826, textV2=null, createdAt=2023-08-17T00:56:29))
2023-09-02 15:08:53 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7981195236065256067, text=in varius tempus ornare ut Kafka id elit ut tristique, userId=2542800636864804704, textV2=null, createdAt=2023-08-17T01:24:09))
2023-09-02 15:08:53 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8309794549549514150, text=id ipsum tristique sit ut Kafka venenatis ipsum consectetur varius, userId=678918902030841489, textV2=null, createdAt=2023-08-17T01:25:29))
2023-09-02 15:08:54 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6704147146548995175, text=ornare in turpis tempus elit Kafka consectetur mauris ultricies tempus, userId=2667358700478630475, textV2=null, createdAt=2023-05-28T21:53:50))
2023-09-02 15:08:54 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8967569885900948612, text=ultricies dolor in dolor adipiscing Kafka venenatis varius ipsum pharetra, userId=8762076052165412317, textV2=null, createdAt=2023-05-28T22:51:41))
2023-09-02 15:08:54 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:08:55 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=320997339978473189, text=tempus sit sit varius dolor Kafka dignissim in ut pharetra, userId=349738541966895466, textV2=null, createdAt=2023-05-28T23:31:12))
2023-09-02 15:08:55 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3156022719189384960, text=adipiscing tristique turpis ornare ornare Kafka ipsum varius tempus tristique, userId=4542091993814944554, textV2=null, createdAt=2023-05-29T00:09:21))
2023-09-02 15:08:56 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2164192444062659220, text=turpis venenatis ut dolor sit Kafka ultricies ut mauris ipsum, userId=2006743774745788707, textV2=null, createdAt=2023-06-03T16:13:48))
2023-09-02 15:08:56 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7815309414197147250, text=tempus dolor dolor adipiscing tempus Kafka ornare lectus tristique id, userId=6254821682760291307, textV2=null, createdAt=2023-06-03T16:32:18))
2023-09-02 15:08:57 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=450649343804860293, text=sit tempus in ipsum consectetur Kafka turpis ipsum adipiscing dignissim, userId=3074239025740231688, textV2=null, createdAt=2023-06-03T18:24:50))
2023-09-02 15:08:57 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1346460639731249901, text=id ipsum tristique dignissim adipiscing Kafka tempus elit sit ornare, userId=8844451099565530827, textV2=null, createdAt=2023-06-03T21:20:42))
2023-09-02 15:08:58 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9185133855294850889, text=ultricies lectus consectetur in id Kafka pharetra sit tristique turpis, userId=4511024651794165850, textV2=null, createdAt=2023-06-03T22:19:43))
2023-09-02 15:08:58 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9017318125465669211, text=lectus ornare consectetur in dolor Kafka in elit sit sit, userId=7224678049957178393, textV2=null, createdAt=2023-06-03T22:29:43))
2023-09-02 15:08:59 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2901271064177668149, text=sit in varius ut turpis Kafka tristique mauris lectus turpis, userId=6433660857173233028, textV2=null, createdAt=2023-06-03T22:47:13))
2023-09-02 15:08:59 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7008869901968901745, text=lectus consectetur lectus ut id Kafka id consectetur in lectus, userId=1533493063158458782, textV2=null, createdAt=2023-05-28T22:23:51))
2023-09-02 15:09:00 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=889697655813567837, text=ipsum turpis tempus lectus ipsum Kafka dignissim ut elit lectus, userId=4600316463162901050, textV2=null, createdAt=2023-05-28T22:37:01))
2023-09-02 15:09:00 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7960600168163923792, text=ut ut tristique dolor ipsum Kafka lectus sit elit varius, userId=4389941487450450166, textV2=null, createdAt=2023-05-28T22:45:21))
2023-09-02 15:09:01 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2782820662803497380, text=id dignissim varius ut tempus Kafka ultricies tristique mauris adipiscing, userId=4907932523139801865, textV2=null, createdAt=2023-05-28T22:57:41))
2023-09-02 15:09:01 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5269489932738381093, text=pharetra ultricies ut pharetra pharetra Kafka sit id turpis elit, userId=2245276425017278118, textV2=null, createdAt=2023-05-28T23:22:21))
2023-09-02 15:09:02 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6277098763400312311, text=dolor consectetur ipsum consectetur lectus Kafka in ornare ornare ornare, userId=6507111979795637694, textV2=null, createdAt=2023-06-03T23:22:24))
2023-09-02 15:09:02 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5894235045826976191, text=dolor sit elit ultricies adipiscing Kafka consectetur varius elit venenatis, userId=2238610097104026448, textV2=null, createdAt=2023-06-03T16:16:28))
2023-09-02 15:09:03 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5435250927538330594, text=lectus turpis tempus varius ornare Kafka elit tempus elit dolor, userId=7386879853759224762, textV2=null, createdAt=2023-06-03T17:21:49))
2023-09-02 15:09:03 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=11872211855649138, text=in adipiscing dolor tempus consectetur Kafka mauris tempus ut dignissim, userId=5929006168110484745, textV2=null, createdAt=2023-06-03T17:44:59))
2023-09-02 15:09:04 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1195468546161204411, text=adipiscing varius ut elit venenatis Kafka mauris ipsum tempus dignissim, userId=1931664166585074448, textV2=null, createdAt=2023-06-03T17:51:49))
2023-09-02 15:09:04 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3988427982207843781, text=venenatis varius varius ultricies ipsum Kafka elit adipiscing ipsum turpis, userId=3126285794005840130, textV2=null, createdAt=2023-06-03T21:36:02))
2023-09-02 15:09:05 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1937912456088844900, text=tempus dolor varius tristique pharetra Kafka elit venenatis pharetra ornare, userId=7325172220317921390, textV2=null, createdAt=2023-08-17T01:39:09))
2023-09-02 15:09:05 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3024436182855093454, text=tristique ultricies lectus ornare tristique Kafka elit turpis ultricies tristique, userId=7951272691973099498, textV2=null, createdAt=2023-08-17T01:45:09))
2023-09-02 15:09:06 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4597381805938658307, text=elit consectetur turpis venenatis turpis adipiscing Kafka lectus venenatis venenatis turpis, userId=905424273651414677, textV2=null, createdAt=2023-06-03T22:15:53))
2023-09-02 15:09:06 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=693525334977502386, text=dignissim dignissim ut elit sit sit Kafka tristique varius ornare mauris, userId=3624043625904197842, textV2=null, createdAt=2023-06-03T22:36:43))
2023-09-02 15:09:06 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:09:07 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7771164642902172702, text=ipsum ipsum turpis mauris consectetur adipiscing Kafka elit adipiscing mauris ultricies, userId=5387838479361634847, textV2=null, createdAt=2023-06-03T23:00:13))
2023-09-02 15:09:07 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8037466029509589374, text=varius in turpis turpis turpis ut Kafka id ipsum tempus dolor, userId=4617326430166050360, textV2=null, createdAt=2023-06-03T23:03:44))
2023-09-02 15:09:08 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1141079508071855032, text=turpis in sit ornare id in Kafka ut mauris sit adipiscing, userId=2126207179327691368, textV2=null, createdAt=2023-06-03T23:29:24))
2023-09-02 15:09:08 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3979453684928968054, text=varius turpis elit dolor mauris dolor Kafka venenatis id lectus varius, userId=1852729040272795764, textV2=null, createdAt=2023-06-03T21:53:53))
2023-09-02 15:09:09 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2982381596825598182, text=ut ipsum id tempus venenatis id Kafka ornare consectetur dolor in, userId=7442204676703077481, textV2=null, createdAt=2023-06-03T22:06:03))
2023-09-02 15:09:09 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8092843793326394600, text=elit lectus varius adipiscing venenatis id Kafka mauris tempus in ipsum, userId=6691285410141465443, textV2=null, createdAt=2023-06-03T22:06:13))
2023-09-02 15:09:10 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6789269935724592266, text=sit venenatis ornare turpis consectetur dolor Kafka sit ut consectetur in, userId=7241837677217929480, textV2=null, createdAt=2023-05-28T23:26:52))
2023-09-02 15:09:10 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3786573107860668457, text=in dolor tempus ornare elit lectus Kafka id in ornare tempus, userId=7474070317444543420, textV2=null, createdAt=2023-05-28T23:52:51))
2023-09-02 15:09:11 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5429978319348561088, text=varius id mauris id ultricies tempus Kafka mauris sit adipiscing mauris, userId=7205609959816259535, textV2=null, createdAt=2023-06-03T18:34))
2023-09-02 15:09:11 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8999464912033210572, text=turpis consectetur dignissim varius dolor tempus Kafka pharetra ipsum ut ornare, userId=8269708595790545565, textV2=null, createdAt=2023-06-03T16:44:48))
2023-09-02 15:09:12 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=496702849216652637, text=elit in pharetra elit venenatis adipiscing Kafka ornare in ornare ut, userId=7575203759721262789, textV2=null, createdAt=2023-05-28T21:56:01))
2023-09-02 15:09:12 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=43785518980831961, text=consectetur in varius sit id tristique Kafka ipsum ipsum pharetra adipiscing, userId=133191628401571684, textV2=null, createdAt=2023-05-28T22:04:11))
2023-09-02 15:09:13 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5144258553646035713, text=ultricies ipsum dignissim ut elit venenatis Kafka tempus in ultricies ornare, userId=8328321675189127956, textV2=null, createdAt=2023-06-03T16:55:29))
2023-09-02 15:09:13 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=290223851801285374, text=ornare venenatis in in dignissim elit Kafka mauris dignissim elit turpis, userId=1618141727658431742, textV2=null, createdAt=2023-06-03T17:56:29))
2023-09-02 15:09:14 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6946790049669228616, text=lectus dolor venenatis adipiscing tristique mauris Kafka dignissim sit turpis elit, userId=208845607285550929, textV2=null, createdAt=2023-06-03T22:14:33))
2023-09-02 15:09:14 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5383935049428355379, text=ultricies lectus elit dolor id ut Kafka ornare ipsum id lectus, userId=1603761760413612686, textV2=null, createdAt=2023-06-03T22:23:33))
2023-09-02 15:09:15 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3578872157443726203, text=lectus dolor ut tristique tempus dignissim Kafka tempus varius tempus ultricies, userId=6633883013651031393, textV2=null, createdAt=2023-06-03T22:58:23))
2023-09-02 15:09:15 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6300484441799651906, text=ipsum tempus varius id consectetur turpis Kafka sit in ipsum ipsum, userId=5341187829642521196, textV2=null, createdAt=2023-06-03T23:20:04))
2023-09-02 15:09:16 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3822813750821768187, text=consectetur lectus tempus adipiscing id turpis Kafka pharetra varius dignissim pharetra, userId=1496293848341101553, textV2=null, createdAt=2023-06-03T23:51:14))
2023-09-02 15:09:16 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4797513289548231389, text=ipsum tempus tristique lectus ut sit Kafka ut id ornare sit, userId=8910222440477118701, textV2=null, createdAt=2023-06-04T00:52:12))
2023-09-02 15:09:17 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2850188616535361764, text=ultricies sit in ut elit varius Kafka pharetra ipsum sit ultricies, userId=8856155312326522988, textV2=null, createdAt=2023-06-04T12:19:47))
2023-09-02 15:09:17 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7418448036965661359, text=adipiscing ultricies sit id ipsum tristique Kafka ut pharetra ornare sit, userId=7651174477308668768, textV2=null, createdAt=2023-08-15T23:59:28))
2023-09-02 15:09:18 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1893574379944664570, text=id ipsum ut venenatis ut dignissim Kafka id ornare elit turpis, userId=8991433087160696176, textV2=null, createdAt=2023-08-16T00:03:38))
2023-09-02 15:09:18 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5132773627449355279, text=tristique mauris consectetur sit ipsum mauris Kafka ultricies varius consectetur sit, userId=1103790683435674755, textV2=null, createdAt=2023-08-15T23:57:58))
2023-09-02 15:09:18 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:09:19 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2686799597390289211, text=pharetra ipsum varius tempus in varius Kafka ipsum ut in id, userId=8362339061655273021, textV2=null, createdAt=2023-08-16T00:01:08))
2023-09-02 15:09:19 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5412506252131834603, text=lectus lectus id turpis ultricies in Kafka dolor varius ut dignissim, userId=4217986346002080936, textV2=null, createdAt=2023-08-16T00:20:38))
2023-09-02 15:09:20 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7730546720372574980, text=dignissim tempus consectetur adipiscing elit ut Kafka lectus tristique tempus lectus, userId=365512861098183641, textV2=null, createdAt=2023-08-15T23:51:48))
2023-09-02 15:09:20 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3028642364706114216, text=turpis venenatis elit id lectus varius Kafka lectus ipsum venenatis id, userId=5970206426357093120, textV2=null, createdAt=2023-08-16T00:27:58))
2023-09-02 15:09:21 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4224755358304004575, text=ultricies turpis sit dignissim ornare consectetur Kafka ornare ut turpis ut, userId=5143534861685730351, textV2=null, createdAt=2023-08-16T00:38:58))
2023-09-02 15:09:21 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6041155402198488992, text=dignissim ultricies varius ipsum turpis tristique Kafka venenatis in id id, userId=2194875089809590754, textV2=null, createdAt=2023-08-16T00:39:28))
2023-09-02 15:09:22 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6015253490066864897, text=dolor in lectus pharetra ipsum in Kafka dignissim id tristique ultricies, userId=49693970769276300, textV2=null, createdAt=2023-08-17T00:34:28))
2023-09-02 15:09:22 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3061000197335669345, text=sit elit venenatis varius pharetra tempus Kafka ut in dolor dignissim, userId=3405576834944636038, textV2=null, createdAt=2023-08-17T01:07:39))
2023-09-02 15:09:23 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=116655549830996446, text=venenatis tempus consectetur sit ultricies id Kafka dolor id dignissim varius, userId=8309448360398258974, textV2=null, createdAt=2023-08-17T01:22:59))
2023-09-02 15:09:23 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8335809859443241072, text=dignissim consectetur dignissim venenatis adipiscing ultricies Kafka sit lectus venenatis mauris, userId=5153549641981271943, textV2=null, createdAt=2023-08-17T01:30:19))
2023-09-02 15:09:24 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=28364279754072101, text=dolor pharetra adipiscing id ornare ornare Kafka mauris pharetra in elit, userId=7380448835633437392, textV2=null, createdAt=2023-08-17T01:32:29))
2023-09-02 15:09:24 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3253764261228825748, text=in pharetra in tristique in sit Kafka ultricies consectetur varius ut, userId=3434685859652624080, textV2=null, createdAt=2023-08-17T01:32:59))
2023-09-02 15:09:25 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6328675567079761318, text=mauris adipiscing dignissim sit lectus ipsum Kafka in varius ornare tristique, userId=5135004705678216944, textV2=null, createdAt=2023-08-17T01:33:09))
2023-09-02 15:09:25 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1324103819446517421, text=in dolor tempus adipiscing elit pharetra Kafka ornare mauris tempus dignissim, userId=1477755413098371945, textV2=null, createdAt=2023-08-16T00:52:19))
2023-09-02 15:09:26 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6019264691736711250, text=ultricies sit elit ultricies adipiscing ultricies Kafka ipsum sit ut tempus, userId=6859388555747407709, textV2=null, createdAt=2023-05-28T21:44:20))
2023-09-02 15:09:26 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8151573208562175681, text=sit varius mauris id mauris lectus Kafka ornare id turpis mauris, userId=1512750411393144564, textV2=null, createdAt=2023-05-28T22:09:11))
2023-09-02 15:09:27 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7508362924660274206, text=ornare ipsum pharetra lectus mauris consectetur Kafka ornare elit in pharetra, userId=6203613962622938454, textV2=null, createdAt=2023-05-28T22:23:11))
2023-09-02 15:09:27 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3546925916722544173, text=ornare in mauris sit dolor tristique Kafka ipsum varius consectetur dolor, userId=3467597926022922873, textV2=null, createdAt=2023-05-28T23:14:51))
2023-09-02 15:09:28 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4479842893600983528, text=elit adipiscing tristique ipsum adipiscing ultricies Kafka varius dolor sit pharetra, userId=7311414820856633728, textV2=null, createdAt=2023-05-28T23:17:41))
2023-09-02 15:09:28 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7394409913235897973, text=tristique ipsum ut pharetra lectus ut Kafka lectus pharetra varius venenatis, userId=3256185446910361337, textV2=null, createdAt=2023-05-28T23:24:12))
2023-09-02 15:09:29 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2812659150332637073, text=ut adipiscing dignissim elit mauris venenatis Kafka dignissim turpis lectus pharetra, userId=6329175220463255979, textV2=null, createdAt=2023-05-28T23:24:42))
2023-09-02 15:09:29 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6619485105955518094, text=ornare pharetra id venenatis id sit Kafka elit lectus ut pharetra, userId=4006321791858108640, textV2=null, createdAt=2023-05-28T23:25:22))
2023-09-02 15:09:30 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5167959446539322983, text=ornare pharetra tristique pharetra adipiscing adipiscing Kafka tempus tristique tempus ut, userId=1766979693562573840, textV2=null, createdAt=2023-05-28T23:40:02))
2023-09-02 15:09:30 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1105255142731584716, text=consectetur ornare id in varius ut Kafka venenatis venenatis elit ultricies, userId=2897773258574267597, textV2=null, createdAt=2023-06-03T16:38:48))
2023-09-02 15:09:30 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:09:31 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=798195099257546245, text=turpis dignissim lectus varius ut dolor Kafka mauris id dolor consectetur, userId=4534994500743764000, textV2=null, createdAt=2023-06-03T16:43:38))
2023-09-02 15:09:31 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=309346721058145240, text=tempus ultricies adipiscing elit tempus tristique Kafka turpis lectus elit consectetur, userId=1669174197171038415, textV2=null, createdAt=2023-06-03T16:46:18))
2023-09-02 15:09:32 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4798392705824214301, text=pharetra venenatis in turpis tristique pharetra Kafka consectetur pharetra pharetra dignissim, userId=3350731664126666128, textV2=null, createdAt=2023-06-03T17:09:29))
2023-09-02 15:09:32 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5497220747191791441, text=elit lectus consectetur tempus tempus adipiscing Kafka ultricies turpis ultricies lectus, userId=9194237257338076003, textV2=null, createdAt=2023-06-03T17:53:49))
2023-09-02 15:09:33 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=517961123188176061, text=lectus sit dolor ornare ipsum ut Kafka adipiscing ut turpis dignissim, userId=6991143991015603078, textV2=null, createdAt=2023-06-03T17:54:39))
2023-09-02 15:09:33 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5604922138813793104, text=consectetur ut venenatis turpis dignissim dignissim Kafka ipsum lectus id lectus, userId=1946587865741062149, textV2=null, createdAt=2023-06-03T18:10:20))
2023-09-02 15:09:34 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3643204258420307397, text=ultricies ornare ipsum dolor in dignissim Kafka pharetra ornare tempus tristique, userId=1944225864149290605, textV2=null, createdAt=2023-06-03T18:23:40))
2023-09-02 15:09:34 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5494811443042529471, text=mauris ut dignissim sit adipiscing dignissim Kafka ornare varius ut adipiscing, userId=1023102628072876122, textV2=null, createdAt=2023-06-03T18:37:20))
2023-09-02 15:09:35 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2706277532219939496, text=varius tristique ultricies tristique ut ut Kafka elit dignissim ultricies id, userId=5387948046867877583, textV2=null, createdAt=2023-06-03T18:48:30))
2023-09-02 15:09:35 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7224267319987164772, text=dolor tempus ipsum in venenatis ut Kafka ipsum in pharetra adipiscing, userId=8342509960234164396, textV2=null, createdAt=2023-06-03T18:53:10))
2023-09-02 15:09:36 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=308664736292255280, text=turpis ornare dolor varius dignissim sit Kafka consectetur ipsum venenatis adipiscing, userId=6541149374094147689, textV2=null, createdAt=2023-06-03T19:03:50))
2023-09-02 15:09:36 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6565251777935113886, text=turpis ultricies ornare ipsum ipsum elit Kafka ornare ipsum ornare adipiscing, userId=626879438397842366, textV2=null, createdAt=2023-06-03T21:46:13))
2023-09-02 15:09:37 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8051724772150559444, text=dolor consectetur in tristique dignissim dolor Kafka in turpis sit consectetur, userId=7972568082299751410, textV2=null, createdAt=2023-05-28T21:46:50))
2023-09-02 15:09:37 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=305016819108974070, text=varius tempus id adipiscing consectetur varius Kafka tristique lectus lectus elit, userId=160875817985090200, textV2=null, createdAt=2023-05-28T22:13:11))
2023-09-02 15:09:38 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4679852173532392271, text=consectetur ipsum elit pharetra tempus ipsum Kafka dignissim varius ipsum tempus, userId=6240100280854597450, textV2=null, createdAt=2023-05-28T22:35:31))
2023-09-02 15:09:38 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3131077939225750631, text=mauris tempus ornare dolor turpis id Kafka elit consectetur ultricies tristique, userId=6893811160337857122, textV2=null, createdAt=2023-05-28T22:47:51))
2023-09-02 15:09:39 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3622929923745123597, text=adipiscing consectetur tristique elit turpis id Kafka mauris varius elit lectus, userId=4087563782836926628, textV2=null, createdAt=2023-05-28T22:54:01))
2023-09-02 15:09:39 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7561709629604827707, text=tristique ipsum lectus ornare ornare dolor Kafka id sit consectetur turpis, userId=832147152486043690, textV2=null, createdAt=2023-05-28T22:55:41))
2023-09-02 15:09:40 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1159503270154681938, text=pharetra sit pharetra mauris ultricies dignissim Kafka tristique tristique ut varius, userId=2742078219613152898, textV2=null, createdAt=2023-05-28T23:08:51))
2023-09-02 15:09:40 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9048019495480519711, text=ultricies ornare elit in ipsum dolor Kafka sit adipiscing dolor ornare, userId=6499598088014222653, textV2=null, createdAt=2023-06-03T23:14:14))
2023-09-02 15:09:41 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4293346516611318430, text=pharetra id sit ut venenatis ornare Kafka mauris ornare adipiscing turpis, userId=6163418213910302964, textV2=null, createdAt=2023-06-03T23:37:44))
2023-09-02 15:09:41 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2214839125215391391, text=sit dignissim ultricies ornare varius turpis Kafka consectetur tristique consectetur dignissim, userId=1230808059056320287, textV2=null, createdAt=2023-06-03T23:42:14))
2023-09-02 15:09:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8342203747263277567, text=ut tempus id varius varius sit Kafka elit varius pharetra elit, userId=2807284094019231155, textV2=null, createdAt=2023-06-04T00:04:24))
2023-09-02 15:09:42 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2157822967816050219, text=pharetra tristique elit tempus dolor venenatis Kafka id turpis ut ut, userId=5470050728351442929, textV2=null, createdAt=2023-06-04T00:43:01))
2023-09-02 15:09:42 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:09:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1757714356007368854, text=ipsum id adipiscing turpis ipsum elit Kafka ultricies id in consectetur, userId=3007809589352875262, textV2=null, createdAt=2023-06-04T00:43:21))
2023-09-02 15:09:43 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5359432203019214812, text=ipsum dignissim adipiscing id venenatis tempus Kafka ultricies mauris turpis in, userId=1466678327648663562, textV2=null, createdAt=2023-06-03T15:49:47))
2023-09-02 15:09:44 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2611723168749308153, text=ornare ipsum elit ut lectus mauris Kafka dignissim ut pharetra varius, userId=8786655059142259908, textV2=null, createdAt=2023-06-03T15:57:48))
2023-09-02 15:09:44 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1370504826108160858, text=sit sit adipiscing pharetra mauris turpis Kafka id adipiscing dignissim elit, userId=8303949641279631796, textV2=null, createdAt=2023-06-03T17:33:19))
2023-09-02 15:09:45 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9222915837237079706, text=tempus ornare in dignissim tempus adipiscing Kafka venenatis tempus ipsum ornare, userId=97380837710666725, textV2=null, createdAt=2023-06-03T18:06:49))
2023-09-02 15:09:45 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2977583419486742340, text=tempus ipsum ut dolor elit varius Kafka varius id lectus sit, userId=5489140433249894097, textV2=null, createdAt=2023-06-03T18:14))
2023-09-02 15:09:46 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1127636583086533063, text=sit ipsum ornare in ultricies ultricies Kafka ornare tempus turpis varius, userId=662010282419872679, textV2=null, createdAt=2023-06-03T21:06:42))
2023-09-02 15:09:46 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5347494134751255856, text=sit dignissim ipsum ornare ut id Kafka elit elit ipsum dolor, userId=538616407155908538, textV2=null, createdAt=2023-06-03T21:18:02))
2023-09-02 15:09:47 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5549526965823455053, text=tempus ipsum adipiscing venenatis mauris adipiscing Kafka sit dignissim turpis tempus, userId=8861330160988410850, textV2=null, createdAt=2023-06-03T21:19:42))
2023-09-02 15:09:47 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2016919133352706701, text=consectetur elit turpis varius dolor ornare Kafka lectus tristique venenatis adipiscing, userId=3433748834322509229, textV2=null, createdAt=2023-06-03T21:49:43))
2023-09-02 15:09:48 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4233097751553827272, text=varius ornare adipiscing pharetra in ultricies Kafka lectus venenatis elit elit, userId=3333527151258459526, textV2=null, createdAt=2023-06-03T21:59:13))
2023-09-02 15:09:48 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8343411425219112847, text=pharetra adipiscing ultricies consectetur elit tristique Kafka turpis tristique lectus lectus, userId=1651474616143829089, textV2=null, createdAt=2023-09-01T02:17:01))
2023-09-02 15:09:49 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3962400968117807445, text=consectetur ultricies tristique id elit ornare Kafka in venenatis consectetur adipiscing lectus, userId=19837312041217561, textV2=null, createdAt=2023-06-03T22:40:53))
2023-09-02 15:09:49 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4930476676798699906, text=ipsum mauris adipiscing consectetur elit elit Kafka adipiscing varius venenatis lectus consectetur, userId=5323640548385686325, textV2=null, createdAt=2023-06-03T22:54:33))
2023-09-02 15:09:50 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3757313780909487884, text=in lectus ornare pharetra ultricies consectetur Kafka adipiscing varius ipsum mauris ornare, userId=1954495450733694343, textV2=null, createdAt=2023-06-03T23:04:44))
2023-09-02 15:09:50 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5119114680741504865, text=dignissim dolor ornare pharetra dignissim tempus Kafka pharetra ipsum venenatis tempus adipiscing, userId=2013061114968317469, textV2=null, createdAt=2023-06-03T21:05:12))
2023-09-02 15:09:51 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5529536078618567491, text=turpis id dignissim dolor consectetur tempus Kafka pharetra turpis in consectetur pharetra, userId=5119738166144419207, textV2=null, createdAt=2023-06-03T22:01:33))
2023-09-02 15:09:51 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=142430899442846348, text=tristique turpis pharetra mauris in tristique Kafka sit dignissim sit pharetra mauris, userId=796305881643309788, textV2=null, createdAt=2023-05-28T23:54:31))
2023-09-02 15:09:52 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8754707861041587783, text=ipsum tempus dignissim pharetra sit elit Kafka in varius tristique lectus elit, userId=5904805320774886332, textV2=null, createdAt=2023-06-03T19:04:40))
2023-09-02 15:09:52 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8105095286931372479, text=varius pharetra mauris ipsum ornare ornare Kafka elit in ornare ornare ultricies, userId=7111438841320029400, textV2=null, createdAt=2023-06-04T00:00:54))
2023-09-02 15:09:53 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5170274643087893395, text=sit lectus ipsum ultricies adipiscing pharetra Kafka ut lectus venenatis lectus varius, userId=6626644555755036293, textV2=null, createdAt=2023-05-28T21:34))
2023-09-02 15:09:53 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2744598794498643750, text=adipiscing turpis adipiscing ut ornare pharetra Kafka dolor dolor dignissim tempus dolor, userId=487674747493140297, textV2=null, createdAt=2023-05-28T21:57:01))
2023-09-02 15:09:54 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1054157137454098179, text=tristique sit ornare consectetur adipiscing ornare Kafka id in tristique dignissim lectus, userId=7593152782395399527, textV2=null, createdAt=2023-05-28T22:29:11))
2023-09-02 15:09:54 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8906137070049501114, text=ut ultricies lectus in tristique turpis Kafka lectus varius turpis tristique sit, userId=1535958160510051782, textV2=null, createdAt=2023-06-03T17:15:19))
2023-09-02 15:09:54 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:09:55 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6407916775639610431, text=sit varius mauris venenatis ipsum ipsum Kafka venenatis tristique dolor id tempus, userId=5314883275564475834, textV2=null, createdAt=2023-06-03T17:36:19))
2023-09-02 15:09:55 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4046598585071784242, text=venenatis tempus tempus adipiscing venenatis mauris Kafka elit mauris varius mauris dignissim, userId=6529664967452191921, textV2=null, createdAt=2023-06-03T22:21:53))
2023-09-02 15:09:56 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2534772327116080034, text=tristique ornare turpis in in ut Kafka id mauris id dignissim turpis, userId=8665114341360876498, textV2=null, createdAt=2023-06-03T23:06:14))
2023-09-02 15:09:56 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8981028656567757531, text=pharetra dignissim tristique ut venenatis adipiscing Kafka ut ultricies pharetra ipsum in, userId=4917113115353415300, textV2=null, createdAt=2023-06-03T23:20:34))
2023-09-02 15:09:57 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5364041091413562165, text=ultricies adipiscing venenatis tempus adipiscing ipsum Kafka ultricies consectetur id id pharetra, userId=2346252044934057865, textV2=null, createdAt=2023-06-03T23:21:14))
2023-09-02 15:09:57 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3540478948997089, text=tempus mauris pharetra sit mauris sit Kafka ipsum pharetra varius pharetra ultricies, userId=6167243762449814825, textV2=null, createdAt=2023-06-03T23:25:04))
2023-09-02 15:09:58 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9039704979531694780, text=mauris lectus in adipiscing turpis dignissim Kafka ultricies tempus dolor sit venenatis, userId=8154376074350890536, textV2=null, createdAt=2023-06-04T00:05:54))
2023-09-02 15:09:58 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1420876712008530057, text=lectus elit lectus in elit ipsum Kafka turpis dolor adipiscing in ut, userId=324639599685970394, textV2=null, createdAt=2023-06-04T01:02:52))
2023-09-02 15:09:59 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5427941447518542905, text=ut pharetra venenatis ornare id consectetur Kafka pharetra dignissim ultricies lectus ultricies, userId=9189664946625943811, textV2=null, createdAt=2023-06-04T01:04:52))
2023-09-02 15:09:59 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1234846691358279217, text=adipiscing venenatis turpis venenatis venenatis ipsum Kafka ut ut id ornare pharetra, userId=565664027053802409, textV2=null, createdAt=2023-06-04T12:16:47))
2023-09-02 15:10:00 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2498387390972997076, text=in in mauris mauris tempus elit Kafka dolor tempus dignissim in ipsum, userId=3852416636958801106, textV2=null, createdAt=2023-08-15T23:49:38))
2023-09-02 15:10:00 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=193398901233214908, text=pharetra tristique dignissim consectetur sit mauris Kafka elit id consectetur ut mauris, userId=2389443972198810409, textV2=null, createdAt=2023-08-15T23:56:38))
2023-09-02 15:10:01 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5967084938323226369, text=adipiscing dolor dolor id venenatis id Kafka ut elit adipiscing venenatis turpis, userId=1556219031090750933, textV2=null, createdAt=2023-08-15T23:51:28))
2023-09-02 15:10:01 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6243767153977146271, text=ut mauris consectetur elit lectus turpis Kafka id dolor lectus venenatis tempus, userId=8918230856592046875, textV2=null, createdAt=2023-08-15T23:56:28))
2023-09-02 15:10:02 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2603289779506750570, text=ultricies ut dolor tempus ornare ipsum Kafka in varius lectus in ipsum, userId=5343018537949114101, textV2=null, createdAt=2023-08-16T00:21:48))
2023-09-02 15:10:02 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1573031166059772967, text=ornare mauris pharetra turpis venenatis consectetur Kafka tempus ut dignissim tristique mauris, userId=7756276888966488057, textV2=null, createdAt=2023-08-16T00:31:18))
2023-09-02 15:10:03 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6117267965195305563, text=sit consectetur consectetur ipsum venenatis venenatis Kafka ipsum ut turpis sit ornare, userId=2912945937913489161, textV2=null, createdAt=2023-08-16T00:41:59))
2023-09-02 15:10:03 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1941620375794132529, text=in sit in consectetur ornare ut Kafka ut tristique ipsum lectus mauris, userId=2601148057015082737, textV2=null, createdAt=2023-08-17T00:39:18))
2023-09-02 15:10:04 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3470440383046392115, text=pharetra turpis sit dignissim varius in Kafka lectus dolor in tempus dignissim, userId=3958257407873948179, textV2=null, createdAt=2023-08-17T00:40:28))
2023-09-02 15:10:04 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3740636490466634885, text=sit sit id venenatis ornare id Kafka ut adipiscing pharetra consectetur mauris, userId=2946034006561567275, textV2=null, createdAt=2023-08-17T00:44:59))
2023-09-02 15:10:05 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4699739638356192589, text=tempus tristique ut sit adipiscing pharetra Kafka lectus consectetur varius dolor lectus, userId=3801531170904676402, textV2=null, createdAt=2023-08-17T00:51:39))
2023-09-02 15:10:05 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4536779101134293771, text=elit in venenatis venenatis adipiscing sit Kafka pharetra pharetra lectus ipsum elit, userId=6676352012720985847, textV2=null, createdAt=2023-08-17T01:09:39))
2023-09-02 15:10:06 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4000130725896972423, text=dolor lectus dolor mauris tempus lectus Kafka mauris mauris ultricies elit tempus, userId=2905528328389060610, textV2=null, createdAt=2023-08-17T01:13:59))
2023-09-02 15:10:06 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2190910547599540566, text=lectus turpis elit in turpis consectetur Kafka in mauris dolor tempus tristique, userId=6944678963120858813, textV2=null, createdAt=2023-08-17T01:26:09))
2023-09-02 15:10:06 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:10:07 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3829203061729131992, text=dignissim dignissim in venenatis pharetra ornare Kafka pharetra dolor ut ipsum venenatis, userId=5612725452208199913, textV2=null, createdAt=2023-08-17T01:30:49))
2023-09-02 15:10:07 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8132919005185521560, text=ornare tempus lectus consectetur sit dolor Kafka mauris ornare adipiscing ipsum dignissim, userId=7395016987759114425, textV2=null, createdAt=2023-08-16T00:52:09))
2023-09-02 15:10:08 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5593787520033151174, text=consectetur lectus adipiscing varius varius lectus Kafka ultricies dignissim elit sit turpis, userId=3157352763124182974, textV2=null, createdAt=2023-08-16T00:53:39))
2023-09-02 15:10:08 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2324737469387973445, text=id in adipiscing ut ipsum consectetur Kafka sit sit pharetra dignissim tempus, userId=5685397171388063690, textV2=null, createdAt=2023-08-16T00:44:09))
2023-09-02 15:10:09 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3151622622075636712, text=sit ultricies ultricies dignissim sit dolor Kafka dolor ipsum sit dolor consectetur, userId=2154116485644798140, textV2=null, createdAt=2023-05-28T22:14:51))
2023-09-02 15:10:09 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4697667876811005034, text=turpis tristique sit venenatis dolor in Kafka id sit ipsum mauris dignissim, userId=2857461067578751048, textV2=null, createdAt=2023-05-28T22:31:21))
2023-09-02 15:10:10 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4925992417165113383, text=turpis varius tristique mauris in venenatis Kafka in dignissim mauris consectetur dolor, userId=2063170781368232736, textV2=null, createdAt=2023-05-28T22:33:11))
2023-09-02 15:10:10 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=614835223627179483, text=dolor varius lectus pharetra ultricies varius Kafka dignissim venenatis pharetra ipsum tristique, userId=840120602629272027, textV2=null, createdAt=2023-05-28T22:57:51))
2023-09-02 15:10:11 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5759662135671456504, text=dignissim ultricies varius turpis in lectus Kafka ornare adipiscing ornare pharetra mauris, userId=7324085127023707977, textV2=null, createdAt=2023-05-28T23:17:51))
2023-09-02 15:10:11 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=284978440548771372, text=venenatis dignissim elit dolor ultricies adipiscing Kafka tempus sit dignissim consectetur pharetra, userId=4205041616691625455, textV2=null, createdAt=2023-05-29T00:20:11))
2023-09-02 15:10:12 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=174711521013491845, text=consectetur pharetra pharetra dolor tempus mauris Kafka elit ornare ipsum tempus lectus, userId=26338560888255222, textV2=null, createdAt=2023-06-03T16:14:08))
2023-09-02 15:10:12 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=660046149859649007, text=consectetur mauris tristique ultricies tristique consectetur Kafka id tristique in tristique id, userId=5036396731920782948, textV2=null, createdAt=2023-06-03T16:24:48))
2023-09-02 15:10:13 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1098576412375731924, text=ultricies venenatis lectus consectetur tempus ipsum Kafka ultricies tempus turpis mauris ornare, userId=1099654921374073550, textV2=null, createdAt=2023-06-03T16:26:48))
2023-09-02 15:10:13 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=990599798304799475, text=mauris tempus varius tempus adipiscing elit Kafka in dolor turpis lectus id, userId=6478464668934049954, textV2=null, createdAt=2023-06-03T16:43:28))
2023-09-02 15:10:14 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7234817857579431587, text=ut consectetur id lectus mauris sit Kafka dolor ultricies tempus tristique id, userId=855646783246789686, textV2=null, createdAt=2023-06-03T18:07:29))
2023-09-02 15:10:14 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3767866628047134096, text=dignissim pharetra dolor dolor venenatis ornare Kafka venenatis mauris in tempus venenatis, userId=3744190552467749068, textV2=null, createdAt=2023-06-03T18:07:39))
2023-09-02 15:10:15 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4648079617303807343, text=in adipiscing ultricies elit tristique tempus Kafka in venenatis venenatis lectus tristique, userId=4229598297641010666, textV2=null, createdAt=2023-06-03T18:15:10))
2023-09-02 15:10:15 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=330785582158120698, text=varius lectus turpis adipiscing tristique in Kafka tristique ipsum tristique adipiscing dolor, userId=5512661234449269893, textV2=null, createdAt=2023-06-03T18:15:40))
2023-09-02 15:10:16 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4870324206401069971, text=lectus dignissim lectus dolor varius consectetur Kafka mauris mauris pharetra elit turpis, userId=1318132132950822870, textV2=null, createdAt=2023-06-03T18:22:40))
2023-09-02 15:10:16 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1701605185910954079, text=id ut tristique varius ultricies tempus Kafka varius tristique elit turpis in, userId=3500301100888415702, textV2=null, createdAt=2023-06-03T18:58:50))
2023-09-02 15:10:17 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8475475142959489728, text=ornare elit venenatis lectus venenatis tempus Kafka mauris sit venenatis lectus pharetra, userId=7835267196342739106, textV2=null, createdAt=2023-06-03T21:34:02))
2023-09-02 15:10:17 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2405612324952015010, text=ipsum varius in ultricies in dignissim Kafka tristique ornare turpis dolor ornare, userId=4508506555058353813, textV2=null, createdAt=2023-06-03T22:27:23))
2023-09-02 15:10:18 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1966015165619250455, text=consectetur lectus sit pharetra tempus lectus Kafka adipiscing adipiscing ornare tristique ultricies, userId=6325839511468405660, textV2=null, createdAt=2023-05-28T22:26:51))
2023-09-02 15:10:19 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5190309230181360817, text=id tempus id ipsum varius elit Kafka venenatis venenatis ipsum mauris ipsum, userId=5827691950341260341, textV2=null, createdAt=2023-05-28T22:31:41))
2023-09-02 15:10:19 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:10:19 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7699845221382021345, text=ultricies mauris lectus consectetur lectus ultricies Kafka ornare ipsum sit pharetra ut, userId=8929278723150486570, textV2=null, createdAt=2023-05-28T22:39:11))
2023-09-02 15:10:20 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4927754618394110655, text=adipiscing tristique venenatis adipiscing elit adipiscing Kafka id varius turpis ultricies dignissim, userId=2782581642008454797, textV2=null, createdAt=2023-05-28T22:55:01))
2023-09-02 15:10:20 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2821001494216289008, text=dolor dignissim tempus pharetra in ut Kafka turpis ornare in in ultricies, userId=4132554859226387573, textV2=null, createdAt=2023-06-03T22:52:13))
2023-09-02 15:10:21 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3980773813721602727, text=consectetur mauris ut consectetur dolor tristique Kafka id dolor dignissim lectus pharetra, userId=7102448252056779145, textV2=null, createdAt=2023-06-03T23:44:04))
2023-09-02 15:10:21 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7396905195530394531, text=venenatis turpis sit turpis varius ultricies Kafka turpis tristique adipiscing pharetra elit, userId=7475750197560364234, textV2=null, createdAt=2023-06-04T00:54:52))
2023-09-02 15:10:22 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4119332909679128808, text=adipiscing pharetra varius elit turpis turpis Kafka ornare turpis tristique ornare consectetur, userId=1149859039464007885, textV2=null, createdAt=2023-06-03T16:12:28))
2023-09-02 15:10:22 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8589370000902536868, text=tempus ornare lectus tristique lectus elit Kafka consectetur ut pharetra consectetur lectus, userId=1293394517537565706, textV2=null, createdAt=2023-06-03T16:35:08))
2023-09-02 15:10:23 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2413544784215142600, text=sit turpis tristique varius ornare lectus Kafka turpis in dignissim elit ultricies, userId=3115300829006134894, textV2=null, createdAt=2023-06-03T18:15:30))
2023-09-02 15:10:23 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2797277995429270162, text=sit ipsum pharetra ipsum adipiscing adipiscing Kafka ipsum turpis turpis in lectus, userId=2264762594870872262, textV2=null, createdAt=2023-06-03T18:17:30))
2023-09-02 15:10:24 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3954228602029482028, text=adipiscing in ipsum dolor ipsum venenatis Kafka tristique id consectetur consectetur sit, userId=5157302554891360812, textV2=null, createdAt=2023-06-03T18:22))
2023-09-02 15:10:24 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6263160326584523156, text=varius sit in varius dolor turpis Kafka lectus lectus venenatis dolor varius, userId=2762514172308515041, textV2=null, createdAt=2023-06-03T18:31:30))
2023-09-02 15:10:25 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3406524898671145214, text=ipsum varius turpis consectetur lectus ut Kafka adipiscing tristique lectus varius tristique, userId=3988814295699029829, textV2=null, createdAt=2023-06-03T18:36:10))
2023-09-02 15:10:25 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5909479086080317419, text=dolor adipiscing consectetur venenatis tristique turpis Kafka in tempus pharetra pharetra dignissim, userId=3709516529073948949, textV2=null, createdAt=2023-06-03T18:58:30))
2023-09-02 15:10:26 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8572181687395669571, text=ut elit elit tristique dignissim adipiscing Kafka dignissim varius ut consectetur lectus, userId=6674051251301145715, textV2=null, createdAt=2023-06-03T19:15:30))
2023-09-02 15:10:26 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2497587684839924582, text=dignissim tempus id ipsum pharetra dolor Kafka varius tristique lectus venenatis ultricies, userId=4385540123972645436, textV2=null, createdAt=2023-06-03T22:00:03))
2023-09-02 15:10:27 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4577527443226715241, text=ultricies mauris lectus sit dolor ultricies Kafka dignissim pharetra ultricies ultricies tempus, userId=4101802635342025428, textV2=null, createdAt=2023-09-01T02:22:11))
2023-09-02 15:10:27 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5638982913082559834, text=ipsum sit tristique mauris ut consectetur sit Kafka dolor id ipsum pharetra ut, userId=5336083335348855216, textV2=null, createdAt=2023-06-03T22:16:33))
2023-09-02 15:10:28 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8586616530432738323, text=ut varius pharetra lectus adipiscing mauris ornare Kafka adipiscing venenatis ultricies ultricies dignissim, userId=3925456270008585186, textV2=null, createdAt=2023-06-03T22:31:53))
2023-09-02 15:10:28 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3450201303928709178, text=pharetra dolor mauris venenatis pharetra tristique ornare Kafka varius id consectetur adipiscing consectetur, userId=7604990371234366706, textV2=null, createdAt=2023-06-03T23:13:34))
2023-09-02 15:10:29 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4098118405359141268, text=turpis venenatis adipiscing tristique pharetra ornare adipiscing Kafka in dolor id pharetra tristique, userId=5914373361823843229, textV2=null, createdAt=2023-06-03T19:18:50))
2023-09-02 15:10:29 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9142637963406054705, text=varius venenatis adipiscing varius dignissim dignissim dignissim Kafka mauris venenatis ornare ultricies ultricies, userId=2256035748437407134, textV2=null, createdAt=2023-06-03T21:16:52))
2023-09-02 15:10:30 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4350220026036952844, text=id sit ut adipiscing mauris dolor dolor Kafka dolor turpis dolor venenatis mauris, userId=202682960679499447, textV2=null, createdAt=2023-05-28T23:03:51))
2023-09-02 15:10:30 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1397532254483181201, text=sit ultricies venenatis pharetra ipsum adipiscing venenatis Kafka sit dolor id sit lectus, userId=5563169998700074622, textV2=null, createdAt=2023-05-28T23:32:12))
2023-09-02 15:10:31 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4965575194097965361, text=tristique in ornare consectetur consectetur elit ipsum Kafka elit in tempus sit turpis, userId=6165938677084873004, textV2=null, createdAt=2023-05-28T23:58:01))
2023-09-02 15:10:31 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:10:31 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6078701974873528746, text=turpis ut in elit adipiscing ipsum in Kafka elit tristique tristique tempus ut, userId=2552538823608010333, textV2=null, createdAt=2023-06-03T18:16:10))
2023-09-02 15:10:32 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2625910798585955883, text=turpis dolor consectetur ornare tristique ornare consectetur Kafka ornare dolor lectus dolor ut, userId=3686368715557501407, textV2=null, createdAt=2023-06-03T18:49:30))
2023-09-02 15:10:32 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=788598844750341605, text=ornare pharetra ultricies in venenatis ipsum ipsum Kafka lectus dignissim venenatis lectus lectus, userId=6508793698052797217, textV2=null, createdAt=2023-06-03T23:46:44))
2023-09-02 15:10:33 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3059150500617268475, text=venenatis ultricies dignissim turpis ut varius turpis Kafka adipiscing pharetra pharetra dignissim ultricies, userId=7850176407430855918, textV2=null, createdAt=2023-06-04T00:29:41))
2023-09-02 15:10:33 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5372246893899843214, text=ipsum ut lectus id mauris consectetur turpis Kafka tempus consectetur tristique ornare elit, userId=8003094528287117905, textV2=null, createdAt=2023-06-03T16:02:28))
2023-09-02 15:10:34 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3529806825683296136, text=id sit tristique dolor adipiscing ultricies id Kafka turpis id ornare ultricies in, userId=1445132042891715769, textV2=null, createdAt=2023-06-03T16:04:18))
2023-09-02 15:10:34 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6629566806687937331, text=elit adipiscing tempus lectus turpis tempus adipiscing Kafka lectus turpis varius varius varius, userId=5650747243157938235, textV2=null, createdAt=2023-06-03T16:33:58))
2023-09-02 15:10:35 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6174863133399336626, text=tristique dolor in sit in ipsum sit Kafka in adipiscing ut mauris in, userId=2002740976052826265, textV2=null, createdAt=2023-05-28T22:40:11))
2023-09-02 15:10:35 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1251620052778870437, text=ultricies ut pharetra mauris id adipiscing ipsum Kafka dolor dolor lectus ornare id, userId=6042140709888217399, textV2=null, createdAt=2023-06-03T17:19:29))
2023-09-02 15:10:36 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1482495910995303364, text=dignissim tristique pharetra pharetra varius ut id Kafka venenatis adipiscing elit ipsum ornare, userId=7685648147481066561, textV2=null, createdAt=2023-06-03T17:37:39))
2023-09-02 15:10:36 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8192041702920950903, text=ornare turpis adipiscing consectetur pharetra tristique ipsum Kafka varius turpis mauris ornare consectetur, userId=7619696143075884301, textV2=null, createdAt=2023-06-03T22:10:53))
2023-09-02 15:10:37 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4749340132127183254, text=dignissim tempus in tempus lectus mauris adipiscing Kafka dolor elit in ultricies id, userId=4742674199387266206, textV2=null, createdAt=2023-06-03T22:28:23))
2023-09-02 15:10:37 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=232988629925946930, text=tempus id adipiscing ut mauris sit adipiscing Kafka tristique venenatis ut tristique adipiscing, userId=6538456312045872232, textV2=null, createdAt=2023-06-03T22:52:43))
2023-09-02 15:10:38 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7354325980742440399, text=id sit dignissim adipiscing ipsum varius elit Kafka sit lectus consectetur sit venenatis, userId=1618498425565321885, textV2=null, createdAt=2023-06-03T23:28:44))
2023-09-02 15:10:38 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2710371750205338935, text=sit ornare adipiscing turpis in tempus ut Kafka ipsum sit tristique ipsum sit, userId=3140417436738331403, textV2=null, createdAt=2023-06-03T23:44:24))
2023-09-02 15:10:39 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=554525993578441930, text=sit ut tempus sit mauris lectus sit Kafka mauris lectus venenatis elit ipsum, userId=1688621832892342347, textV2=null, createdAt=2023-06-04T00:02:44))
2023-09-02 15:10:39 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7900864208895136638, text=elit varius varius consectetur sit venenatis ut Kafka ipsum mauris ornare dignissim tristique, userId=1106871596830773763, textV2=null, createdAt=2023-08-15T23:50:28))
2023-09-02 15:10:40 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1446489544048914274, text=tempus venenatis turpis ut adipiscing sit id Kafka id tristique dolor venenatis tempus, userId=8804610060613160719, textV2=null, createdAt=2023-08-16T00:04:08))
2023-09-02 15:10:40 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=512964841005855279, text=turpis ut mauris tempus turpis in dignissim Kafka id ut ornare mauris venenatis, userId=5472791598335158903, textV2=null, createdAt=2023-08-16T00:00:08))
2023-09-02 15:10:41 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1306938545402900217, text=consectetur lectus pharetra ornare sit ornare tristique Kafka ipsum dignissim venenatis elit dignissim, userId=3188850358044075860, textV2=null, createdAt=2023-08-16T00:30:28))
2023-09-02 15:10:41 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2363186402215022629, text=lectus venenatis lectus consectetur tristique sit tempus Kafka ipsum turpis dignissim dolor sit, userId=3092784754871636100, textV2=null, createdAt=2023-08-16T00:36:28))
2023-09-02 15:10:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5214212047021556093, text=elit pharetra mauris adipiscing tristique mauris lectus Kafka dolor turpis ipsum tempus ultricies, userId=7733772702462102923, textV2=null, createdAt=2023-08-16T00:41:39))
2023-09-02 15:10:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=394157913405975199, text=adipiscing sit tempus sit ultricies ipsum lectus Kafka id in consectetur ipsum consectetur, userId=3006219119741206017, textV2=null, createdAt=2023-08-17T00:37:18))
2023-09-02 15:10:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7201723335639176549, text=tempus dolor ut consectetur pharetra adipiscing lectus Kafka id venenatis tempus adipiscing adipiscing, userId=4357401519748619898, textV2=null, createdAt=2023-08-17T00:40:08))
2023-09-02 15:10:43 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:10:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6444799432444289915, text=consectetur sit ipsum ut consectetur tristique ipsum Kafka consectetur tempus ipsum adipiscing mauris, userId=8684763370839499855, textV2=null, createdAt=2023-08-17T00:58:59))
2023-09-02 15:10:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3809916020558643870, text=lectus in venenatis consectetur ut pharetra ipsum Kafka consectetur lectus varius adipiscing elit, userId=244325500386074261, textV2=null, createdAt=2023-08-16T00:48:09))
2023-09-02 15:10:44 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3159915957083943946, text=ornare pharetra consectetur id venenatis sit consectetur Kafka tristique venenatis sit mauris ipsum, userId=7207711209698855572, textV2=null, createdAt=2023-05-28T21:37:20))
2023-09-02 15:10:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5192517964547241415, text=tempus ornare varius sit ut in turpis Kafka dolor ut dolor turpis dolor, userId=6169539749796670078, textV2=null, createdAt=2023-05-28T21:52:50))
2023-09-02 15:10:45 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4207107666206122409, text=adipiscing pharetra ornare varius dignissim turpis ultricies Kafka ut consectetur venenatis tristique elit, userId=3892419417334465058, textV2=null, createdAt=2023-05-28T23:01:11))
2023-09-02 15:10:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=823304455582679431, text=in pharetra dolor varius consectetur turpis adipiscing Kafka tempus adipiscing tristique ultricies ipsum, userId=6962225480630354558, textV2=null, createdAt=2023-05-28T23:19:51))
2023-09-02 15:10:46 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1757254524604497392, text=dolor in adipiscing pharetra in sit mauris Kafka ipsum mauris turpis in ultricies, userId=7652820117058086069, textV2=null, createdAt=2023-05-29T00:04:51))
2023-09-02 15:10:47 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2552843797908182988, text=ipsum dolor sit venenatis tristique lectus elit Kafka dignissim ultricies ut ultricies pharetra, userId=8857836152999856548, textV2=null, createdAt=2023-06-03T16:27:48))
2023-09-02 15:10:47 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=590875686584538173, text=id turpis ut venenatis ut turpis mauris Kafka pharetra elit tempus in tempus, userId=6959113292866059049, textV2=null, createdAt=2023-06-03T16:33:48))
2023-09-02 15:10:48 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4661955611961984194, text=in tristique ut ipsum ornare mauris ornare Kafka in ipsum dignissim pharetra tristique, userId=2042539788984531671, textV2=null, createdAt=2023-06-03T17:41:59))
2023-09-02 15:10:48 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7828252689270472844, text=tempus tempus lectus pharetra varius consectetur ornare Kafka tempus ultricies lectus ultricies dignissim, userId=3071626780271195725, textV2=null, createdAt=2023-06-03T18:10:50))
2023-09-02 15:10:49 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7921219345586919799, text=pharetra in dignissim id tristique ipsum elit Kafka elit ipsum tristique ornare dolor, userId=4635850466086405717, textV2=null, createdAt=2023-06-03T18:42))
2023-09-02 15:10:49 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8967874363091231281, text=in ipsum tempus ornare ut tempus ultricies Kafka ornare tempus lectus sit id, userId=4596614834944282288, textV2=null, createdAt=2023-06-03T19:06))
2023-09-02 15:10:50 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4486177559332035040, text=adipiscing turpis ut ultricies venenatis venenatis lectus Kafka lectus elit in adipiscing dolor, userId=7030082891955339567, textV2=null, createdAt=2023-06-03T19:15:40))
2023-09-02 15:10:50 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=816910927772997066, text=dolor dolor dolor mauris turpis id turpis Kafka turpis tempus tristique ornare ornare, userId=3008373954074952562, textV2=null, createdAt=2023-06-03T19:20:40))
2023-09-02 15:10:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3454884933207482054, text=dignissim in ultricies tempus tempus tempus varius Kafka ipsum varius venenatis ut ultricies, userId=885786960472496811, textV2=null, createdAt=2023-06-03T21:09:32))
2023-09-02 15:10:51 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=674232978594290780, text=ultricies mauris elit adipiscing ut ornare consectetur Kafka elit sit varius adipiscing lectus, userId=4419015016943550067, textV2=null, createdAt=2023-06-03T21:12:52))
2023-09-02 15:10:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4443335101699967855, text=ultricies ultricies id elit tempus dolor turpis Kafka dignissim lectus varius elit ornare, userId=117475208000211843, textV2=null, createdAt=2023-06-03T21:57:33))
2023-09-02 15:10:52 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1029067593854624556, text=dolor mauris ornare mauris tempus ornare tristique Kafka id id consectetur tempus ipsum, userId=6602688116694394624, textV2=null, createdAt=2023-06-03T22:03:03))
2023-09-02 15:10:53 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2077013986821996494, text=sit mauris venenatis ut ultricies venenatis in Kafka ipsum adipiscing pharetra dignissim tempus, userId=2666694744135149712, textV2=null, createdAt=2023-06-03T22:07:53))
2023-09-02 15:10:53 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8496734275225118340, text=dignissim ut ut consectetur consectetur lectus pharetra Kafka ultricies lectus elit turpis adipiscing, userId=2878314181267793997, textV2=null, createdAt=2023-05-28T22:06:51))
2023-09-02 15:10:54 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4809323118492158542, text=tempus elit dolor mauris adipiscing mauris adipiscing Kafka consectetur id tempus lectus dolor, userId=3076555300732550736, textV2=null, createdAt=2023-05-28T22:19:31))
2023-09-02 15:10:54 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1459374272851873342, text=tempus ornare turpis adipiscing sit dignissim ultricies Kafka ut mauris ut adipiscing consectetur, userId=7255293906545886824, textV2=null, createdAt=2023-05-28T22:23:21))
2023-09-02 15:10:55 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6252460181528578721, text=dolor varius venenatis lectus venenatis adipiscing venenatis Kafka varius sit sit ultricies sit, userId=3321418348384811425, textV2=null, createdAt=2023-05-28T22:24:11))
2023-09-02 15:10:55 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:10:55 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8310359354148420030, text=id adipiscing ornare ut adipiscing elit tristique Kafka dignissim tristique ipsum lectus venenatis, userId=1450078286926528604, textV2=null, createdAt=2023-05-28T22:44:41))
2023-09-02 15:10:56 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3944574588656701222, text=varius tristique turpis sit tristique sit lectus Kafka venenatis venenatis elit turpis dolor, userId=6639466459317957721, textV2=null, createdAt=2023-05-28T23:14:21))
2023-09-02 15:10:56 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5060419452255634829, text=elit tempus venenatis sit pharetra ut tristique Kafka ipsum tempus ut mauris dignissim, userId=6518916254129502910, textV2=null, createdAt=2023-06-03T23:15:14))
2023-09-02 15:10:57 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5906265198425548219, text=in sit lectus consectetur dolor consectetur varius Kafka lectus mauris in tristique dolor, userId=8307721671516196481, textV2=null, createdAt=2023-06-04T00:03:14))
2023-09-02 15:10:57 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6333516053076375958, text=ipsum ornare tempus tempus ut tempus ipsum Kafka ornare ut tristique ut in, userId=1937221704411820351, textV2=null, createdAt=2023-06-04T00:28:21))
2023-09-02 15:10:58 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5204421756614562853, text=venenatis lectus tristique lectus ipsum ultricies mauris Kafka mauris ut ornare dignissim sit, userId=5214227663990633366, textV2=null, createdAt=2023-06-04T00:31:31))
2023-09-02 15:10:58 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7895918912633821884, text=adipiscing tempus turpis consectetur varius in dolor Kafka consectetur turpis ornare mauris ornare, userId=9114838276781869942, textV2=null, createdAt=2023-06-04T00:45:52))
2023-09-02 15:10:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3277346233462836772, text=ultricies turpis dolor lectus ornare ornare pharetra Kafka varius in pharetra ornare sit, userId=2044440638525285695, textV2=null, createdAt=2023-06-03T16:22:28))
2023-09-02 15:10:59 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2493994527006816263, text=tempus dignissim tristique id elit ultricies lectus Kafka venenatis dolor ipsum ipsum varius, userId=3095781282421698309, textV2=null, createdAt=2023-06-03T16:54:59))
2023-09-02 15:11:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3291504142680975122, text=ultricies ipsum dignissim ipsum in ipsum tristique Kafka dignissim pharetra ipsum elit ornare, userId=1487120291069235630, textV2=null, createdAt=2023-06-03T17:25:39))
2023-09-02 15:11:00 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6514629409748890026, text=in mauris mauris in lectus dignissim adipiscing Kafka ornare adipiscing turpis in dignissim, userId=9201297087806284870, textV2=null, createdAt=2023-06-03T17:53:19))
2023-09-02 15:11:01 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2544744306808253126, text=tempus mauris lectus id id ipsum consectetur Kafka tristique pharetra adipiscing tempus in, userId=4207808688723129627, textV2=null, createdAt=2023-06-03T18:34:30))
2023-09-02 15:11:01 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=780433071811581229, text=id turpis lectus consectetur adipiscing adipiscing consectetur Kafka turpis tristique elit lectus in, userId=1191837154674232987, textV2=null, createdAt=2023-06-03T18:35:50))
2023-09-02 15:11:02 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2514998735671602343, text=ipsum adipiscing dolor turpis ultricies in adipiscing Kafka elit tristique dignissim pharetra dignissim, userId=8753442872728110200, textV2=null, createdAt=2023-06-03T21:28:02))
2023-09-02 15:11:02 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4418422071370639287, text=dignissim pharetra elit ornare mauris dolor turpis Kafka dignissim adipiscing ipsum ut adipiscing, userId=43500423823780847, textV2=null, createdAt=2023-06-03T22:04:23))
2023-09-02 15:11:03 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1374846241086832923, text=mauris elit id ipsum tristique ipsum ut Kafka in adipiscing ut adipiscing varius, userId=8855588630421123754, textV2=null, createdAt=2023-08-17T01:44:39))
2023-09-02 15:11:03 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8434289978324323493, text=in id in in consectetur elit dignissim Kafka lectus tempus in dignissim varius pharetra, userId=3362546748750850068, textV2=null, createdAt=2023-06-03T22:27:53))
2023-09-02 15:11:04 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2926730489141400142, text=tempus id elit sit ut lectus sit Kafka in consectetur dignissim ipsum adipiscing tempus, userId=6609221594222982832, textV2=null, createdAt=2023-06-03T22:28:43))
2023-09-02 15:11:04 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4350165607286646997, text=sit dolor lectus pharetra tristique tristique turpis Kafka tempus ultricies pharetra tristique id mauris, userId=2964643008804295043, textV2=null, createdAt=2023-06-03T22:31:43))
2023-09-02 15:11:05 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=437164424833622041, text=varius mauris ornare in pharetra id ut Kafka id adipiscing sit ut id lectus, userId=2325605596905165007, textV2=null, createdAt=2023-06-03T22:59:13))
2023-09-02 15:11:05 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8523945454516851306, text=tristique elit consectetur ut lectus elit mauris Kafka tempus pharetra elit tristique varius venenatis, userId=5299428700561195744, textV2=null, createdAt=2023-06-03T23:28:04))
2023-09-02 15:11:06 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=624297757820129739, text=dignissim tristique sit tempus pharetra dignissim ultricies Kafka ipsum elit venenatis ut ultricies lectus, userId=201974315026448531, textV2=null, createdAt=2023-06-03T23:32:54))
2023-09-02 15:11:06 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6209275110280185952, text=dignissim ornare tristique dignissim dignissim lectus elit Kafka dignissim id lectus ut ultricies lectus, userId=6859596356669821242, textV2=null, createdAt=2023-06-03T19:23:10))
2023-09-02 15:11:07 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3219200074855151571, text=ipsum turpis mauris ornare ornare dolor elit Kafka tristique venenatis lectus tristique venenatis id, userId=5894862793086304276, textV2=null, createdAt=2023-06-03T21:19:12))
2023-09-02 15:11:07 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:11:07 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3421652464610324120, text=ut elit dolor venenatis dolor ut dignissim Kafka ornare lectus turpis tempus adipiscing ut, userId=6904066873242741566, textV2=null, createdAt=2023-06-03T21:23:22))
2023-09-02 15:11:08 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7660151521649130715, text=sit dignissim in dignissim in dignissim dolor Kafka mauris lectus in dolor ultricies ipsum, userId=3711135748044971694, textV2=null, createdAt=2023-06-03T21:40:42))
2023-09-02 15:11:08 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1230488670510284172, text=tristique lectus elit tempus consectetur venenatis ipsum Kafka sit in ipsum venenatis mauris in, userId=1146058261500799800, textV2=null, createdAt=2023-06-03T21:46:53))
2023-09-02 15:11:09 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5624909911373550035, text=lectus adipiscing sit lectus tristique consectetur elit Kafka sit ornare ut sit sit ipsum, userId=2618245395099273989, textV2=null, createdAt=2023-05-28T23:19:31))
2023-09-02 15:11:09 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7903176207808740554, text=tristique lectus lectus in adipiscing pharetra dignissim Kafka varius id dolor ornare turpis elit, userId=4651859657778202961, textV2=null, createdAt=2023-06-03T18:00:29))
2023-09-02 15:11:10 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1803960389184014421, text=tempus dolor pharetra ut adipiscing mauris turpis Kafka consectetur ut dolor ipsum ipsum tristique, userId=4915172736036958282, textV2=null, createdAt=2023-06-03T18:04:39))
2023-09-02 15:11:10 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=673679126201010291, text=dolor pharetra pharetra sit varius pharetra tempus Kafka varius ornare ornare mauris ut ipsum, userId=840710374083105664, textV2=null, createdAt=2023-06-03T23:47:24))
2023-09-02 15:11:11 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8564620799102710677, text=varius ultricies id dignissim dolor dignissim consectetur Kafka ipsum lectus elit pharetra consectetur venenatis, userId=4278305846787888384, textV2=null, createdAt=2023-06-04T00:36:41))
2023-09-02 15:11:11 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1804688922560346995, text=elit dignissim dignissim dignissim venenatis dignissim tempus Kafka varius ultricies venenatis consectetur tempus varius, userId=1097060821191646430, textV2=null, createdAt=2023-06-04T00:52:52))
2023-09-02 15:11:12 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8659401589270930137, text=tempus id in in dolor consectetur pharetra Kafka lectus consectetur tristique elit dignissim adipiscing, userId=4500178310951881019, textV2=null, createdAt=2023-06-04T00:53:32))
2023-09-02 15:11:12 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1660829429017818264, text=adipiscing varius ornare turpis adipiscing in consectetur Kafka ut varius ipsum dolor turpis venenatis, userId=6494082330139808713, textV2=null, createdAt=2023-05-28T21:32:40))
2023-09-02 15:11:13 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=668465315855837050, text=ipsum elit sit tempus mauris id elit Kafka dignissim pharetra venenatis venenatis id dolor, userId=4286580924309388275, textV2=null, createdAt=2023-05-29T00:21:51))
2023-09-02 15:11:13 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5758604454598814315, text=ultricies mauris dolor tristique dignissim id venenatis Kafka elit lectus ipsum pharetra turpis tempus, userId=9026166650046671081, textV2=null, createdAt=2023-06-03T16:34:38))
2023-09-02 15:11:14 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2657727025782350337, text=mauris varius tempus elit dolor elit pharetra Kafka dolor elit adipiscing ultricies adipiscing adipiscing, userId=4353998741619128661, textV2=null, createdAt=2023-05-28T22:00:01))
2023-09-02 15:11:14 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8058480692678348553, text=varius elit ornare adipiscing dignissim varius dignissim Kafka dolor ut ultricies ultricies tristique id, userId=3915360293158727306, textV2=null, createdAt=2023-05-28T22:04:41))
2023-09-02 15:11:15 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3621507875593663378, text=dignissim adipiscing ultricies adipiscing turpis dignissim in Kafka consectetur ut varius turpis elit in, userId=6389368230067375045, textV2=null, createdAt=2023-05-28T22:13:31))
2023-09-02 15:11:15 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2053550105226336167, text=lectus mauris sit ipsum pharetra ipsum pharetra Kafka tristique tempus in venenatis turpis in, userId=8482682518651999054, textV2=null, createdAt=2023-06-03T22:23:13))
2023-09-02 15:11:16 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=548759171391789192, text=in dolor mauris consectetur venenatis turpis ut Kafka adipiscing dolor adipiscing tristique ipsum tempus, userId=6979302694239357300, textV2=null, createdAt=2023-06-03T22:33:33))
2023-09-02 15:11:16 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3288106612290877815, text=ultricies elit ultricies adipiscing ornare ipsum turpis Kafka varius adipiscing tempus dignissim ut mauris, userId=1779683487424244036, textV2=null, createdAt=2023-06-03T23:22:44))
2023-09-02 15:11:17 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7620599019568080687, text=dolor tempus ultricies in pharetra elit sit Kafka id venenatis elit tristique ut tristique, userId=222771270140296432, textV2=null, createdAt=2023-06-03T23:23:44))
2023-09-02 15:11:17 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=183122353246829473, text=lectus ut pharetra ornare id pharetra elit Kafka tristique varius varius dolor tristique ornare, userId=6751659466522439319, textV2=null, createdAt=2023-06-03T23:26:24))
2023-09-02 15:11:18 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5681090812654555184, text=varius turpis tristique ut elit ornare turpis Kafka venenatis ut tempus mauris tristique ut, userId=4808796225516134319, textV2=null, createdAt=2023-06-03T23:34:24))
2023-09-02 15:11:18 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2094595517303372578, text=ornare tristique dolor consectetur ornare id mauris Kafka consectetur mauris tempus id elit adipiscing, userId=309465788212059107, textV2=null, createdAt=2023-06-04T00:48:02))
2023-09-02 15:11:19 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=862420868864797084, text=ornare ipsum tristique tempus lectus tempus tristique Kafka lectus ut pharetra pharetra varius id, userId=3992626914319857093, textV2=null, createdAt=2023-06-04T01:00:42))
2023-09-02 15:11:19 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:11:19 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8742300987858105337, text=dignissim venenatis elit adipiscing pharetra dolor mauris Kafka tristique adipiscing ornare tempus varius in, userId=1266390365026150425, textV2=null, createdAt=2023-08-15T23:54:28))
2023-09-02 15:11:20 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3830927369077129863, text=dolor consectetur mauris venenatis turpis adipiscing pharetra Kafka ipsum ornare id turpis varius in, userId=6029021113451230633, textV2=null, createdAt=2023-08-16T00:09:48))
2023-09-02 15:11:20 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2585646643745700083, text=in dignissim ipsum varius lectus mauris tristique Kafka mauris venenatis elit pharetra tristique tempus, userId=4908521635827396168, textV2=null, createdAt=2023-08-16T00:04:28))
2023-09-02 15:11:21 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2769037366875377546, text=in venenatis elit dolor sit in tristique Kafka dignissim ipsum ornare venenatis tempus tempus, userId=2754027760809498882, textV2=null, createdAt=2023-08-16T00:14:38))
2023-09-02 15:11:21 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8756308502003446423, text=mauris dolor turpis ornare elit adipiscing ut Kafka ultricies pharetra pharetra in ipsum consectetur, userId=5777802753076250305, textV2=null, createdAt=2023-08-16T00:01:38))
2023-09-02 15:11:22 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1165478725543260340, text=ultricies ut elit lectus dolor lectus consectetur Kafka venenatis dolor ornare consectetur dignissim ut, userId=5445398075483030548, textV2=null, createdAt=2023-08-16T00:17:58))
2023-09-02 15:11:22 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4336684806953007249, text=lectus lectus consectetur id tempus ornare dolor Kafka varius tristique varius adipiscing adipiscing elit, userId=6844842719187770294, textV2=null, createdAt=2023-08-16T00:22:18))
2023-09-02 15:11:23 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3651817169141578664, text=in turpis tempus consectetur id ipsum sit Kafka consectetur sit consectetur mauris turpis lectus, userId=7684089299386233018, textV2=null, createdAt=2023-08-16T00:38:38))
2023-09-02 15:11:23 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1128032773197792418, text=in pharetra dolor mauris lectus tristique pharetra Kafka dolor mauris lectus ultricies ultricies id, userId=2999517740153350288, textV2=null, createdAt=2023-08-17T01:06:39))
2023-09-02 15:11:24 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5587231068262754224, text=mauris pharetra in varius ut dignissim dignissim Kafka varius tempus venenatis ultricies venenatis tempus, userId=4179301058695113735, textV2=null, createdAt=2023-08-17T01:24:29))
2023-09-02 15:11:24 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1930757660182820727, text=tempus ornare venenatis mauris turpis ultricies ornare Kafka varius id sit in elit venenatis, userId=4361695858268828747, textV2=null, createdAt=2023-08-16T00:53:09))
2023-09-02 15:11:25 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4658400535825800092, text=turpis ut pharetra turpis turpis venenatis adipiscing Kafka in ornare in consectetur elit sit, userId=311060506084470635, textV2=null, createdAt=2023-05-28T21:43))
2023-09-02 15:11:25 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3272316915148980723, text=adipiscing consectetur dolor pharetra consectetur tempus turpis Kafka sit lectus ultricies lectus adipiscing lectus, userId=5887871221066403092, textV2=null, createdAt=2023-05-28T21:48:40))
2023-09-02 15:11:26 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7741770990909999515, text=in dolor tempus mauris ornare adipiscing tempus Kafka lectus in consectetur tempus pharetra id, userId=1965763823689475406, textV2=null, createdAt=2023-05-28T22:04:21))
2023-09-02 15:11:26 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6005558424634315020, text=tempus mauris sit sit tristique ut adipiscing Kafka ornare ultricies ultricies ultricies ornare adipiscing, userId=2761797766318883044, textV2=null, createdAt=2023-05-28T22:16:41))
2023-09-02 15:11:27 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8044289724578190667, text=tempus in mauris consectetur id ut pharetra Kafka dolor tristique dolor adipiscing ut elit, userId=8377967090515789461, textV2=null, createdAt=2023-05-28T22:26:21))
2023-09-02 15:11:27 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3135740015602735348, text=tristique ornare adipiscing turpis dignissim elit consectetur Kafka varius sit lectus dignissim ipsum tempus, userId=2631496556569582447, textV2=null, createdAt=2023-05-28T23:52:01))
2023-09-02 15:11:28 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3122577106369687626, text=elit consectetur venenatis ultricies in ornare in Kafka sit tempus consectetur varius ultricies varius, userId=6365123638940176689, textV2=null, createdAt=2023-05-28T23:59:11))
2023-09-02 15:11:28 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5288678457462174988, text=dolor tempus lectus venenatis ultricies lectus varius Kafka elit varius ut venenatis tristique consectetur, userId=2616395022275896705, textV2=null, createdAt=2023-05-29T00:13:01))
2023-09-02 15:11:29 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3616507641177000786, text=mauris varius turpis dignissim adipiscing pharetra id Kafka consectetur sit ornare ut consectetur ultricies, userId=4996175564568935176, textV2=null, createdAt=2023-06-03T16:13:38))
2023-09-02 15:11:29 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2573319537555412913, text=pharetra pharetra pharetra ut in in adipiscing Kafka dignissim ipsum ornare ultricies venenatis venenatis, userId=6484042930767086819, textV2=null, createdAt=2023-06-03T16:20:38))
2023-09-02 15:11:30 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2140889568045568952, text=lectus tristique ornare ipsum tristique ut ornare Kafka dolor turpis elit elit ut ipsum, userId=2765729311426238355, textV2=null, createdAt=2023-06-03T16:26:58))
2023-09-02 15:11:30 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1906548832239139580, text=varius varius lectus mauris pharetra tristique mauris Kafka mauris varius ut consectetur dolor ultricies, userId=1732488387352341058, textV2=null, createdAt=2023-06-03T16:49:09))
2023-09-02 15:11:31 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5610294646581288584, text=pharetra dolor dignissim venenatis varius pharetra dignissim Kafka varius consectetur ornare elit in turpis, userId=1172075488748161421, textV2=null, createdAt=2023-06-03T17:55:09))
2023-09-02 15:11:31 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:11:31 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2716999670080839925, text=ut in adipiscing ipsum tempus ipsum ut Kafka ipsum elit ipsum consectetur tristique id, userId=3900665807784778537, textV2=null, createdAt=2023-06-03T21:08:02))
2023-09-02 15:11:32 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=160760559954830416, text=venenatis lectus tempus ornare in ipsum ornare Kafka sit lectus id venenatis mauris id, userId=3408914155231905080, textV2=null, createdAt=2023-06-03T21:08:32))
2023-09-02 15:11:32 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=273427498355777723, text=ut in mauris ipsum ipsum elit turpis Kafka ultricies in id ultricies in id, userId=1747065011236429989, textV2=null, createdAt=2023-06-03T21:11:12))
2023-09-02 15:11:33 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7838436538598378184, text=ultricies dolor tristique tristique tempus dignissim turpis Kafka mauris consectetur tempus ut adipiscing ornare, userId=2552399977419182477, textV2=null, createdAt=2023-06-03T21:29:22))
2023-09-02 15:11:33 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3557602543642063269, text=pharetra ornare venenatis pharetra consectetur dignissim tempus Kafka varius in adipiscing adipiscing consectetur varius, userId=5809246081016846473, textV2=null, createdAt=2023-06-03T21:48:03))
2023-09-02 15:11:34 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6520348057626956130, text=ultricies venenatis turpis in ut dignissim sit Kafka adipiscing sit ultricies lectus consectetur consectetur, userId=3298184170717373990, textV2=null, createdAt=2023-06-03T21:50:23))
2023-09-02 15:11:34 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4890089665930364627, text=dolor ipsum dignissim turpis tristique consectetur ornare Kafka tempus ipsum ornare ut venenatis tempus, userId=4001599264859373923, textV2=null, createdAt=2023-06-03T22:14:53))
2023-09-02 15:11:35 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6226825800206936490, text=sit dolor id ornare ornare ultricies consectetur Kafka in in ultricies elit venenatis tristique, userId=1157467151240638002, textV2=null, createdAt=2023-05-28T21:58:21))
2023-09-02 15:11:35 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7687193115263828758, text=sit id sit turpis tristique elit dolor Kafka venenatis lectus mauris id tempus tempus, userId=4879342102886355915, textV2=null, createdAt=2023-05-28T22:41:11))
2023-09-02 15:11:36 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4162426881208900666, text=adipiscing dolor sit ipsum ornare adipiscing in Kafka adipiscing ut adipiscing ipsum dolor turpis, userId=6518112920739267549, textV2=null, createdAt=2023-05-28T23:11:21))
2023-09-02 15:11:36 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7176511143295475346, text=venenatis turpis id ultricies tristique tristique pharetra Kafka dignissim in tristique elit varius id, userId=8717801714082289319, textV2=null, createdAt=2023-05-28T23:20:01))
2023-09-02 15:11:37 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1223848487522736864, text=dolor turpis ultricies tempus turpis adipiscing elit Kafka ornare id ut dignissim dignissim ultricies, userId=6156242685929870302, textV2=null, createdAt=2023-05-28T23:33:52))
2023-09-02 15:11:37 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4058603646677740993, text=adipiscing ipsum mauris ut sit tempus dolor Kafka lectus ut sit venenatis pharetra dolor, userId=7258666864887855847, textV2=null, createdAt=2023-06-03T22:54:03))
2023-09-02 15:11:38 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4863072916604924056, text=ornare pharetra sit varius venenatis dolor sit Kafka turpis lectus adipiscing sit tempus ultricies, userId=3765110082386738875, textV2=null, createdAt=2023-06-03T22:55:23))
2023-09-02 15:11:38 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3831281926241556315, text=ut tristique venenatis ultricies ultricies id dignissim Kafka ipsum mauris adipiscing varius adipiscing id, userId=6085221845614602877, textV2=null, createdAt=2023-06-03T23:38:54))
2023-09-02 15:11:39 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1925313852444304991, text=turpis adipiscing tristique ut ultricies turpis consectetur Kafka varius tristique in venenatis pharetra tristique, userId=2955541895721679403, textV2=null, createdAt=2023-06-04T00:33:01))
2023-09-02 15:11:39 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7502954136089381868, text=mauris tristique id mauris consectetur ornare dolor Kafka ut ornare dolor venenatis elit dolor, userId=5309537637468339030, textV2=null, createdAt=2023-06-04T00:37:21))
2023-09-02 15:11:40 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=679835477835562940, text=venenatis tempus tristique id dolor consectetur id Kafka ultricies venenatis mauris ultricies tempus lectus, userId=8782292242687366839, textV2=null, createdAt=2023-06-03T15:48:37))
2023-09-02 15:11:40 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8643411144543262727, text=dignissim venenatis in sit lectus ipsum turpis Kafka tristique adipiscing mauris tristique lectus dignissim, userId=6108849234045387003, textV2=null, createdAt=2023-06-03T16:00:58))
2023-09-02 15:11:41 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5961146515617998288, text=lectus ornare sit tempus dignissim dignissim consectetur Kafka ornare id ornare ornare consectetur varius, userId=2416563493169195235, textV2=null, createdAt=2023-06-03T16:01:58))
2023-09-02 15:11:41 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4064584564865357803, text=mauris ornare id varius dolor consectetur dignissim Kafka elit ipsum consectetur elit ut pharetra, userId=1752020508206659857, textV2=null, createdAt=2023-06-03T16:57:59))
2023-09-02 15:11:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4944313598011151633, text=tristique dolor turpis consectetur id sit tempus Kafka ut in ut in dolor adipiscing, userId=3214429380752577294, textV2=null, createdAt=2023-06-03T17:29:49))
2023-09-02 15:11:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2894018356232325235, text=sit pharetra sit tempus venenatis venenatis ultricies Kafka varius varius venenatis tristique ut dolor, userId=1514435862599225377, textV2=null, createdAt=2023-06-03T18:12:50))
2023-09-02 15:11:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6100205804284287662, text=mauris sit lectus ornare mauris venenatis mauris Kafka ultricies mauris dolor ornare consectetur id, userId=7436445936562291167, textV2=null, createdAt=2023-06-03T18:34:40))
2023-09-02 15:11:43 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:11:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=762763368142044354, text=tempus mauris ornare lectus dignissim mauris elit Kafka in ornare ipsum mauris dolor dignissim, userId=3846393106841107355, textV2=null, createdAt=2023-06-03T18:44:40))
2023-09-02 15:11:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4194539296414731136, text=elit ultricies ipsum varius ut mauris id Kafka ornare turpis ultricies lectus tempus dolor, userId=160041476596389475, textV2=null, createdAt=2023-06-03T18:57:50))
2023-09-02 15:11:44 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4391971892331430605, text=sit mauris in venenatis dolor id dolor Kafka mauris elit dolor ultricies consectetur sit, userId=7431296488729212743, textV2=null, createdAt=2023-06-03T19:01:10))
2023-09-02 15:11:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2579664177860562364, text=in dolor varius mauris ipsum id dignissim Kafka tristique in id ipsum sit ipsum, userId=4980871601402445714, textV2=null, createdAt=2023-06-03T19:02:30))
2023-09-02 15:11:45 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2256983646232354363, text=tempus pharetra dignissim mauris dignissim ornare adipiscing Kafka id ornare ipsum adipiscing tempus turpis, userId=7309910946036281455, textV2=null, createdAt=2023-06-03T21:04:02))
2023-09-02 15:11:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8330322600915210126, text=mauris pharetra tristique adipiscing tristique mauris in Kafka mauris ipsum tempus ornare ipsum dolor, userId=689441388798728871, textV2=null, createdAt=2023-06-03T21:20:22))
2023-09-02 15:11:46 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3006457122635279538, text=elit turpis elit adipiscing ipsum ultricies ut Kafka adipiscing lectus id dolor tristique adipiscing, userId=7716574875600660163, textV2=null, createdAt=2023-06-03T22:05:13))
2023-09-02 15:11:47 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3092648523540680536, text=ut elit adipiscing in dolor varius tempus Kafka adipiscing turpis turpis turpis tempus turpis, userId=5821278576020557663, textV2=null, createdAt=2023-08-17T01:43:09))
2023-09-02 15:11:47 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7971063402151471609, text=turpis varius varius dolor venenatis id turpis Kafka ut ut ipsum consectetur in tristique, userId=7965815042680701591, textV2=null, createdAt=2023-09-01T02:13:29))
2023-09-02 15:11:48 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8008918645682353668, text=mauris tempus ipsum tempus lectus dolor mauris Kafka dolor ut venenatis ultricies in elit, userId=7207199929513473875, textV2=null, createdAt=2023-09-01T02:21:31))
2023-09-02 15:11:48 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=308110552101987768, text=ultricies turpis pharetra in sit tempus varius in Kafka ipsum mauris ornare mauris turpis pharetra, userId=6665385986740741211, textV2=null, createdAt=2023-06-03T22:28:13))
2023-09-02 15:11:49 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6210253901135068525, text=ultricies ornare venenatis adipiscing consectetur venenatis venenatis varius Kafka in ipsum ornare ultricies tempus dolor, userId=377443044905699277, textV2=null, createdAt=2023-06-03T23:08:44))
2023-09-02 15:11:49 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2365437232503771035, text=ornare venenatis id pharetra dolor dignissim tristique turpis Kafka varius lectus varius id pharetra tristique, userId=3545721538769176892, textV2=null, createdAt=2023-06-03T23:18:04))
2023-09-02 15:11:50 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7708261167924113546, text=pharetra ornare turpis sit dignissim mauris venenatis ipsum Kafka tempus ornare elit tempus adipiscing tristique, userId=4268953063849694019, textV2=null, createdAt=2023-06-03T23:19:14))
2023-09-02 15:11:50 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4691910216825110962, text=dolor varius dolor dignissim in tristique adipiscing ipsum Kafka ipsum in turpis lectus venenatis id, userId=578875825202166029, textV2=null, createdAt=2023-05-28T23:47:22))
2023-09-02 15:11:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4178867954162355139, text=tristique pharetra id varius turpis ornare dolor mauris Kafka dignissim ut dignissim id sit dolor, userId=3877942565003114650, textV2=null, createdAt=2023-05-28T23:52:21))
2023-09-02 15:11:51 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3195100931077288762, text=elit sit elit id dignissim ipsum dignissim tempus Kafka dignissim pharetra elit adipiscing sit varius, userId=1135854450855671454, textV2=null, createdAt=2023-06-03T18:04:19))
2023-09-02 15:11:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7929079930966691181, text=varius ipsum adipiscing lectus tristique id dolor consectetur Kafka sit ultricies sit ultricies lectus sit, userId=3757095318725666877, textV2=null, createdAt=2023-06-03T18:45:40))
2023-09-02 15:11:52 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8857914263371057062, text=ipsum ut turpis ut venenatis ut turpis dignissim Kafka tempus ut id lectus varius elit, userId=858100933708894950, textV2=null, createdAt=2023-06-03T23:46:24))
2023-09-02 15:11:53 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1176347468248650013, text=ornare elit tristique dolor lectus varius ipsum consectetur Kafka tristique ipsum elit tempus dolor tempus, userId=5970719391020959317, textV2=null, createdAt=2023-06-04T00:10:04))
2023-09-02 15:11:53 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6511913842510518565, text=turpis tempus elit consectetur pharetra tempus tristique lectus Kafka lectus tempus mauris mauris in elit, userId=6069800333859643881, textV2=null, createdAt=2023-06-04T00:29:51))
2023-09-02 15:11:54 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8178216799388094202, text=dignissim consectetur elit varius elit id mauris consectetur Kafka turpis pharetra ut adipiscing lectus in, userId=5133030693299393846, textV2=null, createdAt=2023-06-04T00:31:11))
2023-09-02 15:11:54 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5079827439382397122, text=ipsum tempus consectetur id ipsum dignissim ornare ipsum Kafka lectus consectetur varius tempus ipsum in, userId=9075564888575589784, textV2=null, createdAt=2023-06-04T00:49:52))
2023-09-02 15:11:55 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5311923874243113004, text=ultricies ornare mauris ultricies sit ornare tristique ipsum Kafka pharetra venenatis dolor elit mauris in, userId=2769791205079175586, textV2=null, createdAt=2023-06-04T00:51:22))
2023-09-02 15:11:55 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:11:55 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5458502531341541533, text=pharetra ut pharetra venenatis mauris tempus ultricies in Kafka id ornare adipiscing dolor dignissim in, userId=2706284915743440779, textV2=null, createdAt=2023-05-29T00:20:51))
2023-09-02 15:11:56 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3307624091583869551, text=tristique tristique tempus tristique consectetur dignissim ultricies sit Kafka in turpis sit lectus ornare elit, userId=8014369351674622067, textV2=null, createdAt=2023-06-03T15:53:27))
2023-09-02 15:11:56 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7635890136891168618, text=ornare elit ut ultricies lectus mauris ultricies consectetur Kafka elit elit ut ornare consectetur sit, userId=3234204490336493109, textV2=null, createdAt=2023-06-03T15:58:28))
2023-09-02 15:11:57 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8133653281590746871, text=ultricies varius in ipsum adipiscing dignissim adipiscing consectetur Kafka venenatis ornare turpis id in tristique, userId=7899794929814553952, textV2=null, createdAt=2023-05-28T22:33:01))
2023-09-02 15:11:57 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8482891675145097526, text=id sit varius elit dolor ipsum mauris sit Kafka ipsum dolor id ornare venenatis varius, userId=7115598804572284922, textV2=null, createdAt=2023-06-03T17:11:19))
2023-09-02 15:11:58 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5370564164357438055, text=lectus ipsum venenatis id ut tempus sit mauris Kafka adipiscing mauris lectus lectus dignissim adipiscing, userId=1395710104742493599, textV2=null, createdAt=2023-06-03T17:12:59))
2023-09-02 15:11:58 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7036938052919755070, text=id dignissim venenatis elit lectus venenatis adipiscing dignissim Kafka tempus pharetra turpis tristique id dignissim, userId=8681833333478469897, textV2=null, createdAt=2023-06-03T17:38:49))
2023-09-02 15:11:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3901202033582674590, text=mauris pharetra ultricies adipiscing ornare tristique varius dignissim Kafka id consectetur tristique lectus in mauris, userId=1115714500716609053, textV2=null, createdAt=2023-06-03T23:06:24))
2023-09-02 15:11:59 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6765309376533970926, text=elit adipiscing tristique dolor ultricies adipiscing turpis in Kafka tristique varius in tempus mauris in, userId=1110134650333145557, textV2=null, createdAt=2023-06-03T23:23:04))
2023-09-02 15:12:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1708398989530923846, text=lectus ut dignissim pharetra sit in dolor turpis Kafka dignissim ipsum sit dignissim ut tristique, userId=412943176228016680, textV2=null, createdAt=2023-06-03T23:26:34))
2023-09-02 15:12:00 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1679176970879441765, text=lectus tempus turpis ultricies dolor pharetra tempus turpis Kafka elit dolor turpis dolor adipiscing adipiscing, userId=5083999154212524311, textV2=null, createdAt=2023-06-03T23:57:44))
2023-09-02 15:12:01 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6090067025145399494, text=ornare in lectus ornare mauris pharetra elit turpis Kafka elit adipiscing tempus in id dignissim, userId=6326983983337633582, textV2=null, createdAt=2023-06-04T00:58:32))
2023-09-02 15:12:01 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2260864684452122875, text=dolor dolor lectus varius id adipiscing lectus tristique Kafka ipsum ipsum adipiscing ornare ultricies pharetra, userId=8334309883480281775, textV2=null, createdAt=2023-06-04T01:04:12))
2023-09-02 15:12:02 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2729394185249840212, text=in tempus dolor pharetra venenatis venenatis tristique id Kafka pharetra ultricies venenatis ut dolor adipiscing, userId=4573030266982430403, textV2=null, createdAt=2023-08-15T23:59:18))
2023-09-02 15:12:02 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8292029380431979914, text=adipiscing adipiscing varius ipsum elit dignissim tristique consectetur Kafka tempus tempus tempus ipsum dolor ut, userId=446037651242291358, textV2=null, createdAt=2023-08-15T23:52:08))
2023-09-02 15:12:03 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4047757072785353341, text=ipsum sit pharetra id pharetra sit consectetur pharetra Kafka ornare dolor turpis in turpis turpis, userId=7921246454946932791, textV2=null, createdAt=2023-08-16T00:00:38))
2023-09-02 15:12:03 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=214322922484831105, text=dignissim varius pharetra ultricies mauris dolor dignissim varius Kafka in dignissim dolor ipsum dolor sit, userId=6348127333200236845, textV2=null, createdAt=2023-08-16T00:06:38))
2023-09-02 15:12:04 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8260123703433239537, text=adipiscing dignissim id pharetra in turpis in id Kafka id turpis id turpis elit varius, userId=6033129852085848445, textV2=null, createdAt=2023-08-16T00:09:38))
2023-09-02 15:12:04 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4433198214945084955, text=mauris varius sit turpis tempus elit lectus dignissim Kafka tristique lectus turpis ornare ornare ultricies, userId=8157757941911849997, textV2=null, createdAt=2023-08-16T00:12:28))
2023-09-02 15:12:05 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1960164520795609137, text=ut turpis dolor ut varius sit lectus tempus Kafka ut elit turpis varius consectetur id, userId=1436112402585779785, textV2=null, createdAt=2023-08-16T00:30:18))
2023-09-02 15:12:05 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4896092889794507164, text=dolor in ultricies mauris dolor adipiscing sit turpis Kafka in lectus ultricies venenatis tristique tempus, userId=7659270075338550358, textV2=null, createdAt=2023-08-16T00:34:08))
2023-09-02 15:12:06 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2758401715658037339, text=venenatis dignissim dignissim turpis tristique ultricies ornare adipiscing Kafka mauris dignissim dignissim ipsum in mauris, userId=556275137820469637, textV2=null, createdAt=2023-08-16T00:36:48))
2023-09-02 15:12:06 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1509210185072618575, text=sit pharetra lectus ut venenatis tempus pharetra turpis Kafka ut turpis tristique ipsum ipsum ultricies, userId=6740782949985705397, textV2=null, createdAt=2023-08-16T00:37:08))
2023-09-02 15:12:07 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9063792400246885944, text=adipiscing ornare tempus ornare ut elit adipiscing tempus Kafka elit id elit elit id dignissim, userId=6666408912214923209, textV2=null, createdAt=2023-08-17T00:49:19))
2023-09-02 15:12:07 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:12:07 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6939013728932522054, text=dolor ipsum mauris tempus adipiscing tristique id tristique Kafka consectetur dignissim lectus dignissim ornare turpis, userId=6657760776165099809, textV2=null, createdAt=2023-08-17T00:51:29))
2023-09-02 15:12:08 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4813383131165254259, text=tristique dolor elit venenatis ultricies adipiscing consectetur varius Kafka turpis mauris ultricies sit ipsum ultricies, userId=321233630235458333, textV2=null, createdAt=2023-08-17T00:59:09))
2023-09-02 15:12:08 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4784740946769847781, text=varius pharetra turpis venenatis ultricies ultricies lectus tempus Kafka tristique sit dignissim ut sit turpis, userId=6137851267722476947, textV2=null, createdAt=2023-08-17T01:13:39))
2023-09-02 15:12:09 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=57953962213826240, text=tristique tristique venenatis dignissim ut tristique pharetra ornare Kafka ipsum varius consectetur elit varius tempus, userId=7054658495750309004, textV2=null, createdAt=2023-08-17T01:16:19))
2023-09-02 15:12:09 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2409537728944905156, text=varius ultricies ultricies turpis dolor tristique varius turpis Kafka elit ornare in venenatis ultricies elit, userId=78886679806899679, textV2=null, createdAt=2023-08-17T01:27:49))
2023-09-02 15:12:10 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5356208082334902564, text=lectus pharetra ultricies lectus elit ut pharetra mauris Kafka tristique consectetur tempus ipsum id id, userId=556078419827846977, textV2=null, createdAt=2023-08-17T01:32:09))
2023-09-02 15:12:10 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8257238693803326944, text=ultricies mauris elit sit turpis ultricies varius id Kafka tempus dignissim lectus consectetur id tempus, userId=1345725276045365520, textV2=null, createdAt=2023-08-17T01:33:49))
2023-09-02 15:12:11 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=768329351739029271, text=varius pharetra tristique ornare consectetur consectetur ut venenatis Kafka venenatis ut adipiscing ipsum tristique tempus, userId=5198477856372034899, textV2=null, createdAt=2023-08-17T01:33:59))
2023-09-02 15:12:11 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6448555385660605667, text=ornare sit sit lectus venenatis turpis id ultricies Kafka tristique pharetra ut sit turpis varius, userId=3795442437177629220, textV2=null, createdAt=2023-08-16T00:45:29))
2023-09-02 15:12:12 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6436257367153054559, text=id consectetur ornare adipiscing adipiscing dolor id pharetra Kafka elit dignissim turpis id ipsum ultricies, userId=5100938077905759277, textV2=null, createdAt=2023-08-16T00:42:49))
2023-09-02 15:12:12 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6684744865195477152, text=dolor ultricies lectus varius ut ut in dignissim Kafka elit in dignissim id turpis ornare, userId=7833801665371795029, textV2=null, createdAt=2023-05-28T21:35:10))
2023-09-02 15:12:13 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1574642391632229030, text=adipiscing turpis varius pharetra turpis tristique dolor consectetur Kafka pharetra ornare tempus mauris sit adipiscing, userId=178680897266645783, textV2=null, createdAt=2023-05-28T21:51:30))
2023-09-02 15:12:13 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5290775174570560969, text=tempus sit ipsum dignissim adipiscing lectus tempus consectetur Kafka lectus mauris mauris pharetra pharetra tristique, userId=1928938981678572871, textV2=null, createdAt=2023-05-28T22:05:31))
2023-09-02 15:12:14 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3598980624075706080, text=elit ultricies varius in consectetur id ut id Kafka ut lectus mauris in sit dignissim, userId=3987330932312177158, textV2=null, createdAt=2023-05-28T22:12:11))
2023-09-02 15:12:14 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4752584486108107308, text=elit tristique dignissim lectus ornare adipiscing tempus elit Kafka in turpis sit consectetur turpis id, userId=8611930336670101209, textV2=null, createdAt=2023-05-28T22:17:01))
2023-09-02 15:12:15 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4255154985084832133, text=in tristique ultricies tempus dolor varius venenatis sit Kafka ipsum sit turpis tempus id ornare, userId=1940125511377504277, textV2=null, createdAt=2023-05-28T22:49:11))
2023-09-02 15:12:15 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8179499587380238951, text=id sit tristique sit varius tristique dignissim adipiscing Kafka venenatis pharetra ornare dignissim ipsum tempus, userId=8799125888628841594, textV2=null, createdAt=2023-05-28T22:57:21))
2023-09-02 15:12:16 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7230259102948155038, text=id in tristique lectus consectetur in turpis dignissim Kafka ut tempus elit id adipiscing ipsum, userId=6540413949730077326, textV2=null, createdAt=2023-05-28T23:39:42))
2023-09-02 15:12:16 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4901714370219034737, text=turpis varius in ut lectus dolor lectus tristique Kafka lectus id elit lectus dolor dignissim, userId=6502376288517314576, textV2=null, createdAt=2023-05-28T23:53:11))
2023-09-02 15:12:17 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=835152906776932954, text=ultricies pharetra turpis id mauris lectus pharetra tempus Kafka tempus dolor consectetur ornare ornare pharetra, userId=4847511325294685615, textV2=null, createdAt=2023-05-29T00:12:11))
2023-09-02 15:12:17 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8059362679097982984, text=tempus ultricies ut ultricies in tristique ipsum dignissim Kafka pharetra varius tristique mauris ultricies pharetra, userId=887619558994634159, textV2=null, createdAt=2023-06-03T15:52:17))
2023-09-02 15:12:18 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3669343516575785919, text=dignissim ipsum tempus in id consectetur ipsum lectus Kafka ultricies dignissim venenatis turpis adipiscing sit, userId=2032801717294524428, textV2=null, createdAt=2023-06-03T16:00:28))
2023-09-02 15:12:18 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2123890974394350607, text=consectetur dolor dignissim turpis turpis id ipsum pharetra Kafka ut tempus adipiscing pharetra varius mauris, userId=979990505166107317, textV2=null, createdAt=2023-06-03T16:19:58))
2023-09-02 15:12:19 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6373664699763492011, text=id pharetra pharetra turpis consectetur consectetur ultricies turpis Kafka pharetra mauris dignissim ultricies sit elit, userId=7598450317609850399, textV2=null, createdAt=2023-06-03T16:44:58))
2023-09-02 15:12:19 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:12:19 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8606453061449018952, text=ut elit consectetur adipiscing lectus ut adipiscing sit Kafka ut tristique in ut pharetra in, userId=3161861478509233823, textV2=null, createdAt=2023-06-03T17:45:29))
2023-09-02 15:12:20 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7307058123257046883, text=tempus sit sit ipsum ornare elit lectus in Kafka varius dignissim mauris pharetra ut tempus, userId=184160523973771693, textV2=null, createdAt=2023-06-03T17:56:09))
2023-09-02 15:12:20 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=414353814017137604, text=lectus tempus dignissim sit adipiscing ipsum ut tristique Kafka turpis dignissim consectetur turpis adipiscing varius, userId=4985671175684437084, textV2=null, createdAt=2023-06-03T18:17:10))
2023-09-02 15:12:21 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4315767481057147772, text=pharetra ornare adipiscing ut dolor consectetur in ut Kafka pharetra elit varius elit mauris dignissim, userId=6096461153384558696, textV2=null, createdAt=2023-06-03T18:25:10))
2023-09-02 15:12:21 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3109788199545751675, text=venenatis consectetur adipiscing elit dolor venenatis ipsum consectetur Kafka pharetra ultricies dignissim ut tristique turpis, userId=5558384112105963749, textV2=null, createdAt=2023-06-03T18:41:50))
2023-09-02 15:12:22 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2911960008734745083, text=in tristique venenatis ultricies sit turpis varius sit Kafka dignissim consectetur turpis ultricies adipiscing id, userId=4523505865185713227, textV2=null, createdAt=2023-06-03T18:43:20))
2023-09-02 15:12:22 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3201133314193301842, text=adipiscing adipiscing venenatis tristique adipiscing adipiscing venenatis dignissim Kafka sit ipsum ipsum varius ornare lectus, userId=8823515071263896311, textV2=null, createdAt=2023-06-03T18:57:40))
2023-09-02 15:12:23 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7829213160851488024, text=elit dignissim venenatis ultricies adipiscing mauris lectus dignissim Kafka sit id lectus mauris tempus ultricies, userId=6844459214794533142, textV2=null, createdAt=2023-06-03T19:14:20))
2023-09-02 15:12:23 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6192428100275062533, text=ornare consectetur dignissim sit adipiscing ut varius consectetur Kafka pharetra ut adipiscing ut adipiscing id, userId=2128118831993145772, textV2=null, createdAt=2023-06-03T19:24:10))
2023-09-02 15:12:24 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3864938775670304743, text=tristique mauris in ipsum dignissim dolor varius pharetra Kafka tempus dignissim tempus dolor ultricies venenatis, userId=8354696645655320999, textV2=null, createdAt=2023-06-03T22:24:13))
2023-09-02 15:12:24 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5506931586417308393, text=in varius ipsum lectus tristique ultricies turpis ultricies Kafka id consectetur lectus consectetur consectetur consectetur, userId=3976966708063524969, textV2=null, createdAt=2023-06-03T22:35:53))
2023-09-02 15:12:25 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8807071919108405668, text=adipiscing ultricies ultricies mauris id tempus ornare sit Kafka dignissim sit tempus ipsum tempus adipiscing, userId=7110186873658027305, textV2=null, createdAt=2023-06-03T22:42:13))
2023-09-02 15:12:25 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=571063155982082238, text=consectetur varius mauris consectetur turpis in dolor turpis Kafka varius ultricies tristique ornare ultricies tempus, userId=7525625564178330781, textV2=null, createdAt=2023-05-28T22:15:41))
2023-09-02 15:12:26 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4588674926862757735, text=lectus dignissim ipsum varius turpis sit ornare tempus Kafka sit pharetra adipiscing ultricies elit ultricies, userId=7395719285204566, textV2=null, createdAt=2023-05-28T22:21:01))
2023-09-02 15:12:26 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3780969374071730559, text=id tristique mauris dignissim consectetur tristique consectetur tristique Kafka venenatis turpis ornare dolor adipiscing lectus, userId=9124605094173500416, textV2=null, createdAt=2023-05-28T22:40:31))
2023-09-02 15:12:27 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5215273409278120011, text=pharetra venenatis in turpis in elit adipiscing ultricies Kafka dignissim venenatis lectus varius sit elit, userId=8529721648683699999, textV2=null, createdAt=2023-05-28T22:55:21))
2023-09-02 15:12:27 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=664281645916692237, text=turpis id venenatis lectus dignissim id sit dignissim Kafka ornare elit pharetra ipsum dolor tristique, userId=7697232579649832751, textV2=null, createdAt=2023-05-28T23:16:11))
2023-09-02 15:12:28 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2144041432290480313, text=tristique lectus lectus varius consectetur lectus tristique ultricies Kafka ut adipiscing in dolor lectus elit, userId=1627965026767529992, textV2=null, createdAt=2023-06-03T23:11:04))
2023-09-02 15:12:28 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1947133169000215272, text=dignissim mauris lectus pharetra consectetur ornare consectetur in Kafka adipiscing mauris tristique venenatis lectus mauris, userId=6485439902291208413, textV2=null, createdAt=2023-06-04T00:01:34))
2023-09-02 15:12:29 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3682829424950670094, text=pharetra tempus ut tempus dignissim consectetur turpis ornare Kafka in ornare adipiscing varius turpis venenatis, userId=5567890073714703020, textV2=null, createdAt=2023-06-04T00:24:03))
2023-09-02 15:12:29 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2895222885271972695, text=consectetur ipsum ipsum tempus ut venenatis in in Kafka varius lectus id tempus ultricies consectetur, userId=3610801295645360018, textV2=null, createdAt=2023-06-04T00:29:31))
2023-09-02 15:12:30 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7863330872290614615, text=dolor tempus mauris ut venenatis pharetra pharetra dolor Kafka ipsum consectetur pharetra consectetur ornare ut, userId=4199327592360822630, textV2=null, createdAt=2023-06-04T00:39:21))
2023-09-02 15:12:30 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7315294814631463447, text=varius adipiscing lectus sit adipiscing dignissim tempus tempus Kafka turpis turpis ornare tempus elit tristique, userId=1687688929379447687, textV2=null, createdAt=2023-05-28T23:55:11))
2023-09-02 15:12:31 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6969619824985645592, text=dolor ultricies dolor adipiscing elit venenatis dignissim varius Kafka pharetra turpis sit sit ultricies consectetur, userId=1760006056431839092, textV2=null, createdAt=2023-05-29T00:02:31))
2023-09-02 15:12:31 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:12:31 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4050385412925323991, text=elit elit ornare varius tempus dolor adipiscing ut Kafka id venenatis in consectetur venenatis sit, userId=7985478907836970318, textV2=null, createdAt=2023-06-03T16:49:39))
2023-09-02 15:12:32 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8348948137245402872, text=tristique mauris consectetur elit elit dolor dolor turpis Kafka ultricies turpis elit in ut sit, userId=6375252629250659133, textV2=null, createdAt=2023-06-03T17:24:59))
2023-09-02 15:12:32 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=538612932040334236, text=ornare ornare ultricies in sit dolor turpis venenatis Kafka id tempus tempus in ultricies lectus, userId=8203625292198655074, textV2=null, createdAt=2023-06-03T17:36:09))
2023-09-02 15:12:33 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=895696746495314266, text=tempus tempus varius ornare ut turpis dolor venenatis Kafka pharetra ornare turpis in in ut, userId=2094517241003622847, textV2=null, createdAt=2023-06-03T18:41:40))
2023-09-02 15:12:33 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1930379539443043198, text=tempus elit ipsum varius venenatis dignissim ultricies varius Kafka varius pharetra sit lectus in lectus, userId=4882022060916223466, textV2=null, createdAt=2023-06-03T21:10:32))
2023-09-02 15:12:34 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2712064190113711926, text=lectus ornare adipiscing dolor ultricies mauris ipsum turpis Kafka pharetra ut id ipsum ultricies consectetur, userId=6966955375594473501, textV2=null, createdAt=2023-06-03T21:25:32))
2023-09-02 15:12:35 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8972381150220333600, text=lectus turpis lectus tristique tristique ipsum in lectus Kafka consectetur tristique lectus dolor ipsum in, userId=4484845336670203212, textV2=null, createdAt=2023-06-03T21:39:42))
2023-09-02 15:12:35 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8345945572452061010, text=ultricies ipsum pharetra id turpis sit ipsum ipsum Kafka consectetur lectus tristique mauris dignissim consectetur, userId=8350954744834721424, textV2=null, createdAt=2023-06-03T21:47:13))
2023-09-02 15:12:36 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7300081848197330021, text=ipsum in tristique venenatis id ultricies adipiscing id Kafka consectetur ultricies dignissim turpis lectus sit, userId=1763061643734716127, textV2=null, createdAt=2023-06-03T22:12:43))
2023-09-02 15:12:36 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2497151181841039818, text=elit elit ipsum id elit ut turpis ut Kafka ut dignissim dolor ipsum in dignissim, userId=6492377183010147078, textV2=null, createdAt=2023-08-17T01:36:49))
2023-09-02 15:12:37 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=266782937076936490, text=ut lectus adipiscing tempus tristique elit ut varius Kafka varius mauris ornare varius consectetur tempus, userId=6212551889861842235, textV2=null, createdAt=2023-08-17T01:39:39))
2023-09-02 15:12:37 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3960304946560304212, text=sit sit dignissim ornare pharetra mauris pharetra in Kafka tristique tempus ultricies elit adipiscing ipsum, userId=4640096970155555094, textV2=null, createdAt=2023-09-01T02:17:31))
2023-09-02 15:12:38 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5284817027200197205, text=turpis id sit consectetur lectus turpis venenatis dignissim Kafka ultricies consectetur ultricies consectetur lectus pharetra, userId=2240714464152091855, textV2=null, createdAt=2023-09-01T02:22:01))
2023-09-02 15:12:38 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7395248881283150819, text=dolor in id tempus in dolor lectus in Kafka venenatis elit elit tempus turpis turpis lectus, userId=4611843925924248052, textV2=null, createdAt=2023-06-03T21:49:33))
2023-09-02 15:12:39 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1117184402186349399, text=ultricies varius tristique elit adipiscing id ultricies consectetur Kafka tristique mauris pharetra consectetur adipiscing elit in, userId=8792310949047392684, textV2=null, createdAt=2023-06-03T22:02:53))
2023-09-02 15:12:39 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8507689784344562442, text=dignissim dignissim mauris dignissim ut ultricies mauris dolor Kafka ipsum mauris turpis adipiscing venenatis venenatis pharetra, userId=3721520239960902080, textV2=null, createdAt=2023-06-03T22:09:13))
2023-09-02 15:12:40 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=395922642297969177, text=consectetur ut ut in pharetra lectus lectus dignissim Kafka tristique elit venenatis pharetra ut venenatis lectus, userId=2079127957921251996, textV2=null, createdAt=2023-05-28T23:02:01))
2023-09-02 15:12:40 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9174017675272252941, text=pharetra ut tempus lectus dolor tristique dolor turpis Kafka venenatis adipiscing dignissim venenatis ornare pharetra ornare, userId=525771771492942008, textV2=null, createdAt=2023-05-28T23:50:31))
2023-09-02 15:12:41 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2305067407557231340, text=dignissim ipsum adipiscing mauris ipsum tristique venenatis dignissim Kafka tristique mauris lectus venenatis id tempus venenatis, userId=1362291573034507892, textV2=null, createdAt=2023-06-03T18:02:39))
2023-09-02 15:12:41 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3469189462358217639, text=consectetur tristique sit mauris turpis lectus elit ipsum Kafka in ipsum lectus id dolor mauris in, userId=8703175621001894571, textV2=null, createdAt=2023-06-03T18:16))
2023-09-02 15:12:42 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4207882658034075873, text=in elit ornare pharetra varius id id id Kafka tristique lectus id id sit ornare tristique, userId=4619853842746484575, textV2=null, createdAt=2023-06-03T18:24:10))
2023-09-02 15:12:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6562450361699260501, text=tempus ultricies turpis tempus tempus ultricies in ultricies Kafka tristique adipiscing ipsum adipiscing ultricies ornare sit, userId=1361066648936604032, textV2=null, createdAt=2023-06-03T18:30:40))
2023-09-02 15:12:43 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7599236560960380993, text=elit dolor venenatis mauris elit sit adipiscing lectus Kafka pharetra sit lectus consectetur id venenatis turpis, userId=1869224089786082303, textV2=null, createdAt=2023-06-03T23:47:44))
2023-09-02 15:12:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2389809465103473870, text=turpis mauris ultricies consectetur tempus ipsum tempus lectus Kafka consectetur varius dignissim id in pharetra ut, userId=352017418882579839, textV2=null, createdAt=2023-06-03T23:56:24))
2023-09-02 15:12:43 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:12:44 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=142456334768557729, text=ipsum elit ut id mauris mauris adipiscing tristique Kafka consectetur elit pharetra elit tempus sit ultricies, userId=824771848861059083, textV2=null, createdAt=2023-06-04T00:08:24))
2023-09-02 15:12:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2032532211568180597, text=tristique tempus in consectetur lectus pharetra adipiscing tristique Kafka dignissim tristique ultricies consectetur dolor tempus lectus, userId=7685631019989950982, textV2=null, createdAt=2023-06-04T00:38:01))
2023-09-02 15:12:45 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3544015571087445855, text=consectetur sit sit venenatis turpis tempus mauris in Kafka dignissim ut lectus id sit lectus dolor, userId=4115688450451128727, textV2=null, createdAt=2023-06-04T00:43:42))
2023-09-02 15:12:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5136252262529337383, text=lectus varius adipiscing ipsum dignissim tristique pharetra sit Kafka id varius ipsum in tristique id tempus, userId=1344324951893968219, textV2=null, createdAt=2023-06-04T00:55:12))
2023-09-02 15:12:46 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=546261022081379377, text=tristique tristique ornare sit consectetur sit ornare tristique Kafka ornare ornare tristique ut in ornare turpis, userId=8719666343613263520, textV2=null, createdAt=2023-06-03T15:52:47))
2023-09-02 15:12:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6857090638885896386, text=elit id turpis venenatis pharetra dignissim lectus tristique Kafka ut turpis venenatis lectus tristique varius consectetur, userId=4600819937046229348, textV2=null, createdAt=2023-06-03T16:15:28))
2023-09-02 15:12:47 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1143509903628983398, text=sit ultricies adipiscing venenatis tristique pharetra id turpis Kafka tempus turpis varius dignissim ut pharetra pharetra, userId=4153831425700625100, textV2=null, createdAt=2023-05-28T22:06:41))
2023-09-02 15:12:47 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7082908176933095366, text=varius tempus dignissim id turpis dolor sit dolor Kafka lectus adipiscing ornare adipiscing venenatis in elit, userId=2861320248069418208, textV2=null, createdAt=2023-05-28T22:22:41))
2023-09-02 15:12:48 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3057775144248999226, text=varius pharetra ultricies ultricies dignissim in consectetur id Kafka ut tempus ipsum turpis ornare mauris tristique, userId=7110726326188852023, textV2=null, createdAt=2023-05-28T22:37:11))
2023-09-02 15:12:48 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6866929769462944838, text=consectetur ut adipiscing sit mauris id ultricies tempus Kafka id dolor ut tempus ut lectus in, userId=8420819567650935867, textV2=null, createdAt=2023-05-28T22:45:31))
2023-09-02 15:12:49 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3490241072661612299, text=lectus dignissim pharetra ultricies mauris ut ut tempus Kafka id id lectus tristique tristique ornare mauris, userId=2626189646171257014, textV2=null, createdAt=2023-06-03T16:56:39))
2023-09-02 15:12:49 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6074981417210985631, text=ornare tempus consectetur elit venenatis ipsum pharetra turpis Kafka tempus tempus ultricies pharetra varius adipiscing dolor, userId=3090303012365119006, textV2=null, createdAt=2023-06-03T17:53:59))
2023-09-02 15:12:50 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7322956423512844303, text=mauris in in ipsum turpis ultricies ut ultricies Kafka venenatis turpis adipiscing adipiscing ornare turpis adipiscing, userId=6294122843451753011, textV2=null, createdAt=2023-06-03T22:33:03))
2023-09-02 15:12:50 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=348782350884898770, text=ultricies ipsum venenatis consectetur elit tempus turpis tristique Kafka mauris in varius dolor varius elit ut, userId=6139255780932063412, textV2=null, createdAt=2023-06-03T22:57:33))
2023-09-02 15:12:51 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=775323966848969503, text=ornare varius tempus dolor dolor lectus elit dolor Kafka ornare sit tristique ipsum ipsum id tristique, userId=2377995195466056705, textV2=null, createdAt=2023-06-03T23:53:54))
2023-09-02 15:12:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=986931224283159058, text=pharetra turpis ipsum mauris dolor pharetra adipiscing dolor Kafka adipiscing ultricies turpis tempus id id elit, userId=2615492572028749724, textV2=null, createdAt=2023-06-04T00:03:54))
2023-09-02 15:12:52 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=415921416671637447, text=lectus lectus varius lectus lectus ultricies tempus ipsum Kafka elit sit pharetra dolor sit ultricies ipsum, userId=5650005812420155693, textV2=null, createdAt=2023-06-04T00:04:34))
2023-09-02 15:12:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=137046232687291300, text=ultricies elit ut elit id dolor varius sit Kafka varius elit in tempus adipiscing ornare dignissim, userId=3927676880729685686, textV2=null, createdAt=2023-06-04T00:56:12))
2023-09-02 15:12:53 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1828738780134989757, text=id mauris tempus ultricies elit consectetur ornare turpis Kafka mauris adipiscing ipsum ultricies ultricies ultricies tristique, userId=4541853104759961757, textV2=null, createdAt=2023-06-04T12:22:28))
2023-09-02 15:12:53 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1418473162775730215, text=sit id adipiscing varius sit turpis dignissim ultricies Kafka id elit dolor ultricies turpis elit mauris, userId=3424743966551277317, textV2=null, createdAt=2023-06-04T12:19:57))
2023-09-02 15:12:54 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7991028123661966834, text=ut venenatis in ut venenatis ultricies tristique lectus Kafka venenatis turpis tristique varius ut mauris dolor, userId=3647289282618096744, textV2=null, createdAt=2023-08-16T00:02:18))
2023-09-02 15:12:54 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7838940093778481534, text=in venenatis pharetra sit consectetur in in in Kafka sit adipiscing turpis pharetra ipsum tempus tempus, userId=2341905074162546561, textV2=null, createdAt=2023-08-16T00:16:18))
2023-09-02 15:12:55 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4344280847020082143, text=tempus dolor consectetur tempus elit tempus consectetur consectetur Kafka dignissim ipsum tristique tempus dolor varius ipsum, userId=6871701722075313427, textV2=null, createdAt=2023-08-16T00:14:18))
2023-09-02 15:12:55 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2467352686105990548, text=ipsum venenatis varius venenatis ipsum ipsum consectetur adipiscing Kafka ornare sit dolor in sit varius tempus, userId=7432164550032515200, textV2=null, createdAt=2023-08-16T00:29:38))
2023-09-02 15:12:55 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:12:56 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=738476387486430202, text=dolor in ornare consectetur varius sit pharetra lectus Kafka adipiscing dolor elit id consectetur sit ut, userId=1999577945668094827, textV2=null, createdAt=2023-08-17T00:44:28))
2023-09-02 15:12:56 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7320475909177875919, text=dignissim elit tristique ultricies in adipiscing venenatis dignissim Kafka tristique id id tristique sit mauris turpis, userId=2032711094596822263, textV2=null, createdAt=2023-08-17T00:48:39))
2023-09-02 15:12:57 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7881202858351414709, text=id tempus turpis id adipiscing dignissim lectus dignissim Kafka ut in tristique ornare sit ipsum consectetur, userId=6213579004706825852, textV2=null, createdAt=2023-08-17T01:01:59))
2023-09-02 15:12:57 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=738202746473126084, text=ultricies lectus in ornare elit turpis ornare adipiscing Kafka tristique ornare elit ipsum tristique tempus tempus, userId=8930993239511991098, textV2=null, createdAt=2023-08-17T01:04:59))
2023-09-02 15:12:58 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1391467358795567300, text=adipiscing varius id mauris pharetra ut tristique tristique Kafka in mauris dignissim ipsum tristique lectus consectetur, userId=6761180437527256158, textV2=null, createdAt=2023-08-17T01:06:29))
2023-09-02 15:12:58 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8821152943547711318, text=ornare dolor ut adipiscing adipiscing tempus id adipiscing Kafka ipsum id ipsum tristique varius dignissim lectus, userId=4623166901465251653, textV2=null, createdAt=2023-08-17T01:22:19))
2023-09-02 15:12:59 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=861916004598629104, text=tempus in ultricies pharetra id turpis tempus varius Kafka elit tempus dolor lectus mauris ut tempus, userId=9157027674395573533, textV2=null, createdAt=2023-08-17T01:25:09))
2023-09-02 15:12:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4284297114945073379, text=venenatis sit turpis venenatis id sit sit ut Kafka elit mauris dignissim turpis adipiscing turpis turpis, userId=8555609599849719347, textV2=null, createdAt=2023-08-17T01:26:29))
2023-09-02 15:13:00 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1671335997542265535, text=elit id lectus dolor mauris elit ipsum sit Kafka mauris pharetra consectetur turpis ultricies consectetur mauris, userId=1950629864409014071, textV2=null, createdAt=2023-08-16T00:45:59))
2023-09-02 15:13:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3615502487960390798, text=id ornare tempus ut ultricies ultricies adipiscing consectetur Kafka id ut varius ornare lectus ipsum ipsum, userId=1464476161472252317, textV2=null, createdAt=2023-08-16T00:47:59))
2023-09-02 15:13:01 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9064514965659713679, text=tempus consectetur elit ultricies pharetra consectetur sit in Kafka pharetra varius venenatis in venenatis sit ornare, userId=6416558087029886864, textV2=null, createdAt=2023-08-16T00:43:09))
2023-09-02 15:13:01 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1818007683548903842, text=ultricies adipiscing consectetur lectus turpis sit ut adipiscing Kafka lectus lectus pharetra ut in tristique consectetur, userId=1623608560120396882, textV2=null, createdAt=2023-05-28T21:55:50))
2023-09-02 15:13:02 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7378645228548802590, text=id elit venenatis mauris elit sit lectus consectetur Kafka varius in ipsum ultricies ut sit pharetra, userId=5886986665097595951, textV2=null, createdAt=2023-05-28T22:17:51))
2023-09-02 15:13:02 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7211872518315317173, text=ultricies tempus tempus dignissim lectus pharetra venenatis tristique Kafka consectetur consectetur adipiscing tristique turpis id venenatis, userId=361827598692483201, textV2=null, createdAt=2023-05-28T22:20:51))
2023-09-02 15:13:03 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5934832193832231372, text=adipiscing mauris adipiscing dolor elit venenatis adipiscing elit Kafka varius elit venenatis ornare ultricies adipiscing varius, userId=1103909884431416821, textV2=null, createdAt=2023-05-28T22:34:01))
2023-09-02 15:13:03 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2916501988501673476, text=ultricies dignissim mauris pharetra lectus ut id pharetra Kafka turpis consectetur elit ut dolor lectus dolor, userId=1484403263426337668, textV2=null, createdAt=2023-05-28T22:45:01))
2023-09-02 15:13:04 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8152390499817306511, text=dignissim adipiscing turpis lectus in turpis venenatis dignissim Kafka venenatis consectetur tristique adipiscing varius tempus varius, userId=1610708507205503614, textV2=null, createdAt=2023-05-29T00:01:01))
2023-09-02 15:13:04 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5103232255717481257, text=turpis ornare mauris id ornare ut sit lectus Kafka lectus tempus ipsum dignissim mauris ultricies tempus, userId=718456237093629544, textV2=null, createdAt=2023-05-29T00:19:31))
2023-09-02 15:13:05 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=799977053197727944, text=ornare pharetra elit tristique varius consectetur mauris ornare Kafka dignissim turpis varius ipsum ultricies ut ornare, userId=6909636665487281065, textV2=null, createdAt=2023-06-03T16:01:48))
2023-09-02 15:13:05 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6726188974161926699, text=elit consectetur ut tristique sit tristique tempus adipiscing Kafka dignissim ipsum sit tempus varius ut elit, userId=1831858544703359589, textV2=null, createdAt=2023-06-03T16:18:38))
2023-09-02 15:13:06 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3451285588863791071, text=lectus elit ultricies in dolor consectetur tristique ultricies Kafka lectus in elit dolor venenatis dignissim venenatis, userId=2472925209331776542, textV2=null, createdAt=2023-06-03T16:22:18))
2023-09-02 15:13:06 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5045591231912240986, text=ultricies adipiscing elit venenatis sit dignissim in ut Kafka venenatis id pharetra ultricies dignissim dolor consectetur, userId=1123706018372561422, textV2=null, createdAt=2023-06-03T17:46:49))
2023-09-02 15:13:07 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6773262410147557632, text=ut lectus adipiscing turpis turpis id dignissim varius Kafka tempus varius ultricies sit dolor venenatis tristique, userId=5457854869087022872, textV2=null, createdAt=2023-06-03T18:46:30))
2023-09-02 15:13:07 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=912256090786012258, text=tempus consectetur tristique ipsum dignissim mauris consectetur adipiscing Kafka tristique in ipsum ut tristique tempus lectus, userId=594559879287535564, textV2=null, createdAt=2023-06-03T19:03))
2023-09-02 15:13:07 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:13:08 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5840645465430403416, text=ultricies ut ipsum adipiscing mauris consectetur mauris ipsum Kafka ultricies ipsum venenatis ipsum tristique dignissim in, userId=5121011236307138436, textV2=null, createdAt=2023-06-03T19:21:30))
2023-09-02 15:13:08 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1862141114921880880, text=venenatis elit lectus in elit dignissim dolor ut Kafka ultricies mauris mauris in lectus consectetur pharetra, userId=1077286955880667865, textV2=null, createdAt=2023-06-03T21:04:22))
2023-09-02 15:13:09 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6663719101037265097, text=varius ut id id ornare ut lectus sit Kafka consectetur dignissim ut sit turpis ornare pharetra, userId=3468475690372145421, textV2=null, createdAt=2023-06-03T22:36:03))
2023-09-02 15:13:09 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7941474055276285968, text=sit ultricies tempus in id ornare ornare tristique Kafka varius ipsum dolor tempus sit varius tempus, userId=1666414428660782271, textV2=null, createdAt=2023-06-03T22:46:33))
2023-09-02 15:13:10 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1881458786233985090, text=ipsum in id dignissim tristique pharetra venenatis lectus Kafka pharetra id pharetra varius varius turpis consectetur, userId=909629459934032899, textV2=null, createdAt=2023-06-03T22:46:53))
2023-09-02 15:13:10 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1205437802471060283, text=tempus adipiscing ut in consectetur ut ipsum elit Kafka turpis pharetra tempus ornare consectetur varius dignissim, userId=985354690417126075, textV2=null, createdAt=2023-05-28T21:49:10))
2023-09-02 15:13:11 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7853755350907562167, text=consectetur lectus lectus tempus dignissim pharetra mauris turpis Kafka venenatis id tristique turpis ornare ultricies mauris, userId=2972519234218368508, textV2=null, createdAt=2023-05-28T21:49:30))
2023-09-02 15:13:11 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1608080157918180078, text=lectus dolor mauris dignissim elit mauris pharetra ornare Kafka varius consectetur dolor adipiscing lectus elit pharetra, userId=634532625513018986, textV2=null, createdAt=2023-05-28T23:06:31))
2023-09-02 15:13:12 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2427527316478906960, text=id dolor adipiscing in tempus adipiscing lectus dignissim Kafka pharetra dignissim ut ultricies consectetur id pharetra, userId=7332254788791805095, textV2=null, createdAt=2023-05-28T23:11:11))
2023-09-02 15:13:12 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9089920607504682197, text=mauris sit consectetur dolor dolor pharetra lectus lectus Kafka ornare turpis pharetra in ipsum adipiscing in, userId=1350667194993762081, textV2=null, createdAt=2023-06-03T23:16:34))
2023-09-02 15:13:13 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3719409690681865586, text=consectetur lectus dignissim consectetur venenatis ut sit tristique Kafka mauris tempus id tristique consectetur pharetra ut, userId=1731380971225375904, textV2=null, createdAt=2023-06-03T23:57:54))
2023-09-02 15:13:13 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4210228988456589940, text=ipsum dignissim lectus id mauris in venenatis ut Kafka sit tristique ornare elit consectetur consectetur in, userId=8268880332451909120, textV2=null, createdAt=2023-06-04T00:03:44))
2023-09-02 15:13:14 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8167756017491259437, text=mauris dignissim ut sit elit ornare adipiscing dolor Kafka id sit tempus ut elit mauris tristique, userId=4122165360238957229, textV2=null, createdAt=2023-06-04T00:09:14))
2023-09-02 15:13:14 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2953762585696162100, text=ultricies varius dignissim ipsum mauris varius elit ut Kafka dignissim ipsum elit ultricies dolor sit in, userId=8528027546708702531, textV2=null, createdAt=2023-06-04T00:41:11))
2023-09-02 15:13:15 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4566348156033277883, text=id id varius ipsum id ipsum dolor elit Kafka dignissim turpis venenatis ipsum id varius in, userId=1456652845659978037, textV2=null, createdAt=2023-05-28T23:43:22))
2023-09-02 15:13:15 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3505743298224537446, text=dignissim adipiscing dignissim ultricies consectetur adipiscing ornare in Kafka pharetra pharetra id varius tempus dolor tristique, userId=2781961662940773414, textV2=null, createdAt=2023-05-28T23:55:01))
2023-09-02 15:13:16 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6487044434551662790, text=dolor venenatis venenatis ornare pharetra varius dignissim dignissim Kafka dignissim lectus pharetra pharetra turpis pharetra consectetur, userId=8438961529062591657, textV2=null, createdAt=2023-06-03T15:50:17))
2023-09-02 15:13:16 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4326867162614578272, text=ipsum tristique ipsum ultricies id lectus ornare turpis Kafka ultricies id pharetra dolor ornare dignissim ut, userId=6136168285756808451, textV2=null, createdAt=2023-06-03T16:04:48))
2023-09-02 15:13:17 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7302463398094046208, text=in venenatis ultricies ornare dolor in tristique adipiscing Kafka ut dignissim ut tristique pharetra varius pharetra, userId=4491664425969508164, textV2=null, createdAt=2023-06-03T16:15:08))
2023-09-02 15:13:17 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4361678152153356532, text=turpis consectetur ornare in lectus venenatis ut adipiscing Kafka ipsum dignissim varius in ornare ornare in, userId=3216394230323089312, textV2=null, createdAt=2023-06-03T16:17:18))
2023-09-02 15:13:18 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4863624220879857879, text=tristique dolor tristique consectetur ut consectetur tempus lectus Kafka ultricies elit varius id venenatis in ornare, userId=8499578790036303464, textV2=null, createdAt=2023-06-03T16:39:08))
2023-09-02 15:13:18 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2790151538932814310, text=mauris adipiscing ornare elit tempus ornare adipiscing dignissim Kafka mauris adipiscing mauris ipsum varius tempus consectetur, userId=7992380050846547172, textV2=null, createdAt=2023-06-03T16:59:09))
2023-09-02 15:13:19 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6232274596477548226, text=ipsum ultricies venenatis ipsum ut ut ornare pharetra Kafka dignissim sit sit adipiscing dignissim dolor venenatis, userId=7691107659579666512, textV2=null, createdAt=2023-06-03T17:10:49))
2023-09-02 15:13:19 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4085408734406020619, text=dolor sit pharetra dignissim ut ut lectus ultricies Kafka venenatis id sit mauris in varius ut, userId=2814882041388457772, textV2=null, createdAt=2023-06-03T17:40:39))
2023-09-02 15:13:19 [parallel-2] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 15:13:20 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4983151275479821720, text=adipiscing dignissim lectus ipsum ultricies dolor adipiscing ultricies Kafka ultricies ipsum tempus ut turpis dignissim dignissim, userId=8045495886356054269, textV2=null, createdAt=2023-06-03T18:44:50))
2023-09-02 15:13:20 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3364338490435974202, text=adipiscing elit tristique dignissim varius tristique ipsum ultricies Kafka ultricies adipiscing elit lectus in dignissim dolor, userId=5556318958708174951, textV2=null, createdAt=2023-06-03T18:51:20))
2023-09-02 15:13:21 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1521245275306690711, text=dolor elit adipiscing ornare tempus dignissim dignissim turpis Kafka lectus adipiscing in consectetur ipsum dolor ut, userId=3457744771835677293, textV2=null, createdAt=2023-06-03T18:56:40))
2023-09-02 15:13:21 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4079599650875610527, text=pharetra id ipsum ut tristique pharetra lectus in Kafka ornare sit ornare id venenatis varius consectetur, userId=1435032726568638437, textV2=null, createdAt=2023-06-03T21:30:22))
2023-09-02 15:13:22 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7663275873946943625, text=lectus in tempus ornare venenatis varius mauris tristique Kafka tristique venenatis in elit sit dignissim consectetur, userId=4808276691889403127, textV2=null, createdAt=2023-06-03T22:07:03))
2023-09-02 15:13:22 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3496883952630832970, text=turpis tempus id consectetur ut adipiscing ipsum ultricies Kafka adipiscing adipiscing consectetur ultricies elit consectetur ornare, userId=4951169685190167917, textV2=null, createdAt=2023-06-03T22:07:33))
2023-09-02 15:13:23 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6993070714107646395, text=ut mauris mauris sit ultricies turpis dignissim pharetra Kafka adipiscing ultricies turpis elit mauris dignissim consectetur, userId=6355189955914034774, textV2=null, createdAt=2023-08-17T01:44:19))
2023-09-02 15:13:23 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8629525028840451987, text=tristique id tristique id sit turpis ipsum lectus Kafka elit venenatis varius dignissim elit adipiscing dignissim, userId=5615844913177883587, textV2=null, createdAt=2023-09-01T02:14:50))
2023-09-02 15:13:23 [parallel-2] INFO  reactor.Flux.Map.1 - onComplete()
2023-09-02 21:25:11 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 18948 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 21:25:11 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 21:25:11 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 21:25:11 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 21:25:11 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 21:25:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 21:25:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 181 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 21:25:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 21:25:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 21:25:13 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 21:25:14 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 6a4d274c-6a6c-4136-9b61-9b812cbd7dcd

2023-09-02 21:25:15 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8183
2023-09-02 21:25:15 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.487 seconds (JVM running for 10.443)
2023-09-02 22:09:00 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 20661 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 22:09:00 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 22:09:00 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 22:09:00 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 22:09:00 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 22:09:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:09:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 165 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 22:09:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:09:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 22:09:02 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 22:09:03 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 3ebcfdeb-a4fd-415b-abd0-ddf352f5bf6e

2023-09-02 22:09:05 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8183
2023-09-02 22:09:05 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.834 seconds (JVM running for 10.82)
2023-09-02 22:09:19 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying reactive elasticsearch for text kafka
2023-09-02 22:09:19 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text kafka
2023-09-02 22:09:19 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2023-09-02 22:09:19 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2023-09-02 22:09:19 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - request(1)
2023-09-02 22:09:20 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5699031294702110489, text=turpis varius id Kafka venenatis turpis, userId=3422399338741206665, textV2=null, createdAt=2023-06-03T21:30:32))
2023-09-02 22:09:20 [parallel-2] INFO  reactor.Flux.Map.1 - request(31)
2023-09-02 22:09:21 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1699168514160768051, text=lectus varius mauris Kafka sit dolor, userId=7725865971603324911, textV2=null, createdAt=2023-06-03T21:51:13))
2023-09-02 22:09:21 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9222059817655180342, text=in venenatis in Kafka tempus varius, userId=1663270945858508315, textV2=null, createdAt=2023-05-28T23:20:31))
2023-09-02 22:09:22 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3661660540089992258, text=venenatis consectetur ultricies Kafka adipiscing adipiscing, userId=2971298477575787006, textV2=null, createdAt=2023-05-29T00:05:11))
2023-09-02 22:09:22 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4441058273720202783, text=ipsum elit ornare Kafka mauris ultricies, userId=7610550145122782120, textV2=null, createdAt=2023-06-03T18:00:19))
2023-09-02 22:09:23 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3727725397816085731, text=adipiscing sit tempus Kafka consectetur venenatis, userId=281867724747015057, textV2=null, createdAt=2023-06-03T18:43:40))
2023-09-02 22:09:23 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5754569116174586109, text=ornare in tristique Kafka dignissim dolor, userId=2016134781864580339, textV2=null, createdAt=2023-06-03T18:52:30))
2023-09-02 22:09:24 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5668160367789733333, text=tristique dignissim adipiscing Kafka tempus ipsum, userId=9104306049075529117, textV2=null, createdAt=2023-06-03T19:00:10))
2023-09-02 22:09:24 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=477080962564646396, text=ut consectetur tristique Kafka elit in, userId=154786038746588520, textV2=null, createdAt=2023-06-03T19:05:30))
2023-09-02 22:09:25 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2428211052769091517, text=venenatis sit venenatis Kafka ipsum tempus, userId=6976139117227763496, textV2=null, createdAt=2023-06-03T19:07:10))
2023-09-02 22:09:25 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3380047361961469400, text=in elit ornare Kafka mauris tempus, userId=224743309440113767, textV2=null, createdAt=2023-06-04T00:36:51))
2023-09-02 22:09:26 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1971509295310424845, text=adipiscing in consectetur Kafka turpis adipiscing, userId=3460819274432524595, textV2=null, createdAt=2023-05-29T00:10:51))
2023-09-02 22:09:26 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - cancel()
2023-09-02 22:10:04 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 20801 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 22:10:04 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 22:10:04 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 22:10:04 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 22:10:04 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 22:10:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:10:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 177 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 22:10:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:10:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 22:10:05 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 22:10:07 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: a8cc4275-c0b9-4923-b23f-36382aee728f

2023-09-02 22:10:08 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8183
2023-09-02 22:10:08 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.94 seconds (JVM running for 10.879)
2023-09-02 22:11:32 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying reactive elasticsearch for text kafka
2023-09-02 22:11:32 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text kafka
2023-09-02 22:11:32 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2023-09-02 22:11:32 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2023-09-02 22:11:32 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - request(1)
2023-09-02 22:11:33 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5699031294702110489, text=turpis varius id Kafka venenatis turpis, userId=3422399338741206665, textV2=null, createdAt=2023-06-03T21:30:32))
2023-09-02 22:11:33 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - request(31)
2023-09-02 22:11:33 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1699168514160768051, text=lectus varius mauris Kafka sit dolor, userId=7725865971603324911, textV2=null, createdAt=2023-06-03T21:51:13))
2023-09-02 22:11:34 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9222059817655180342, text=in venenatis in Kafka tempus varius, userId=1663270945858508315, textV2=null, createdAt=2023-05-28T23:20:31))
2023-09-02 22:11:34 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3661660540089992258, text=venenatis consectetur ultricies Kafka adipiscing adipiscing, userId=2971298477575787006, textV2=null, createdAt=2023-05-29T00:05:11))
2023-09-02 22:11:35 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4441058273720202783, text=ipsum elit ornare Kafka mauris ultricies, userId=7610550145122782120, textV2=null, createdAt=2023-06-03T18:00:19))
2023-09-02 22:11:35 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3727725397816085731, text=adipiscing sit tempus Kafka consectetur venenatis, userId=281867724747015057, textV2=null, createdAt=2023-06-03T18:43:40))
2023-09-02 22:11:36 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5754569116174586109, text=ornare in tristique Kafka dignissim dolor, userId=2016134781864580339, textV2=null, createdAt=2023-06-03T18:52:30))
2023-09-02 22:11:36 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5668160367789733333, text=tristique dignissim adipiscing Kafka tempus ipsum, userId=9104306049075529117, textV2=null, createdAt=2023-06-03T19:00:10))
2023-09-02 22:11:37 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=477080962564646396, text=ut consectetur tristique Kafka elit in, userId=154786038746588520, textV2=null, createdAt=2023-06-03T19:05:30))
2023-09-02 22:11:37 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2428211052769091517, text=venenatis sit venenatis Kafka ipsum tempus, userId=6976139117227763496, textV2=null, createdAt=2023-06-03T19:07:10))
2023-09-02 22:11:38 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3380047361961469400, text=in elit ornare Kafka mauris tempus, userId=224743309440113767, textV2=null, createdAt=2023-06-04T00:36:51))
2023-09-02 22:11:38 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1971509295310424845, text=adipiscing in consectetur Kafka turpis adipiscing, userId=3460819274432524595, textV2=null, createdAt=2023-05-29T00:10:51))
2023-09-02 22:11:39 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3706733783532070455, text=pharetra mauris ornare Kafka adipiscing turpis, userId=4399520498698912207, textV2=null, createdAt=2023-05-28T22:16:31))
2023-09-02 22:11:39 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5175789315787363790, text=in adipiscing id Kafka dignissim consectetur, userId=6863184644203828493, textV2=null, createdAt=2023-05-28T22:31:51))
2023-09-02 22:11:40 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=334891178286155779, text=tempus elit adipiscing Kafka in ultricies, userId=6378884126996579273, textV2=null, createdAt=2023-05-28T22:39:41))
2023-09-02 22:11:40 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3330582274671239397, text=pharetra tristique id Kafka ultricies ornare, userId=313497953861835778, textV2=null, createdAt=2023-06-03T16:54:19))
2023-09-02 22:11:41 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5531525469418027040, text=venenatis tempus consectetur Kafka tristique ornare, userId=5230479650689833614, textV2=null, createdAt=2023-06-03T17:30:09))
2023-09-02 22:11:41 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8035827207311855013, text=dolor lectus tempus Kafka consectetur in, userId=106331434273388380, textV2=null, createdAt=2023-06-03T17:42:29))
2023-09-02 22:11:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8256835684576024050, text=pharetra venenatis lectus Kafka mauris adipiscing, userId=3018710213175630135, textV2=null, createdAt=2023-06-03T22:12:33))
2023-09-02 22:11:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3394005016458128866, text=venenatis ut consectetur Kafka adipiscing ipsum, userId=7812307898791684662, textV2=null, createdAt=2023-06-03T22:41:43))
2023-09-02 22:11:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6986993504486241249, text=dolor lectus id Kafka adipiscing id, userId=8588596590842061462, textV2=null, createdAt=2023-06-03T23:15:54))
2023-09-02 22:11:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2266258218323930240, text=dolor in lectus Kafka id in, userId=2691224782240074606, textV2=null, createdAt=2023-06-03T23:47:14))
2023-09-02 22:11:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5140534164528832331, text=venenatis ut turpis Kafka elit tempus, userId=409884765127830197, textV2=null, createdAt=2023-06-04T00:59:32))
2023-09-02 22:11:44 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3323354565585557744, text=dignissim turpis varius Kafka lectus tristique, userId=2289552754020537094, textV2=null, createdAt=2023-06-04T12:21:07))
2023-09-02 22:11:44 [parallel-1] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 22:11:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1583860571391003196, text=mauris varius varius Kafka consectetur ornare, userId=1639709581359254607, textV2=null, createdAt=2023-08-16T00:10:48))
2023-09-02 22:11:45 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7202212430400017026, text=id tempus venenatis Kafka tristique dignissim, userId=2272724596061148136, textV2=null, createdAt=2023-08-16T00:08:08))
2023-09-02 22:11:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1578467221563942932, text=ipsum lectus venenatis Kafka in varius, userId=8720943933888668899, textV2=null, createdAt=2023-08-16T00:27:18))
2023-09-02 22:11:46 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1675299108008638272, text=tempus in elit Kafka elit adipiscing, userId=1073895761593713264, textV2=null, createdAt=2023-08-16T00:34:18))
2023-09-02 22:11:47 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - cancel()
2023-09-02 22:12:06 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 20977 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 22:12:06 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 22:12:06 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 22:12:07 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 22:12:07 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 22:12:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:12:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 164 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 22:12:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:12:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 22:12:08 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 22:12:09 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
2023-09-02 22:12:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 22:12:09 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.expression.ParseException: Expression [#{elasticConfigData.indexName] @0: No ending suffix '}' for expression starting at character 0: #{elasticConfigData.indexName
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpressions(TemplateAwareExpressionParser.java:107)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseTemplate(TemplateAwareExpressionParser.java:62)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:49)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.lambda$getExpressionForIndexName$3(SimpleElasticsearchPersistentEntity.java:330)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1705)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getExpressionForIndexName(SimpleElasticsearchPersistentEntity.java:329)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:313)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:297)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:126)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.getIndexCoordinatesFor(ReactiveIndexTemplate.java:348)
	at org.springframework.data.elasticsearch.core.ReactiveIndexTemplate.<init>(ReactiveIndexTemplate.java:97)
	at org.springframework.data.elasticsearch.core.ReactiveElasticsearchTemplate.indexOps(ReactiveElasticsearchTemplate.java:742)
	at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:58)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
	... 71 common frames omitted
2023-09-02 22:12:33 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 22:12:33 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 21093 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 22:12:33 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 22:12:33 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 22:12:33 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 22:12:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:12:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 209 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 22:12:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 22:12:35 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 22:12:35 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 22:12:37 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 4048d4d8-7a5d-4c3c-9fce-2bcb73cb6471

2023-09-02 22:12:39 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-09-02 22:12:39 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8183
2023-09-02 22:12:40 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-09-02 22:12:41 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-09-02 22:12:41 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 14.534 seconds (JVM running for 15.548)
2023-09-02 22:13:37 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying reactive elasticsearch for text kafka
2023-09-02 22:13:37 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text kafka
2023-09-02 22:13:37 [reactor-http-epoll-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2023-09-02 22:13:38 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2023-09-02 22:13:38 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - request(1)
2023-09-02 22:13:39 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5699031294702110489, text=turpis varius id Kafka venenatis turpis, userId=3422399338741206665, textV2=null, createdAt=2023-06-03T21:30:32))
2023-09-02 22:13:39 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - request(31)
2023-09-02 22:13:39 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1699168514160768051, text=lectus varius mauris Kafka sit dolor, userId=7725865971603324911, textV2=null, createdAt=2023-06-03T21:51:13))
2023-09-02 22:13:40 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9222059817655180342, text=in venenatis in Kafka tempus varius, userId=1663270945858508315, textV2=null, createdAt=2023-05-28T23:20:31))
2023-09-02 22:13:40 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3661660540089992258, text=venenatis consectetur ultricies Kafka adipiscing adipiscing, userId=2971298477575787006, textV2=null, createdAt=2023-05-29T00:05:11))
2023-09-02 22:13:41 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4441058273720202783, text=ipsum elit ornare Kafka mauris ultricies, userId=7610550145122782120, textV2=null, createdAt=2023-06-03T18:00:19))
2023-09-02 22:13:41 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3727725397816085731, text=adipiscing sit tempus Kafka consectetur venenatis, userId=281867724747015057, textV2=null, createdAt=2023-06-03T18:43:40))
2023-09-02 22:13:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5754569116174586109, text=ornare in tristique Kafka dignissim dolor, userId=2016134781864580339, textV2=null, createdAt=2023-06-03T18:52:30))
2023-09-02 22:13:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5668160367789733333, text=tristique dignissim adipiscing Kafka tempus ipsum, userId=9104306049075529117, textV2=null, createdAt=2023-06-03T19:00:10))
2023-09-02 22:13:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=477080962564646396, text=ut consectetur tristique Kafka elit in, userId=154786038746588520, textV2=null, createdAt=2023-06-03T19:05:30))
2023-09-02 22:13:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2428211052769091517, text=venenatis sit venenatis Kafka ipsum tempus, userId=6976139117227763496, textV2=null, createdAt=2023-06-03T19:07:10))
2023-09-02 22:13:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3380047361961469400, text=in elit ornare Kafka mauris tempus, userId=224743309440113767, textV2=null, createdAt=2023-06-04T00:36:51))
2023-09-02 22:13:44 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1971509295310424845, text=adipiscing in consectetur Kafka turpis adipiscing, userId=3460819274432524595, textV2=null, createdAt=2023-05-29T00:10:51))
2023-09-02 22:13:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3706733783532070455, text=pharetra mauris ornare Kafka adipiscing turpis, userId=4399520498698912207, textV2=null, createdAt=2023-05-28T22:16:31))
2023-09-02 22:13:45 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5175789315787363790, text=in adipiscing id Kafka dignissim consectetur, userId=6863184644203828493, textV2=null, createdAt=2023-05-28T22:31:51))
2023-09-02 22:13:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=334891178286155779, text=tempus elit adipiscing Kafka in ultricies, userId=6378884126996579273, textV2=null, createdAt=2023-05-28T22:39:41))
2023-09-02 22:13:46 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3330582274671239397, text=pharetra tristique id Kafka ultricies ornare, userId=313497953861835778, textV2=null, createdAt=2023-06-03T16:54:19))
2023-09-02 22:13:47 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5531525469418027040, text=venenatis tempus consectetur Kafka tristique ornare, userId=5230479650689833614, textV2=null, createdAt=2023-06-03T17:30:09))
2023-09-02 22:13:47 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8035827207311855013, text=dolor lectus tempus Kafka consectetur in, userId=106331434273388380, textV2=null, createdAt=2023-06-03T17:42:29))
2023-09-02 22:13:48 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8256835684576024050, text=pharetra venenatis lectus Kafka mauris adipiscing, userId=3018710213175630135, textV2=null, createdAt=2023-06-03T22:12:33))
2023-09-02 22:13:48 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3394005016458128866, text=venenatis ut consectetur Kafka adipiscing ipsum, userId=7812307898791684662, textV2=null, createdAt=2023-06-03T22:41:43))
2023-09-02 22:13:49 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6986993504486241249, text=dolor lectus id Kafka adipiscing id, userId=8588596590842061462, textV2=null, createdAt=2023-06-03T23:15:54))
2023-09-02 22:13:49 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2266258218323930240, text=dolor in lectus Kafka id in, userId=2691224782240074606, textV2=null, createdAt=2023-06-03T23:47:14))
2023-09-02 22:13:50 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5140534164528832331, text=venenatis ut turpis Kafka elit tempus, userId=409884765127830197, textV2=null, createdAt=2023-06-04T00:59:32))
2023-09-02 22:13:50 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3323354565585557744, text=dignissim turpis varius Kafka lectus tristique, userId=2289552754020537094, textV2=null, createdAt=2023-06-04T12:21:07))
2023-09-02 22:13:50 [parallel-1] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 22:13:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1583860571391003196, text=mauris varius varius Kafka consectetur ornare, userId=1639709581359254607, textV2=null, createdAt=2023-08-16T00:10:48))
2023-09-02 22:13:51 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7202212430400017026, text=id tempus venenatis Kafka tristique dignissim, userId=2272724596061148136, textV2=null, createdAt=2023-08-16T00:08:08))
2023-09-02 22:13:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1578467221563942932, text=ipsum lectus venenatis Kafka in varius, userId=8720943933888668899, textV2=null, createdAt=2023-08-16T00:27:18))
2023-09-02 22:13:52 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1675299108008638272, text=tempus in elit Kafka elit adipiscing, userId=1073895761593713264, textV2=null, createdAt=2023-08-16T00:34:18))
2023-09-02 22:13:53 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2000512213313076862, text=varius turpis sit Kafka dolor elit, userId=8575917140683518410, textV2=null, createdAt=2023-08-17T00:38:58))
2023-09-02 22:13:53 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4474723291489771839, text=venenatis ut sit Kafka elit tristique, userId=1147177396401468552, textV2=null, createdAt=2023-08-17T00:44:49))
2023-09-02 22:13:54 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=320215877336682532, text=pharetra tristique varius Kafka ipsum sit, userId=5678638907018151492, textV2=null, createdAt=2023-08-17T00:45:19))
2023-09-02 22:13:54 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3362167498199410117, text=sit in adipiscing Kafka tempus id, userId=2497763960667659117, textV2=null, createdAt=2023-08-17T00:47:49))
2023-09-02 22:13:55 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8143455638241796828, text=sit ut ultricies Kafka ultricies ipsum, userId=5462892777227842330, textV2=null, createdAt=2023-08-17T00:50:09))
2023-09-02 22:13:55 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9203744620826465453, text=id sit turpis Kafka ornare tristique, userId=3612095813797481911, textV2=null, createdAt=2023-08-17T00:59:39))
2023-09-02 22:13:56 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3444445978763971748, text=in sit lectus Kafka venenatis id, userId=8408784555546805148, textV2=null, createdAt=2023-08-17T01:21:49))
2023-09-02 22:13:56 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1459771823396046078, text=varius sit pharetra Kafka ipsum lectus, userId=5581738706265883110, textV2=null, createdAt=2023-08-16T00:50:29))
2023-09-02 22:13:57 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7724146689424612154, text=adipiscing dolor tempus Kafka in tempus, userId=2942057887732947388, textV2=null, createdAt=2023-05-28T21:32:10))
2023-09-02 22:13:57 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8461099133790582680, text=varius id pharetra Kafka pharetra tristique, userId=6373927216333826345, textV2=null, createdAt=2023-05-28T21:38))
2023-09-02 22:13:58 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7233671175713228869, text=adipiscing sit elit Kafka consectetur adipiscing, userId=7083984098116690475, textV2=null, createdAt=2023-05-28T22:11:51))
2023-09-02 22:13:58 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8536910338393740831, text=venenatis varius pharetra Kafka tristique id, userId=5110963011016859680, textV2=null, createdAt=2023-05-28T22:19:51))
2023-09-02 22:13:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5259732540467214874, text=tempus ut dolor Kafka in ultricies, userId=4352666947936785188, textV2=null, createdAt=2023-05-28T22:28:11))
2023-09-02 22:13:59 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8717641229282699743, text=pharetra ipsum mauris Kafka id pharetra, userId=2896226460646287193, textV2=null, createdAt=2023-05-28T22:29:51))
2023-09-02 22:14:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1464840020616961660, text=tristique sit elit Kafka tristique ut, userId=7464105592120338039, textV2=null, createdAt=2023-05-28T22:58:31))
2023-09-02 22:14:00 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3226700166629943729, text=tempus lectus venenatis Kafka tempus dolor, userId=2559354140800196871, textV2=null, createdAt=2023-05-28T23:22:42))
2023-09-02 22:14:01 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5378665897583589062, text=in ut consectetur Kafka ultricies consectetur, userId=1552164405606045017, textV2=null, createdAt=2023-05-29T00:00:31))
2023-09-02 22:14:01 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=697613289882404801, text=lectus ultricies in Kafka in dolor, userId=5000687148226912464, textV2=null, createdAt=2023-05-29T00:15:51))
2023-09-02 22:14:02 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=959515115844508325, text=ultricies in tristique Kafka id elit, userId=2416908564688927844, textV2=null, createdAt=2023-05-29T00:21:41))
2023-09-02 22:14:02 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=611934602968717071, text=venenatis in elit Kafka ornare tempus, userId=5698598646980467294, textV2=null, createdAt=2023-06-03T16:32:08))
2023-09-02 22:14:02 [parallel-1] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 22:14:03 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3429517562796393089, text=dignissim ipsum ornare Kafka ut id, userId=4384924635904333338, textV2=null, createdAt=2023-06-03T16:35:28))
2023-09-02 22:14:03 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1492637239967913838, text=mauris elit ultricies Kafka adipiscing elit, userId=1573647117003974193, textV2=null, createdAt=2023-06-03T16:49:19))
2023-09-02 22:14:04 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1342547157460967171, text=adipiscing venenatis ultricies Kafka mauris dignissim, userId=5161169679410155642, textV2=null, createdAt=2023-06-03T16:53:39))
2023-09-02 22:14:04 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2909994045856287562, text=dignissim ultricies ipsum Kafka pharetra lectus, userId=8621468141836531306, textV2=null, createdAt=2023-06-03T16:58:09))
2023-09-02 22:14:05 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6791040906733798639, text=varius pharetra tristique Kafka ut ultricies, userId=8038558461476494693, textV2=null, createdAt=2023-06-03T17:36:39))
2023-09-02 22:14:05 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4699096083692475012, text=dolor varius sit Kafka pharetra sit, userId=4449948136035998110, textV2=null, createdAt=2023-06-03T18:21:20))
2023-09-02 22:14:06 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4024236420955855279, text=dignissim elit sit Kafka consectetur ornare, userId=1065480897252535282, textV2=null, createdAt=2023-06-03T18:54:30))
2023-09-02 22:14:06 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7947770233610268157, text=dolor sit pharetra Kafka tempus ornare, userId=8818592518696435361, textV2=null, createdAt=2023-06-03T21:50:13))
2023-09-02 22:14:07 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6583331444947973848, text=elit pharetra consectetur Kafka id turpis, userId=7700736925062074893, textV2=null, createdAt=2023-06-03T22:35:23))
2023-09-02 22:14:07 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7875846457974299856, text=elit id adipiscing Kafka tempus turpis, userId=1458767493459792625, textV2=null, createdAt=2023-06-03T22:35:33))
2023-09-02 22:14:08 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8830129525801786568, text=ultricies pharetra dignissim Kafka sit ornare, userId=8076491369298973879, textV2=null, createdAt=2023-05-28T21:58:31))
2023-09-02 22:14:08 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8458819990250478486, text=pharetra lectus dignissim Kafka elit adipiscing, userId=7967135110114772363, textV2=null, createdAt=2023-05-28T22:15:31))
2023-09-02 22:14:09 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6904311318860476784, text=mauris turpis dignissim Kafka dolor elit, userId=1159654836158149588, textV2=null, createdAt=2023-05-28T22:49:31))
2023-09-02 22:14:09 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1634450050356530723, text=sit tempus varius Kafka ipsum varius, userId=6824354996242498458, textV2=null, createdAt=2023-05-28T22:50:41))
2023-09-02 22:14:10 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5527831707289812409, text=ut varius sit Kafka elit dolor, userId=4655367837219725599, textV2=null, createdAt=2023-05-28T23:24:32))
2023-09-02 22:14:10 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6428322240608733064, text=consectetur tristique venenatis Kafka ultricies consectetur, userId=3984862591735476053, textV2=null, createdAt=2023-06-03T23:26:54))
2023-09-02 22:14:11 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5870903447134210661, text=dignissim dignissim dolor Kafka lectus tristique, userId=9120937118174286824, textV2=null, createdAt=2023-06-03T23:27:24))
2023-09-02 22:14:11 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5386032746071981405, text=ultricies tristique elit Kafka id in, userId=6708656136280978277, textV2=null, createdAt=2023-06-04T00:05:04))
2023-09-02 22:14:12 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3732313174759625520, text=tristique elit lectus Kafka adipiscing id, userId=6748713952144832649, textV2=null, createdAt=2023-06-04T00:09:04))
2023-09-02 22:14:12 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4185697038726750315, text=adipiscing turpis varius Kafka consectetur lectus, userId=5039849049047381435, textV2=null, createdAt=2023-06-04T00:53:12))
2023-09-02 22:14:13 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4380590533380190817, text=tristique ornare id Kafka tempus id, userId=7390332995959193699, textV2=null, createdAt=2023-06-03T15:59:28))
2023-09-02 22:14:13 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1811955673974703939, text=dolor venenatis pharetra Kafka dignissim dolor, userId=5574112673890527987, textV2=null, createdAt=2023-06-03T16:47:18))
2023-09-02 22:14:14 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6460346767269459383, text=ornare tempus venenatis Kafka turpis mauris, userId=2801225619303053518, textV2=null, createdAt=2023-06-03T16:52:29))
2023-09-02 22:14:14 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4157955814090305660, text=elit venenatis tempus Kafka adipiscing ultricies, userId=892694956132382161, textV2=null, createdAt=2023-06-03T17:18:49))
2023-09-02 22:14:14 [parallel-1] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 22:14:15 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5397426795152408340, text=ut venenatis adipiscing Kafka lectus mauris, userId=3275766138373541938, textV2=null, createdAt=2023-06-03T18:38:50))
2023-09-02 22:14:15 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3728593648398911393, text=ultricies sit id Kafka lectus ut, userId=5279420664993020465, textV2=null, createdAt=2023-06-03T18:50:40))
2023-09-02 22:14:16 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6634863634241653301, text=lectus tempus pharetra Kafka dolor dignissim, userId=3394949772686421015, textV2=null, createdAt=2023-06-03T19:13))
2023-09-02 22:14:16 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=61267884024938403, text=pharetra ipsum ut Kafka adipiscing ut, userId=3554513523180763710, textV2=null, createdAt=2023-06-03T21:10:12))
2023-09-02 22:14:17 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2241149547190642129, text=pharetra dolor ut Kafka venenatis adipiscing, userId=5293691292522771654, textV2=null, createdAt=2023-06-03T21:17:52))
2023-09-02 22:14:17 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5522353942497560395, text=ut mauris tristique Kafka mauris dignissim, userId=5801871912542994945, textV2=null, createdAt=2023-06-03T21:44:03))
2023-09-02 22:14:18 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4114300111172866566, text=turpis dolor ornare Kafka id tristique, userId=8883556385973208335, textV2=null, createdAt=2023-06-03T21:44:53))
2023-09-02 22:14:18 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6607104120989409013, text=ipsum tempus tempus Kafka varius turpis, userId=687175036226054378, textV2=null, createdAt=2023-09-01T02:14:40))
2023-09-02 22:14:19 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3036301685934619468, text=ut ornare tempus varius Kafka tristique mauris, userId=46662945273354219, textV2=null, createdAt=2023-06-03T23:01:43))
2023-09-02 22:14:19 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6413974492615664171, text=turpis adipiscing adipiscing pharetra Kafka lectus lectus, userId=1688141546404894840, textV2=null, createdAt=2023-06-03T23:33:04))
2023-09-02 22:14:20 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7184662160769149061, text=ut tempus tempus consectetur Kafka id venenatis, userId=2164479368022675788, textV2=null, createdAt=2023-06-03T21:12:12))
2023-09-02 22:14:20 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2677163691762907859, text=sit sit pharetra ornare Kafka consectetur ultricies, userId=4775162048326849466, textV2=null, createdAt=2023-06-03T21:14:52))
2023-09-02 22:14:21 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7709385884696544508, text=consectetur ornare varius ipsum Kafka consectetur ut, userId=2843150145573413608, textV2=null, createdAt=2023-06-03T21:22:02))
2023-09-02 22:14:21 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5592503814308115228, text=elit sit lectus consectetur Kafka dolor lectus, userId=7455723843829164098, textV2=null, createdAt=2023-06-03T21:28:42))
2023-09-02 22:14:22 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7469760363640584440, text=ipsum consectetur ultricies venenatis Kafka elit pharetra, userId=6842210826482104691, textV2=null, createdAt=2023-06-03T22:00:33))
2023-09-02 22:14:23 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2921358065948304862, text=ipsum adipiscing dignissim dignissim Kafka elit dignissim, userId=6061782497383936443, textV2=null, createdAt=2023-05-28T23:12:41))
2023-09-02 22:14:23 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4868619360660653700, text=varius dignissim dolor id Kafka ut varius, userId=3824534333900696950, textV2=null, createdAt=2023-05-28T23:43:32))
2023-09-02 22:14:24 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=758147311174686380, text=tempus tempus dolor sit Kafka ultricies ultricies, userId=8629656546487168185, textV2=null, createdAt=2023-05-28T23:46:12))
2023-09-02 22:14:24 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1843824091366704859, text=ultricies tristique ornare ut Kafka sit ultricies, userId=5638513254221210793, textV2=null, createdAt=2023-06-03T18:02:09))
2023-09-02 22:14:25 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=187814534572267691, text=dolor tempus dolor venenatis Kafka dignissim in, userId=5581029749136592447, textV2=null, createdAt=2023-06-03T18:06:39))
2023-09-02 22:14:25 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=338116641464158929, text=id adipiscing lectus ipsum Kafka lectus turpis, userId=7070455079363142452, textV2=null, createdAt=2023-06-03T18:10))
2023-09-02 22:14:26 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3112823634755542942, text=varius ipsum ultricies ipsum Kafka in venenatis, userId=2337059781749801576, textV2=null, createdAt=2023-06-04T00:10:14))
2023-09-02 22:14:26 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8027233407609427357, text=adipiscing consectetur tempus adipiscing Kafka venenatis ornare, userId=1424274192907567761, textV2=null, createdAt=2023-05-29T00:13:21))
2023-09-02 22:14:27 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2406233640707885178, text=ipsum id tristique sit Kafka ornare sit, userId=5091013540834751048, textV2=null, createdAt=2023-06-03T16:10:48))
2023-09-02 22:14:27 [parallel-1] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 22:14:27 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2752164850259607906, text=adipiscing dolor ut consectetur Kafka mauris pharetra, userId=3503227193373769695, textV2=null, createdAt=2023-06-03T16:43:48))
2023-09-02 22:14:28 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7521204420804062262, text=ornare varius elit id Kafka tristique dignissim, userId=201304415458339563, textV2=null, createdAt=2023-06-03T16:48:08))
2023-09-02 22:14:28 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2944245958267334791, text=dolor elit lectus tristique Kafka dolor pharetra, userId=5346057335529589397, textV2=null, createdAt=2023-05-28T21:47:40))
2023-09-02 22:14:29 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7088460146851308291, text=in tempus turpis pharetra Kafka dolor venenatis, userId=2566879215126933776, textV2=null, createdAt=2023-05-28T21:54))
2023-09-02 22:14:29 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6400428190581985352, text=adipiscing lectus pharetra dignissim Kafka varius ultricies, userId=1594283462968035841, textV2=null, createdAt=2023-05-28T22:08:01))
2023-09-02 22:14:30 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3295875711936667320, text=tempus consectetur consectetur ornare Kafka consectetur tristique, userId=5566703564321347987, textV2=null, createdAt=2023-05-28T22:36:11))
2023-09-02 22:14:30 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9192549501663001119, text=id ornare dolor ornare Kafka sit dolor, userId=8777919571148699058, textV2=null, createdAt=2023-06-03T16:55:49))
2023-09-02 22:14:31 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4153453430108533103, text=varius dignissim ornare sit Kafka elit turpis, userId=5532100048280790015, textV2=null, createdAt=2023-06-03T17:16:49))
2023-09-02 22:14:31 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4412299743472389163, text=ultricies ornare adipiscing tristique Kafka mauris lectus, userId=1654241272441169395, textV2=null, createdAt=2023-06-03T22:11:23))
2023-09-02 22:14:32 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1300299809512703170, text=ornare ultricies ultricies ipsum Kafka tristique dignissim, userId=6314331425186584583, textV2=null, createdAt=2023-06-03T23:41:24))
2023-09-02 22:14:32 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3776373802603550260, text=id elit tristique lectus Kafka adipiscing pharetra, userId=3753964741242116445, textV2=null, createdAt=2023-06-04T00:07:14))
2023-09-02 22:14:33 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3333240819074577622, text=mauris dignissim in pharetra Kafka ipsum in, userId=6534158809543975460, textV2=null, createdAt=2023-06-04T12:16:57))
2023-09-02 22:14:33 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2707794717890480366, text=tristique dignissim dolor tempus Kafka ut varius, userId=1198619779597999374, textV2=null, createdAt=2023-06-04T12:21:58))
2023-09-02 22:14:34 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4665740309577980967, text=consectetur dignissim in turpis Kafka venenatis id, userId=7660535244900949263, textV2=null, createdAt=2023-08-16T00:09:28))
2023-09-02 22:14:34 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5184902525784982119, text=ultricies ipsum consectetur ultricies Kafka id turpis, userId=1393394133224911499, textV2=null, createdAt=2023-08-16T00:22:48))
2023-09-02 22:14:35 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1568904922649675398, text=ut ut ipsum elit Kafka in varius, userId=6125095042486193442, textV2=null, createdAt=2023-08-16T00:23:28))
2023-09-02 22:14:35 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=215106836770897684, text=tristique dignissim tristique sit Kafka turpis turpis, userId=4767475515708920450, textV2=null, createdAt=2023-08-16T00:27:28))
2023-09-02 22:14:36 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2900816552118657012, text=mauris adipiscing ultricies venenatis Kafka lectus dolor, userId=2766089677653046059, textV2=null, createdAt=2023-08-16T00:29:58))
2023-09-02 22:14:36 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=826289120573802936, text=mauris id ultricies ultricies Kafka in elit, userId=8607278897392182880, textV2=null, createdAt=2023-08-16T00:33:18))
2023-09-02 22:14:37 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6525121697211724270, text=lectus pharetra elit ut Kafka in ultricies, userId=2151563118976030575, textV2=null, createdAt=2023-08-16T00:40:59))
2023-09-02 22:14:37 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4788286397060632046, text=adipiscing tempus adipiscing lectus Kafka consectetur tristique, userId=6045042322255923491, textV2=null, createdAt=2023-08-17T00:48:29))
2023-09-02 22:14:38 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4582653646809551106, text=pharetra ornare adipiscing dignissim Kafka lectus dignissim, userId=1340155566068985018, textV2=null, createdAt=2023-08-17T00:50:49))
2023-09-02 22:14:38 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4340588283115918666, text=ornare dolor consectetur pharetra Kafka id tempus, userId=2305143181256213510, textV2=null, createdAt=2023-08-17T00:57:39))
2023-09-02 22:14:39 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7448058916610144567, text=elit mauris tristique tempus Kafka ultricies dignissim, userId=1497854436904047918, textV2=null, createdAt=2023-08-17T01:27:09))
2023-09-02 22:14:39 [parallel-1] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 22:14:39 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6672940190603932413, text=mauris turpis in ultricies Kafka sit pharetra, userId=2424243212392380138, textV2=null, createdAt=2023-08-16T00:44:19))
2023-09-02 22:14:40 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1386004513894839830, text=ut adipiscing sit ut Kafka mauris dignissim, userId=6775487464536810667, textV2=null, createdAt=2023-05-28T22:08:11))
2023-09-02 22:14:40 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7148654763338245159, text=varius tristique varius dolor Kafka pharetra ipsum, userId=8053957034260124944, textV2=null, createdAt=2023-05-28T23:03:41))
2023-09-02 22:14:41 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5052565659328911925, text=varius tempus mauris pharetra Kafka consectetur ornare, userId=3525768360571785418, textV2=null, createdAt=2023-05-28T23:54:21))
2023-09-02 22:14:41 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7371684440201844168, text=ultricies adipiscing venenatis ornare Kafka ornare venenatis, userId=4430167488512876555, textV2=null, createdAt=2023-05-29T00:03:41))
2023-09-02 22:14:42 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5043347830117160547, text=lectus dolor ipsum consectetur Kafka lectus dignissim, userId=3714009271288090063, textV2=null, createdAt=2023-06-03T16:06:48))
2023-09-02 22:14:42 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=853167161501375659, text=ipsum pharetra venenatis ornare Kafka mauris consectetur, userId=428070118469405286, textV2=null, createdAt=2023-06-03T16:24:18))
2023-09-02 22:14:43 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3845740043959524591, text=id pharetra lectus ornare Kafka adipiscing mauris, userId=6943785518624568210, textV2=null, createdAt=2023-06-03T17:13:19))
2023-09-02 22:14:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2406348833170075987, text=dignissim ut adipiscing mauris Kafka id lectus, userId=562202249081293075, textV2=null, createdAt=2023-06-03T17:27:19))
2023-09-02 22:14:44 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=267338159096854956, text=id venenatis pharetra id Kafka sit tempus, userId=3959976133110735602, textV2=null, createdAt=2023-06-03T18:24:30))
2023-09-02 22:14:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5311009609051418894, text=ornare dignissim varius tempus Kafka consectetur turpis, userId=2088580105075363931, textV2=null, createdAt=2023-06-03T18:49:10))
2023-09-02 22:14:45 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2867606924933511868, text=tristique ipsum id mauris Kafka lectus venenatis, userId=4004027827683478316, textV2=null, createdAt=2023-06-03T21:21:52))
2023-09-02 22:14:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3721441623636837187, text=varius turpis dolor adipiscing Kafka mauris consectetur, userId=2891243864871464108, textV2=null, createdAt=2023-06-03T21:34:32))
2023-09-02 22:14:46 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1744062903282972141, text=varius dignissim elit adipiscing Kafka mauris turpis, userId=2141179062492617362, textV2=null, createdAt=2023-06-03T21:48:13))
2023-09-02 22:14:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5478409126068534199, text=ut ipsum adipiscing mauris Kafka id elit, userId=3116613904491303988, textV2=null, createdAt=2023-05-28T21:34:30))
2023-09-02 22:14:47 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2593671047459458745, text=dignissim in consectetur ipsum Kafka varius venenatis, userId=7739854117139775308, textV2=null, createdAt=2023-05-28T21:40:20))
2023-09-02 22:14:47 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8743365335049022952, text=turpis turpis adipiscing consectetur Kafka consectetur tristique, userId=1346292785887395568, textV2=null, createdAt=2023-05-28T22:05:51))
2023-09-02 22:14:48 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4074793914189649335, text=consectetur pharetra lectus ipsum Kafka tempus in, userId=913854628164995098, textV2=null, createdAt=2023-05-28T22:25:21))
2023-09-02 22:14:48 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4661537380204063837, text=adipiscing in ut tristique Kafka varius pharetra, userId=3774675087653459750, textV2=null, createdAt=2023-05-28T22:44:11))
2023-09-02 22:14:49 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7977776636073081758, text=venenatis dolor ultricies ultricies Kafka lectus adipiscing, userId=5333946489337946791, textV2=null, createdAt=2023-05-28T22:47:41))
2023-09-02 22:14:49 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4120882853609252907, text=ut turpis ut adipiscing Kafka lectus pharetra, userId=9117948677006485349, textV2=null, createdAt=2023-06-03T23:05:44))
2023-09-02 22:14:50 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4717175674190070378, text=ultricies ipsum mauris consectetur Kafka ornare dolor, userId=5437315803790244043, textV2=null, createdAt=2023-06-03T23:32:04))
2023-09-02 22:14:50 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2179415946955671351, text=pharetra consectetur ut adipiscing Kafka consectetur lectus, userId=8146087932673071063, textV2=null, createdAt=2023-06-03T23:34:04))
2023-09-02 22:14:51 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6904331577582894374, text=dignissim ornare ut varius Kafka dolor ut, userId=6268136364235020485, textV2=null, createdAt=2023-06-03T23:50:34))
2023-09-02 22:14:51 [parallel-1] INFO  reactor.Flux.Map.1 - request(24)
2023-09-02 22:14:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8510083465075676844, text=pharetra ipsum in pharetra Kafka consectetur id, userId=7367080137718692205, textV2=null, createdAt=2023-06-04T00:30:01))
2023-09-02 22:14:52 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1088181036536575938, text=consectetur ipsum pharetra pharetra Kafka varius adipiscing, userId=1218976239573066031, textV2=null, createdAt=2023-05-28T23:43:02))
2023-09-02 22:14:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2836320951629218953, text=dignissim ornare lectus adipiscing Kafka varius varius, userId=6023428192053128613, textV2=null, createdAt=2023-05-28T23:51:41))
2023-09-02 22:14:53 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4552245275785473457, text=varius elit consectetur ut Kafka adipiscing ultricies, userId=7527132985331523498, textV2=null, createdAt=2023-06-03T15:51:27))
2023-09-02 22:14:53 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2072233405843086732, text=venenatis ut tristique tristique Kafka sit elit, userId=5532997545295665599, textV2=null, createdAt=2023-06-03T16:09:28))
2023-09-02 22:14:54 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=541418376225932270, text=tempus ut ut ut Kafka tristique tristique, userId=6559024227108110437, textV2=null, createdAt=2023-06-03T16:25:28))
2023-09-02 22:14:54 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8636330091494780085, text=ornare turpis turpis consectetur Kafka venenatis lectus, userId=6788971590973072026, textV2=null, createdAt=2023-06-03T16:36:08))
2023-09-02 22:14:55 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=669211539565928430, text=tempus ornare tempus turpis Kafka ultricies varius, userId=8322131552260438160, textV2=null, createdAt=2023-06-03T16:48:28))
2023-09-02 22:14:55 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5071028538999498878, text=sit ut dignissim mauris Kafka in ipsum, userId=6453013014563214578, textV2=null, createdAt=2023-06-03T17:08:19))
2023-09-02 22:14:56 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2169327897319536125, text=dolor tristique sit lectus Kafka adipiscing mauris, userId=3963244458642957566, textV2=null, createdAt=2023-06-03T18:35:30))
2023-09-02 22:14:56 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1988333018884914903, text=pharetra mauris consectetur ipsum Kafka ut tempus, userId=3388614584494863146, textV2=null, createdAt=2023-06-03T18:40:40))
2023-09-02 22:14:57 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7506161232323921832, text=sit in varius mauris Kafka dolor in, userId=4854958249793896185, textV2=null, createdAt=2023-06-03T21:12:42))
2023-09-02 22:14:57 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3310292686116631671, text=elit ornare dolor dolor Kafka consectetur turpis, userId=1776593121145744100, textV2=null, createdAt=2023-06-03T21:23:42))
2023-09-02 22:14:58 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2459333586181245088, text=ipsum id tristique consectetur Kafka in dignissim, userId=262457390084957473, textV2=null, createdAt=2023-06-03T22:00:23))
2023-09-02 22:14:58 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5427127605150984634, text=id consectetur adipiscing venenatis Kafka turpis turpis, userId=1870102698050716886, textV2=null, createdAt=2023-08-17T01:41:39))
2023-09-02 22:14:59 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8242645277292982585, text=pharetra tristique in lectus Kafka tristique lectus, userId=5519105665365427195, textV2=null, createdAt=2023-08-17T01:43:49))
2023-09-02 22:14:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6900893092473435099, text=varius in venenatis tristique Kafka adipiscing sit, userId=2697450642734828830, textV2=null, createdAt=2023-08-17T01:43:59))
2023-09-02 22:15:00 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5578685157182096901, text=pharetra ipsum mauris in Kafka elit dignissim, userId=1494477124812963668, textV2=null, createdAt=2023-09-01T02:14))
2023-09-02 22:15:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1322203481641113582, text=elit in tempus lectus Kafka elit elit sit, userId=2346779195460162225, textV2=null, createdAt=2023-06-03T22:17:03))
2023-09-02 22:15:01 [reactor-http-epoll-4] INFO  reactor.Flux.Map.1 - cancel()
2023-09-02 23:20:33 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 24398 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 23:20:33 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 23:20:33 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 23:20:33 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 23:20:33 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 23:20:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 23:20:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 169 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 23:20:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 23:20:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 23:20:35 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 23:20:36 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
2023-09-02 23:20:38 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 23:20:38 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$lookupActiveHost$3(SingleNodeHostProvider.java:101)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:110)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:56)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
	at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.fulfillConnectPromise(AbstractEpollChannel.java:674)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.finishConnect(AbstractEpollChannel.java:693)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady(AbstractEpollChannel.java:567)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:489)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:397)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:829)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:99)
		at reactor.core.publisher.Mono.block(Mono.java:1742)
		at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.createIndexAndMappingIfNeeded(SimpleReactiveElasticsearchRepository.java:68)
		at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:60)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
		at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
		at java.base/java.util.Optional.map(Optional.java:265)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
		at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
		at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
		at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
		at org.springframework.data.util.Lazy.get(Lazy.java:115)
		at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
		at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
		at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
		at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
		at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
		at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
		at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
		at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
		at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
		at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
		at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
		at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
		at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
		at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
2023-09-02 23:20:56 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2023-09-02 23:20:56 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Starting ReactiveElasticQueryServiceApplication using Java 11.0.16 on localhost.localdomain with PID 24501 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-09-02 23:20:56 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following 1 profile is active: "reactive_elastic_query"
2023-09-02 23:20:56 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-09-02 23:20:56 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-reactive_elastic_query, profiles=[reactive_elastic_query], label=null, version=33b35b6fe2ec54b87d7521c62c67053db1128169, state=null
2023-09-02 23:20:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2023-09-02 23:20:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 161 ms. Found 0 Elasticsearch repository interfaces.
2023-09-02 23:20:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2023-09-02 23:20:57 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 1 Reactive Elasticsearch repository interfaces.
2023-09-02 23:20:58 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=167417d5-289a-33b9-8118-17c6bea775d2
2023-09-02 23:20:59 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
2023-09-02 23:21:01 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-09-02 23:21:01 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elasticDocumentController' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/api/ElasticDocumentController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterElasticQueryService' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterElasticQueryService.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterReactiveElasticQueryClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/reactive-elastic-query-service/target/classes/com/microservices/demo/reactive/elastic/query/service/business/impl/TwitterReactiveElasticQueryClient.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'elasticQueryRepository' defined in com.microservices.demo.reactive.elastic.query.service.repository.ElasticQueryRepository defined in @EnableReactiveElasticsearchRepositories declared on ReactiveElasticsearchRepositoriesRegistrar.EnableElasticsearchRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository]: Constructor threw exception; nested exception is org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
	at java.base/java.util.Optional.map(Optional.java:265)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$lookupActiveHost$3(SingleNodeHostProvider.java:101)
	at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:110)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onNext(FluxMap.java:224)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2196)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:172)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2065)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:544)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:258)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:265)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:56)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.FluxPeek$PeekSubscriber.onError(FluxPeek.java:222)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onError(FluxContextWrite.java:121)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251)
	at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)
	at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:537)
	at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:343)
	at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100)
	at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:311)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onError(DefaultPooledConnectionProvider.java:160)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:475)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$9(SimpleDequePool.java:431)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:186)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201)
	at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.onError(DefaultPooledConnectionProvider.java:558)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondError(MonoFlatMap.java:192)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onError(MonoFlatMap.java:259)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:106)
	at reactor.core.publisher.Operators.error(Operators.java:198)
	at reactor.core.publisher.MonoError.subscribe(MonoError.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4490)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.tryFailure(TransportConnector.java:580)
	at reactor.netty.transport.TransportConnector$MonoChannelPromise.setFailure(TransportConnector.java:534)
	at reactor.netty.transport.TransportConnector.lambda$doConnect$7(TransportConnector.java:265)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.fulfillConnectPromise(AbstractEpollChannel.java:674)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.finishConnect(AbstractEpollChannel.java:693)
	at io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady(AbstractEpollChannel.java:567)
	at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:489)
	at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:397)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:829)
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:99)
		at reactor.core.publisher.Mono.block(Mono.java:1742)
		at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.createIndexAndMappingIfNeeded(SimpleReactiveElasticsearchRepository.java:68)
		at org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository.<init>(SimpleReactiveElasticsearchRepository.java:60)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
		at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.lambda$instantiateClass$5(RepositoryFactorySupport.java:579)
		at java.base/java.util.Optional.map(Optional.java:265)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.instantiateClass(RepositoryFactorySupport.java:579)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepositoryViaReflection(RepositoryFactorySupport.java:544)
		at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactory.getTargetRepository(ReactiveElasticsearchRepositoryFactory.java:89)
		at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
		at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
		at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
		at org.springframework.data.util.Lazy.get(Lazy.java:115)
		at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
		at org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.afterPropertiesSet(ReactiveElasticsearchRepositoryFactoryBean.java:102)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
		at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
		at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
		at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
		at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
		at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
		at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
		at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
		at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
		at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
		at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
		at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
		at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
		at com.microservices.demo.reactive.elastic.query.service.ReactiveElasticQueryServiceApplication.main(ReactiveElasticQueryServiceApplication.java:12)
