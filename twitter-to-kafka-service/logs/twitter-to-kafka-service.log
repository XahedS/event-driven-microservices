2023-05-14 14:50:19 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 20301 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 14:50:19 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 14:50:19 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 14:50:19 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-twitter_to_kafa, profiles=[twitter_to_kafka], label=null, version=9d12078dfea1db6539bcb13e15ae066167733220, state=null
2023-05-14 14:50:20 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b85f663c-99fd-3c7d-8473-7eeec3db94e8
2023-05-14 14:50:21 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-14 14:50:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 14:50:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 14:50:21 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684057821799
2023-05-14 14:50:22 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2023-05-14 14:50:23 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 15.945 seconds (JVM running for 17.081)
2023-05-14 14:50:23 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - App is started
2023-05-14 14:50:23 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations !
2023-05-14 14:50:23 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-05-14 14:50:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius dignissim pharetra sit turpis ipsum ut ornare Java ipsum elit tempus ipsum dolor dignissim sending to kafka topic twitter-topic
2023-05-14 14:50:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8814179753838607102, "id": 5957523839394699574, "text": "varius dignissim pharetra sit turpis ipsum ut ornare Java ipsum elit tempus ipsum dolor dignissim", "createdAt": 1684057823000}' to topic='twitter-topic'
2023-05-14 14:50:23 [pool-4-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-05-14 14:50:23 [pool-4-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-05-14 14:50:23 [pool-4-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-14 14:50:23 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 14:50:23 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 14:50:23 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684057823368
2023-05-14 14:50:23 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: YgSOnTn1SGGysXelibqEnQ
2023-05-14 14:50:23 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 22000 with epoch 0
2023-05-14 14:50:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris ut ipsum Java ut venenatis sending to kafka topic twitter-topic
2023-05-14 14:50:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4813725311963916250, "id": 5012727173236252970, "text": "mauris ut ipsum Java ut venenatis", "createdAt": 1684057833000}' to topic='twitter-topic'
2023-05-14 14:50:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis consectetur ultricies tempus Elasticsearch tempus tempus sending to kafka topic twitter-topic
2023-05-14 14:50:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 601373869045356223, "id": 3647908743625923427, "text": "venenatis consectetur ultricies tempus Elasticsearch tempus tempus", "createdAt": 1684057843000}' to topic='twitter-topic'
2023-05-14 14:50:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique tempus ornare tempus mauris lectus Microservices mauris adipiscing dolor sit varius sending to kafka topic twitter-topic
2023-05-14 14:50:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2313972001643177458, "id": 8960412196487240887, "text": "tristique tempus ornare tempus mauris lectus Microservices mauris adipiscing dolor sit varius", "createdAt": 1684057853000}' to topic='twitter-topic'
2023-05-14 14:51:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim ut venenatis varius dolor tristique Elasticsearch dolor adipiscing dolor adipiscing varius sending to kafka topic twitter-topic
2023-05-14 14:51:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4804265216835927767, "id": 4181146130096935875, "text": "dignissim ut venenatis varius dolor tristique Elasticsearch dolor adipiscing dolor adipiscing varius", "createdAt": 1684057863000}' to topic='twitter-topic'
2023-05-14 14:51:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus dignissim pharetra adipiscing Kafka id tempus sending to kafka topic twitter-topic
2023-05-14 14:51:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7074624076580892368, "id": 9010236696627600137, "text": "lectus dignissim pharetra adipiscing Kafka id tempus", "createdAt": 1684057873000}' to topic='twitter-topic'
2023-05-14 14:51:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra venenatis lectus tempus dignissim dolor tempus pharetra Elasticsearch mauris consectetur ipsum turpis mauris varius turpis sending to kafka topic twitter-topic
2023-05-14 14:51:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3984041871252666722, "id": 9130183628543593512, "text": "pharetra venenatis lectus tempus dignissim dolor tempus pharetra Elasticsearch mauris consectetur ipsum turpis mauris varius turpis", "createdAt": 1684057883000}' to topic='twitter-topic'
2023-05-14 14:51:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor ornare pharetra pharetra tempus sit Spring tristique venenatis ornare tristique id sending to kafka topic twitter-topic
2023-05-14 14:51:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5347566456636673915, "id": 7033385281530487721, "text": "dolor ornare pharetra pharetra tempus sit Spring tristique venenatis ornare tristique id", "createdAt": 1684057893000}' to topic='twitter-topic'
2023-05-14 14:51:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis in id ornare varius dolor Spring ut adipiscing mauris ut ornare sending to kafka topic twitter-topic
2023-05-14 14:51:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 793451019619198722, "id": 7642694702216088034, "text": "venenatis in id ornare varius dolor Spring ut adipiscing mauris ut ornare", "createdAt": 1684057903000}' to topic='twitter-topic'
2023-05-14 14:51:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit sit ultricies dolor Spring lectus varius sending to kafka topic twitter-topic
2023-05-14 14:51:54 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4852950162665403799, "id": 6029534293176272242, "text": "sit sit ultricies dolor Spring lectus varius", "createdAt": 1684057913000}' to topic='twitter-topic'
2023-05-14 14:52:04 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut ut mauris dolor pharetra consectetur Kafka dolor ut turpis adipiscing sending to kafka topic twitter-topic
2023-05-14 14:52:04 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3092817161012330750, "id": 4318090554137832665, "text": "ut ut mauris dolor pharetra consectetur Kafka dolor ut turpis adipiscing", "createdAt": 1684057924000}' to topic='twitter-topic'
2023-05-14 14:52:14 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris elit tempus sit adipiscing ut Spring turpis in mauris ultricies sending to kafka topic twitter-topic
2023-05-14 14:52:14 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1826410426127150346, "id": 1709492862397771582, "text": "mauris elit tempus sit adipiscing ut Spring turpis in mauris ultricies", "createdAt": 1684057934000}' to topic='twitter-topic'
2023-05-14 14:52:24 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis venenatis dignissim ipsum varius id adipiscing ornare Elasticsearch ipsum sit dignissim pharetra ipsum elit sending to kafka topic twitter-topic
2023-05-14 14:52:24 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7949085738704959587, "id": 8113046916182487939, "text": "turpis venenatis dignissim ipsum varius id adipiscing ornare Elasticsearch ipsum sit dignissim pharetra ipsum elit", "createdAt": 1684057944000}' to topic='twitter-topic'
2023-05-14 14:52:34 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut tristique turpis elit lectus tristique Kafka adipiscing sit ultricies consectetur ultricies sending to kafka topic twitter-topic
2023-05-14 14:52:34 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8795112631862710132, "id": 7299958789958471699, "text": "ut tristique turpis elit lectus tristique Kafka adipiscing sit ultricies consectetur ultricies", "createdAt": 1684057954000}' to topic='twitter-topic'
2023-05-14 14:52:44 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim id id dolor dolor ut pharetra dignissim Spring tristique ut in venenatis ornare elit sending to kafka topic twitter-topic
2023-05-14 14:52:44 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 458598673173550580, "id": 767186379570160446, "text": "dignissim id id dolor dolor ut pharetra dignissim Spring tristique ut in venenatis ornare elit", "createdAt": 1684057964000}' to topic='twitter-topic'
2023-05-14 14:52:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2023-05-14 14:52:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 14:52:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 14:52:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 14:52:48 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing Kafka Producer!
2023-05-14 14:52:48 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-14 14:52:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 14:52:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 14:52:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 14:52:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2023-05-14 15:01:46 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 21215 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 15:01:46 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 15:01:46 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 15:01:46 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-twitter_to_kafa, profiles=[twitter_to_kafka], label=null, version=9d12078dfea1db6539bcb13e15ae066167733220, state=null
2023-05-14 15:01:47 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b85f663c-99fd-3c7d-8473-7eeec3db94e8
2023-05-14 15:01:48 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-14 15:01:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 15:01:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 15:01:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684058508629
2023-05-14 15:01:50 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-05-14 15:01:50 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2023-05-14 15:01:51 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-05-14 15:01:52 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-05-14 15:01:52 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 35.551 seconds (JVM running for 36.688)
2023-05-14 15:01:52 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - App is started
2023-05-14 15:01:52 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations !
2023-05-14 15:01:52 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-05-14 15:01:52 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra ornare in ipsum ornare id dignissim ultricies Java adipiscing id ornare dolor tristique dolor in sending to kafka topic twitter-topic
2023-05-14 15:01:52 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 185507785663446550, "id": 1310327592957639724, "text": "pharetra ornare in ipsum ornare id dignissim ultricies Java adipiscing id ornare dolor tristique dolor in", "createdAt": 1684058512000}' to topic='twitter-topic'
2023-05-14 15:01:52 [pool-4-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-05-14 15:01:53 [pool-4-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-05-14 15:01:53 [pool-4-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-14 15:01:53 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 15:01:53 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 15:01:53 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684058513064
2023-05-14 15:01:53 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: YgSOnTn1SGGysXelibqEnQ
2023-05-14 15:01:53 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 21000 with epoch 0
2023-05-14 15:02:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing ultricies varius ipsum Spring ultricies consectetur id sending to kafka topic twitter-topic
2023-05-14 15:02:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4195305476743163161, "id": 2889123023632324914, "text": "adipiscing ultricies varius ipsum Spring ultricies consectetur id", "createdAt": 1684058523000}' to topic='twitter-topic'
2023-05-14 15:02:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor turpis mauris tristique tempus pharetra Spring tempus consectetur adipiscing ornare lectus sending to kafka topic twitter-topic
2023-05-14 15:02:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2499531620435725429, "id": 1703858310832483318, "text": "dolor turpis mauris tristique tempus pharetra Spring tempus consectetur adipiscing ornare lectus", "createdAt": 1684058533000}' to topic='twitter-topic'
2023-05-14 15:02:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit sit venenatis lectus mauris ultricies consectetur tempus Kafka lectus in ornare consectetur tempus ut turpis sending to kafka topic twitter-topic
2023-05-14 15:02:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1069519675480714741, "id": 319443558759329914, "text": "sit sit venenatis lectus mauris ultricies consectetur tempus Kafka lectus in ornare consectetur tempus ut turpis", "createdAt": 1684058543000}' to topic='twitter-topic'
2023-05-14 15:02:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum in tristique tempus pharetra tempus Java id tristique consectetur elit sending to kafka topic twitter-topic
2023-05-14 15:02:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3375625226761476184, "id": 8549809602894044609, "text": "ipsum in tristique tempus pharetra tempus Java id tristique consectetur elit", "createdAt": 1684058553000}' to topic='twitter-topic'
2023-05-14 15:02:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare pharetra ut id ornare sit varius tempus Elasticsearch pharetra venenatis mauris elit lectus dolor sending to kafka topic twitter-topic
2023-05-14 15:02:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2128937825278123466, "id": 722550637399319542, "text": "ornare pharetra ut id ornare sit varius tempus Elasticsearch pharetra venenatis mauris elit lectus dolor", "createdAt": 1684058563000}' to topic='twitter-topic'
2023-05-14 15:02:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique varius pharetra ut dignissim ipsum dolor adipiscing Kafka sit in lectus dolor in adipiscing ultricies sending to kafka topic twitter-topic
2023-05-14 15:02:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1608834000513009059, "id": 3709071220413003930, "text": "tristique varius pharetra ut dignissim ipsum dolor adipiscing Kafka sit in lectus dolor in adipiscing ultricies", "createdAt": 1684058573000}' to topic='twitter-topic'
2023-05-14 15:03:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis dolor ipsum sit Kafka ultricies elit turpis sending to kafka topic twitter-topic
2023-05-14 15:03:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4217245517614353912, "id": 9055365715275245108, "text": "venenatis dolor ipsum sit Kafka ultricies elit turpis", "createdAt": 1684058583000}' to topic='twitter-topic'
2023-05-14 15:03:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus dolor sit id pharetra Elasticsearch dignissim tempus varius pharetra sending to kafka topic twitter-topic
2023-05-14 15:03:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1615919428807757021, "id": 373967579937562771, "text": "tempus dolor sit id pharetra Elasticsearch dignissim tempus varius pharetra", "createdAt": 1684058593000}' to topic='twitter-topic'
2023-05-14 15:03:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut sit id sit ornare ultricies pharetra in Kafka lectus pharetra ultricies tempus consectetur dolor sending to kafka topic twitter-topic
2023-05-14 15:03:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1163986612139478432, "id": 4668922686442386629, "text": "ut sit id sit ornare ultricies pharetra in Kafka lectus pharetra ultricies tempus consectetur dolor", "createdAt": 1684058603000}' to topic='twitter-topic'
2023-05-14 15:03:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies mauris turpis varius sit adipiscing ornare tempus Microservices adipiscing ut ut sit consectetur sit sending to kafka topic twitter-topic
2023-05-14 15:03:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7891344451010923686, "id": 5040933668318403307, "text": "ultricies mauris turpis varius sit adipiscing ornare tempus Microservices adipiscing ut ut sit consectetur sit", "createdAt": 1684058613000}' to topic='twitter-topic'
2023-05-14 15:03:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum ultricies tempus varius ipsum Kafka adipiscing ultricies consectetur sending to kafka topic twitter-topic
2023-05-14 15:03:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9018657333311797954, "id": 7073565899396035919, "text": "ipsum ultricies tempus varius ipsum Kafka adipiscing ultricies consectetur", "createdAt": 1684058623000}' to topic='twitter-topic'
2023-05-14 15:03:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor elit consectetur venenatis elit elit Spring tempus ultricies adipiscing sit sending to kafka topic twitter-topic
2023-05-14 15:03:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7775353002512841969, "id": 4064063450118949480, "text": "dolor elit consectetur venenatis elit elit Spring tempus ultricies adipiscing sit", "createdAt": 1684058633000}' to topic='twitter-topic'
2023-05-14 15:04:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare tempus dolor dignissim lectus in id pharetra Java tristique pharetra dolor sit lectus pharetra consectetur sending to kafka topic twitter-topic
2023-05-14 15:04:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 747343301231457784, "id": 158295320016780742, "text": "ornare tempus dolor dignissim lectus in id pharetra Java tristique pharetra dolor sit lectus pharetra consectetur", "createdAt": 1684058643000}' to topic='twitter-topic'
2023-05-14 15:04:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut consectetur turpis tempus elit ornare in in Elasticsearch elit mauris ut pharetra ultricies ipsum ut sending to kafka topic twitter-topic
2023-05-14 15:04:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 232910043412465650, "id": 5860269307484356830, "text": "ut consectetur turpis tempus elit ornare in in Elasticsearch elit mauris ut pharetra ultricies ipsum ut", "createdAt": 1684058653000}' to topic='twitter-topic'
2023-05-14 15:04:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris varius varius ut Java adipiscing dignissim sending to kafka topic twitter-topic
2023-05-14 15:04:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5807190329734708760, "id": 3264714784141642422, "text": "mauris varius varius ut Java adipiscing dignissim", "createdAt": 1684058663000}' to topic='twitter-topic'
2023-05-14 15:04:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra ipsum elit tristique Elasticsearch tempus pharetra venenatis sending to kafka topic twitter-topic
2023-05-14 15:04:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1905871170060522676, "id": 1339806627782767646, "text": "pharetra ipsum elit tristique Elasticsearch tempus pharetra venenatis", "createdAt": 1684058673000}' to topic='twitter-topic'
2023-05-14 15:04:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut dignissim elit adipiscing venenatis dolor Elasticsearch tempus mauris consectetur dolor sending to kafka topic twitter-topic
2023-05-14 15:04:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1838037836398424207, "id": 7586338701279683951, "text": "ut dignissim elit adipiscing venenatis dolor Elasticsearch tempus mauris consectetur dolor", "createdAt": 1684058683000}' to topic='twitter-topic'
2023-05-14 15:04:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur dolor pharetra in mauris Java varius tristique tristique sending to kafka topic twitter-topic
2023-05-14 15:04:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2359955770840350691, "id": 5534405359174008873, "text": "consectetur dolor pharetra in mauris Java varius tristique tristique", "createdAt": 1684058693000}' to topic='twitter-topic'
2023-05-14 15:05:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit ornare varius ornare Elasticsearch ultricies elit sending to kafka topic twitter-topic
2023-05-14 15:05:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3944625544954439094, "id": 7933964496320132111, "text": "sit ornare varius ornare Elasticsearch ultricies elit", "createdAt": 1684058703000}' to topic='twitter-topic'
2023-05-14 15:05:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2023-05-14 15:05:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 15:05:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 15:05:11 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 15:05:11 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing Kafka Producer!
2023-05-14 15:05:11 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-14 15:05:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 15:05:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 15:05:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 15:05:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2023-05-14 15:05:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique sit ultricies lectus ornare ut in sit Kafka ipsum dignissim lectus consectetur dolor pharetra ut sending to kafka topic twitter-topic
2023-05-14 15:05:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6473695351919507699, "id": 5254063602372310973, "text": "tristique sit ultricies lectus ornare ut in sit Kafka ipsum dignissim lectus consectetur dolor pharetra ut", "createdAt": 1684058713000}' to topic='twitter-topic'
2023-05-14 15:05:13 [pool-4-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-2
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-05-14 15:05:13 [pool-4-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-05-14 15:05:13 [pool-4-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-2] Instantiated an idempotent producer.
2023-05-14 15:05:13 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 15:05:13 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 15:05:13 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684058713429
2023-05-14 15:05:13 [kafka-producer-network-thread | producer-2] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-2] Cluster ID: YgSOnTn1SGGysXelibqEnQ
2023-05-14 15:05:13 [kafka-producer-network-thread | producer-2] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-2] ProducerId set to 22001 with epoch 0
2023-05-14 15:07:42 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 21952 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 15:07:42 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 15:07:42 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 15:07:42 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-twitter_to_kafa, profiles=[twitter_to_kafka], label=null, version=9d12078dfea1db6539bcb13e15ae066167733220, state=null
2023-05-14 15:07:43 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b85f663c-99fd-3c7d-8473-7eeec3db94e8
2023-05-14 15:07:43 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-14 15:07:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 15:07:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 15:07:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684058863925
2023-05-14 15:07:45 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2023-05-14 15:07:45 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 8.624 seconds (JVM running for 9.768)
2023-05-14 15:07:45 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - App is started
2023-05-14 15:07:45 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations !
2023-05-14 15:07:45 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-05-14 15:07:45 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris in ornare ipsum mauris Kafka dignissim adipiscing turpis sending to kafka topic twitter-topic
2023-05-14 15:07:45 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8415724074357372355, "id": 8775329639444021418, "text": "mauris in ornare ipsum mauris Kafka dignissim adipiscing turpis", "createdAt": 1684058865000}' to topic='twitter-topic'
2023-05-14 15:07:45 [pool-4-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-05-14 15:07:45 [pool-4-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-05-14 15:07:45 [pool-4-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-14 15:07:45 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 15:07:45 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 15:07:45 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684058865374
2023-05-14 15:07:45 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: YgSOnTn1SGGysXelibqEnQ
2023-05-14 15:07:45 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 20000 with epoch 0
2023-05-14 15:07:55 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur tempus mauris venenatis Elasticsearch dolor ut sending to kafka topic twitter-topic
2023-05-14 15:07:55 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 847316183159458580, "id": 5036863183479842867, "text": "consectetur tempus mauris venenatis Elasticsearch dolor ut", "createdAt": 1684058875000}' to topic='twitter-topic'
2023-05-14 15:08:05 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut dignissim consectetur pharetra dignissim id turpis venenatis Kafka varius consectetur lectus varius id ut ut sending to kafka topic twitter-topic
2023-05-14 15:08:05 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6370169137592518270, "id": 1624703946947881370, "text": "ut dignissim consectetur pharetra dignissim id turpis venenatis Kafka varius consectetur lectus varius id ut ut", "createdAt": 1684058885000}' to topic='twitter-topic'
2023-05-14 15:08:15 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut consectetur consectetur turpis mauris ultricies Kafka adipiscing ipsum tristique ornare ultricies sending to kafka topic twitter-topic
2023-05-14 15:08:15 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1015138258896327074, "id": 7901426758795525954, "text": "ut consectetur consectetur turpis mauris ultricies Kafka adipiscing ipsum tristique ornare ultricies", "createdAt": 1684058895000}' to topic='twitter-topic'
2023-05-14 15:08:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2023-05-14 15:08:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 15:08:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 15:08:22 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 15:08:22 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing Kafka Producer!
2023-05-14 15:08:22 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-14 15:08:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 15:08:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 15:08:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 15:08:22 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2023-05-14 15:09:28 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 22321 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 15:09:28 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 15:09:28 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 15:09:28 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-twitter_to_kafa, profiles=[twitter_to_kafka], label=null, version=9d12078dfea1db6539bcb13e15ae066167733220, state=null
2023-05-14 15:09:30 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b85f663c-99fd-3c7d-8473-7eeec3db94e8
2023-05-14 15:09:31 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-14 15:09:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 15:09:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 15:09:31 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684058971539
2023-05-14 15:09:33 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-05-14 15:09:33 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2023-05-14 15:09:34 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-05-14 15:09:35 [main] INFO  o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2023-05-14 15:09:35 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 12.253 seconds (JVM running for 13.363)
2023-05-14 15:09:35 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - App is started
2023-05-14 15:09:35 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations !
2023-05-14 15:09:35 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-05-14 15:09:35 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id ultricies ut Kafka turpis ornare sending to kafka topic twitter-topic
2023-05-14 15:09:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6854895182278898794, "id": 1471384100462164857, "text": "id ultricies ut Kafka turpis ornare", "createdAt": 1684058975000}' to topic='twitter-topic'
2023-05-14 15:09:36 [pool-4-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-05-14 15:09:36 [pool-4-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-05-14 15:09:36 [pool-4-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-14 15:09:36 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 15:09:36 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 15:09:36 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684058976192
2023-05-14 15:09:36 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: YgSOnTn1SGGysXelibqEnQ
2023-05-14 15:09:36 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 21001 with epoch 0
2023-05-14 15:09:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra tempus lectus Spring in lectus sending to kafka topic twitter-topic
2023-05-14 15:09:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5266371509844479387, "id": 4343343725681626972, "text": "pharetra tempus lectus Spring in lectus", "createdAt": 1684058986000}' to topic='twitter-topic'
2023-05-14 15:09:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis ornare adipiscing id tempus ipsum Java tristique mauris ultricies ipsum sending to kafka topic twitter-topic
2023-05-14 15:09:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 585544239261836040, "id": 7362521290707341419, "text": "turpis ornare adipiscing id tempus ipsum Java tristique mauris ultricies ipsum", "createdAt": 1684058996000}' to topic='twitter-topic'
2023-05-14 15:10:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique lectus pharetra venenatis turpis mauris turpis consectetur Java adipiscing tristique elit mauris consectetur ultricies sending to kafka topic twitter-topic
2023-05-14 15:10:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3622858995124353234, "id": 3553672072473141916, "text": "tristique lectus pharetra venenatis turpis mauris turpis consectetur Java adipiscing tristique elit mauris consectetur ultricies", "createdAt": 1684059006000}' to topic='twitter-topic'
2023-05-14 15:10:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus elit ultricies Kafka ut turpis sending to kafka topic twitter-topic
2023-05-14 15:10:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1741691654357685510, "id": 4116856148416056460, "text": "lectus elit ultricies Kafka ut turpis", "createdAt": 1684059016000}' to topic='twitter-topic'
2023-05-14 15:10:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique tristique ultricies tempus consectetur pharetra Spring elit ut ornare dignissim venenatis sending to kafka topic twitter-topic
2023-05-14 15:10:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1648003983613866261, "id": 3089609252731070824, "text": "tristique tristique ultricies tempus consectetur pharetra Spring elit ut ornare dignissim venenatis", "createdAt": 1684059026000}' to topic='twitter-topic'
2023-05-14 15:10:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius tristique pharetra adipiscing mauris ultricies in in Kafka consectetur consectetur elit turpis venenatis consectetur varius sending to kafka topic twitter-topic
2023-05-14 15:10:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8083558074925228567, "id": 4338168360040801665, "text": "varius tristique pharetra adipiscing mauris ultricies in in Kafka consectetur consectetur elit turpis venenatis consectetur varius", "createdAt": 1684059036000}' to topic='twitter-topic'
2023-05-14 15:10:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus mauris ut elit sit in Elasticsearch lectus ornare dignissim consectetur ornare sending to kafka topic twitter-topic
2023-05-14 15:10:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7129545737219270001, "id": 8414953092008127241, "text": "lectus mauris ut elit sit in Elasticsearch lectus ornare dignissim consectetur ornare", "createdAt": 1684059046000}' to topic='twitter-topic'
2023-05-14 15:10:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique mauris venenatis venenatis tempus turpis Java elit in varius lectus sit sending to kafka topic twitter-topic
2023-05-14 15:10:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2165795993636791803, "id": 511734835682737603, "text": "tristique mauris venenatis venenatis tempus turpis Java elit in varius lectus sit", "createdAt": 1684059056000}' to topic='twitter-topic'
2023-05-14 15:11:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris ornare turpis ipsum tristique Java lectus elit ipsum sending to kafka topic twitter-topic
2023-05-14 15:11:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7065039991453871586, "id": 723085206643342019, "text": "mauris ornare turpis ipsum tristique Java lectus elit ipsum", "createdAt": 1684059066000}' to topic='twitter-topic'
2023-05-14 15:11:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra mauris id Elasticsearch venenatis sit sending to kafka topic twitter-topic
2023-05-14 15:11:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8288216159592391988, "id": 8815725230320818931, "text": "pharetra mauris id Elasticsearch venenatis sit", "createdAt": 1684059076000}' to topic='twitter-topic'
2023-05-14 15:11:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut ornare elit venenatis mauris dignissim varius dolor Java dignissim in venenatis pharetra tristique adipiscing sending to kafka topic twitter-topic
2023-05-14 15:11:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7447764158757833127, "id": 2618228789453643884, "text": "ut ornare elit venenatis mauris dignissim varius dolor Java dignissim in venenatis pharetra tristique adipiscing", "createdAt": 1684059086000}' to topic='twitter-topic'
2023-05-14 15:11:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus pharetra tristique mauris dolor Kafka turpis lectus tempus pharetra sending to kafka topic twitter-topic
2023-05-14 15:11:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2796039740262578052, "id": 2947591822569988236, "text": "lectus pharetra tristique mauris dolor Kafka turpis lectus tempus pharetra", "createdAt": 1684059096000}' to topic='twitter-topic'
2023-05-14 15:11:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut mauris sit dolor Spring lectus tristique sending to kafka topic twitter-topic
2023-05-14 15:11:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5031260492483068313, "id": 5019823208392846105, "text": "ut mauris sit dolor Spring lectus tristique", "createdAt": 1684059106000}' to topic='twitter-topic'
2023-05-14 15:11:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor pharetra elit tempus dolor lectus adipiscing Microservices turpis sit elit venenatis ut sending to kafka topic twitter-topic
2023-05-14 15:11:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 585862498462113875, "id": 658265536687826301, "text": "dolor pharetra elit tempus dolor lectus adipiscing Microservices turpis sit elit venenatis ut", "createdAt": 1684059116000}' to topic='twitter-topic'
2023-05-14 15:12:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum adipiscing adipiscing turpis adipiscing in mauris Elasticsearch tempus ultricies ut id ornare sending to kafka topic twitter-topic
2023-05-14 15:12:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1820083593753254289, "id": 6269536495854654525, "text": "ipsum adipiscing adipiscing turpis adipiscing in mauris Elasticsearch tempus ultricies ut id ornare", "createdAt": 1684059126000}' to topic='twitter-topic'
2023-05-14 15:12:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor elit tempus pharetra dolor adipiscing in tristique Java turpis ultricies mauris ultricies lectus ipsum ultricies sending to kafka topic twitter-topic
2023-05-14 15:12:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6390817408834468846, "id": 1502953514364210753, "text": "dolor elit tempus pharetra dolor adipiscing in tristique Java turpis ultricies mauris ultricies lectus ipsum ultricies", "createdAt": 1684059136000}' to topic='twitter-topic'
2023-05-14 15:12:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus venenatis ornare in Elasticsearch ornare varius sending to kafka topic twitter-topic
2023-05-14 15:12:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7370794866222365838, "id": 2566276093663350667, "text": "lectus venenatis ornare in Elasticsearch ornare varius", "createdAt": 1684059146000}' to topic='twitter-topic'
2023-05-14 15:12:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim ipsum sit tristique sit turpis Microservices turpis dolor tristique lectus sending to kafka topic twitter-topic
2023-05-14 15:12:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7265891254843600500, "id": 6160689508944750969, "text": "dignissim ipsum sit tristique sit turpis Microservices turpis dolor tristique lectus", "createdAt": 1684059156000}' to topic='twitter-topic'
2023-05-14 15:12:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim ultricies ipsum Kafka dolor pharetra sending to kafka topic twitter-topic
2023-05-14 15:12:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 586873986447237586, "id": 7843049103316551009, "text": "dignissim ultricies ipsum Kafka dolor pharetra", "createdAt": 1684059166000}' to topic='twitter-topic'
2023-05-14 15:12:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum tristique adipiscing elit id Elasticsearch turpis in id sending to kafka topic twitter-topic
2023-05-14 15:12:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7551366823215167829, "id": 2856783302326689218, "text": "ipsum tristique adipiscing elit id Elasticsearch turpis in id", "createdAt": 1684059176000}' to topic='twitter-topic'
2023-05-14 15:13:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis pharetra id lectus dolor Java in pharetra ultricies adipiscing sending to kafka topic twitter-topic
2023-05-14 15:13:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9187603551846075553, "id": 907105468264842787, "text": "venenatis pharetra id lectus dolor Java in pharetra ultricies adipiscing", "createdAt": 1684059186000}' to topic='twitter-topic'
2023-05-14 15:13:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies mauris adipiscing adipiscing Elasticsearch elit in sending to kafka topic twitter-topic
2023-05-14 15:13:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1710727235089872073, "id": 1616235723374370869, "text": "ultricies mauris adipiscing adipiscing Elasticsearch elit in", "createdAt": 1684059196000}' to topic='twitter-topic'
2023-05-14 15:13:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur dignissim ut pharetra ipsum venenatis tristique elit Elasticsearch venenatis ut ipsum ut sit tempus ipsum sending to kafka topic twitter-topic
2023-05-14 15:13:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6737275887571818340, "id": 364771669129167804, "text": "consectetur dignissim ut pharetra ipsum venenatis tristique elit Elasticsearch venenatis ut ipsum ut sit tempus ipsum", "createdAt": 1684059206000}' to topic='twitter-topic'
2023-05-14 15:13:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id ultricies ornare pharetra sit elit Microservices ornare consectetur ornare venenatis varius sending to kafka topic twitter-topic
2023-05-14 15:13:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7973450991531359135, "id": 4175947425359444811, "text": "id ultricies ornare pharetra sit elit Microservices ornare consectetur ornare venenatis varius", "createdAt": 1684059216000}' to topic='twitter-topic'
2023-05-14 15:13:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis id lectus tempus in Elasticsearch ut ultricies ultricies tempus sending to kafka topic twitter-topic
2023-05-14 15:13:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1454032374524139541, "id": 4643142462388256369, "text": "turpis id lectus tempus in Elasticsearch ut ultricies ultricies tempus", "createdAt": 1684059226000}' to topic='twitter-topic'
2023-05-14 15:13:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut tristique ipsum Elasticsearch pharetra adipiscing sending to kafka topic twitter-topic
2023-05-14 15:13:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7070775168748539954, "id": 4695701350202851091, "text": "ut tristique ipsum Elasticsearch pharetra adipiscing", "createdAt": 1684059236000}' to topic='twitter-topic'
2023-05-14 15:14:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis varius elit sit tristique Kafka dolor dolor mauris pharetra sending to kafka topic twitter-topic
2023-05-14 15:14:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4650246463497058665, "id": 7831314334993632174, "text": "venenatis varius elit sit tristique Kafka dolor dolor mauris pharetra", "createdAt": 1684059246000}' to topic='twitter-topic'
2023-05-14 15:14:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim consectetur lectus sit lectus dolor Spring varius tristique elit varius sending to kafka topic twitter-topic
2023-05-14 15:14:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2725290967368064494, "id": 29149515503706082, "text": "dignissim consectetur lectus sit lectus dolor Spring varius tristique elit varius", "createdAt": 1684059256000}' to topic='twitter-topic'
2023-05-14 15:14:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit ipsum tristique ultricies consectetur Spring varius dolor lectus sending to kafka topic twitter-topic
2023-05-14 15:14:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1531210997072381530, "id": 2775672991415998945, "text": "elit ipsum tristique ultricies consectetur Spring varius dolor lectus", "createdAt": 1684059266000}' to topic='twitter-topic'
2023-05-14 15:14:32 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -2 disconnected.
2023-05-14 15:14:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus pharetra ornare ipsum Elasticsearch ut adipiscing dolor sending to kafka topic twitter-topic
2023-05-14 15:14:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2657845902212850526, "id": 1230673653729153850, "text": "tempus pharetra ornare ipsum Elasticsearch ut adipiscing dolor", "createdAt": 1684059276000}' to topic='twitter-topic'
2023-05-14 15:14:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius pharetra dolor mauris Microservices pharetra ipsum sending to kafka topic twitter-topic
2023-05-14 15:14:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6739352673385647893, "id": 7083532091432333758, "text": "varius pharetra dolor mauris Microservices pharetra ipsum", "createdAt": 1684059286000}' to topic='twitter-topic'
2023-05-14 15:14:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra tristique tempus dignissim tempus Spring elit mauris adipiscing sending to kafka topic twitter-topic
2023-05-14 15:14:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3456923192078612420, "id": 6144810299411570811, "text": "pharetra tristique tempus dignissim tempus Spring elit mauris adipiscing", "createdAt": 1684059296000}' to topic='twitter-topic'
2023-05-14 15:15:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique dolor mauris elit Microservices ipsum id sending to kafka topic twitter-topic
2023-05-14 15:15:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8139824877622940470, "id": 7350486633743495640, "text": "tristique dolor mauris elit Microservices ipsum id", "createdAt": 1684059306000}' to topic='twitter-topic'
2023-05-14 15:15:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing ornare tempus Java venenatis varius sending to kafka topic twitter-topic
2023-05-14 15:15:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6362389411152118115, "id": 2153007705160525027, "text": "adipiscing ornare tempus Java venenatis varius", "createdAt": 1684059316000}' to topic='twitter-topic'
2023-05-14 15:15:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in venenatis varius dignissim in ultricies Java ultricies sit sit tristique elit sending to kafka topic twitter-topic
2023-05-14 15:15:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1588033133764066869, "id": 5877165978666011062, "text": "in venenatis varius dignissim in ultricies Java ultricies sit sit tristique elit", "createdAt": 1684059326000}' to topic='twitter-topic'
2023-05-14 15:15:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut adipiscing mauris mauris Microservices tempus consectetur ultricies sending to kafka topic twitter-topic
2023-05-14 15:15:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8080363974710933822, "id": 5294020110369447343, "text": "ut adipiscing mauris mauris Microservices tempus consectetur ultricies", "createdAt": 1684059336000}' to topic='twitter-topic'
2023-05-14 15:15:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius id tristique Java ultricies dignissim sending to kafka topic twitter-topic
2023-05-14 15:15:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4054551438161893665, "id": 430439425919478657, "text": "varius id tristique Java ultricies dignissim", "createdAt": 1684059346000}' to topic='twitter-topic'
2023-05-14 15:15:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit varius turpis ornare mauris Java mauris elit sit sending to kafka topic twitter-topic
2023-05-14 15:15:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2772818098939940987, "id": 8986347386269449450, "text": "sit varius turpis ornare mauris Java mauris elit sit", "createdAt": 1684059356000}' to topic='twitter-topic'
2023-05-14 15:16:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut tristique adipiscing sit varius ut ipsum mauris Microservices venenatis id pharetra ornare pharetra elit tempus sending to kafka topic twitter-topic
2023-05-14 15:16:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6362386414046630643, "id": 1742521340833526754, "text": "ut tristique adipiscing sit varius ut ipsum mauris Microservices venenatis id pharetra ornare pharetra elit tempus", "createdAt": 1684059366000}' to topic='twitter-topic'
2023-05-14 15:16:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum ipsum sit ornare tristique dolor lectus Kafka consectetur ut ornare turpis tristique dignissim sending to kafka topic twitter-topic
2023-05-14 15:16:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9115414521436658719, "id": 3407256434825455465, "text": "ipsum ipsum sit ornare tristique dolor lectus Kafka consectetur ut ornare turpis tristique dignissim", "createdAt": 1684059376000}' to topic='twitter-topic'
2023-05-14 15:16:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius in lectus pharetra dolor lectus tempus varius Kafka adipiscing ipsum consectetur lectus id in ut sending to kafka topic twitter-topic
2023-05-14 15:16:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 911401627996398062, "id": 7126994573669617103, "text": "varius in lectus pharetra dolor lectus tempus varius Kafka adipiscing ipsum consectetur lectus id in ut", "createdAt": 1684059386000}' to topic='twitter-topic'
2023-05-14 15:16:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id tristique consectetur adipiscing in lectus Kafka venenatis in sit venenatis turpis sending to kafka topic twitter-topic
2023-05-14 15:16:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4171870319142492557, "id": 3513179043798273398, "text": "id tristique consectetur adipiscing in lectus Kafka venenatis in sit venenatis turpis", "createdAt": 1684059396000}' to topic='twitter-topic'
2023-05-14 15:16:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare consectetur in pharetra turpis pharetra lectus turpis Kafka consectetur varius adipiscing in ut tristique ultricies sending to kafka topic twitter-topic
2023-05-14 15:16:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7995440176946884311, "id": 533368444622868481, "text": "ornare consectetur in pharetra turpis pharetra lectus turpis Kafka consectetur varius adipiscing in ut tristique ultricies", "createdAt": 1684059406000}' to topic='twitter-topic'
2023-05-14 15:16:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra ultricies tristique elit mauris venenatis in tristique Kafka consectetur turpis tempus dolor sit lectus tempus sending to kafka topic twitter-topic
2023-05-14 15:16:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2398721707723791044, "id": 6604253184181109384, "text": "pharetra ultricies tristique elit mauris venenatis in tristique Kafka consectetur turpis tempus dolor sit lectus tempus", "createdAt": 1684059416000}' to topic='twitter-topic'
2023-05-14 15:17:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra venenatis ipsum varius in consectetur Elasticsearch sit elit ultricies sit ultricies sending to kafka topic twitter-topic
2023-05-14 15:17:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6788498003708173554, "id": 5616125558699830821, "text": "pharetra venenatis ipsum varius in consectetur Elasticsearch sit elit ultricies sit ultricies", "createdAt": 1684059426000}' to topic='twitter-topic'
2023-05-14 15:17:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique ipsum in Kafka tristique elit sending to kafka topic twitter-topic
2023-05-14 15:17:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8603342016402451848, "id": 4652435000220679526, "text": "tristique ipsum in Kafka tristique elit", "createdAt": 1684059436000}' to topic='twitter-topic'
2023-05-14 15:17:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum turpis elit varius Spring ultricies dignissim sending to kafka topic twitter-topic
2023-05-14 15:17:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7113266076972335617, "id": 921394139451947788, "text": "ipsum turpis elit varius Spring ultricies dignissim", "createdAt": 1684059446000}' to topic='twitter-topic'
2023-05-14 15:17:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus lectus ut turpis varius dolor Spring in ut dolor consectetur sending to kafka topic twitter-topic
2023-05-14 15:17:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3027400225967857198, "id": 5855904318687411039, "text": "tempus lectus ut turpis varius dolor Spring in ut dolor consectetur", "createdAt": 1684059456000}' to topic='twitter-topic'
2023-05-14 15:17:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum elit id lectus mauris consectetur Kafka in ipsum varius consectetur ultricies sending to kafka topic twitter-topic
2023-05-14 15:17:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3219500802527444543, "id": 5895967810925073334, "text": "ipsum elit id lectus mauris consectetur Kafka in ipsum varius consectetur ultricies", "createdAt": 1684059466000}' to topic='twitter-topic'
2023-05-14 15:17:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit venenatis adipiscing tempus venenatis lectus Elasticsearch turpis tristique sit mauris ipsum sending to kafka topic twitter-topic
2023-05-14 15:17:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 846635799613979663, "id": 1783168115133899763, "text": "elit venenatis adipiscing tempus venenatis lectus Elasticsearch turpis tristique sit mauris ipsum", "createdAt": 1684059476000}' to topic='twitter-topic'
2023-05-14 15:18:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra varius tempus Java varius varius sending to kafka topic twitter-topic
2023-05-14 15:18:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8464773664653624920, "id": 7938073576319991419, "text": "pharetra varius tempus Java varius varius", "createdAt": 1684059486000}' to topic='twitter-topic'
2023-05-14 15:18:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur ipsum tristique in turpis varius ornare Kafka lectus dolor sit tempus lectus in sending to kafka topic twitter-topic
2023-05-14 15:18:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1522615114284917153, "id": 1393604682955635158, "text": "consectetur ipsum tristique in turpis varius ornare Kafka lectus dolor sit tempus lectus in", "createdAt": 1684059496000}' to topic='twitter-topic'
2023-05-14 15:18:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis ipsum tempus ipsum dolor Java in adipiscing mauris sending to kafka topic twitter-topic
2023-05-14 15:18:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8393494497192925453, "id": 1221623819019985432, "text": "venenatis ipsum tempus ipsum dolor Java in adipiscing mauris", "createdAt": 1684059506000}' to topic='twitter-topic'
2023-05-14 15:18:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing tristique turpis mauris venenatis ultricies Java in in ultricies ipsum adipiscing sending to kafka topic twitter-topic
2023-05-14 15:18:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3328513591066468976, "id": 9041877502227659990, "text": "adipiscing tristique turpis mauris venenatis ultricies Java in in ultricies ipsum adipiscing", "createdAt": 1684059516000}' to topic='twitter-topic'
2023-05-14 15:18:36 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -2 disconnected.
2023-05-14 15:18:36 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -3 disconnected.
2023-05-14 15:18:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor turpis pharetra ultricies tristique dignissim id ultricies Elasticsearch mauris ipsum tristique elit ipsum sit sending to kafka topic twitter-topic
2023-05-14 15:18:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5993435882412356031, "id": 387321479877293544, "text": "dolor turpis pharetra ultricies tristique dignissim id ultricies Elasticsearch mauris ipsum tristique elit ipsum sit", "createdAt": 1684059526000}' to topic='twitter-topic'
2023-05-14 15:18:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus mauris pharetra dignissim ornare id Java pharetra in in id sit sending to kafka topic twitter-topic
2023-05-14 15:18:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4572901127300955780, "id": 522601822141486205, "text": "tempus mauris pharetra dignissim ornare id Java pharetra in in id sit", "createdAt": 1684059536000}' to topic='twitter-topic'
2023-05-14 15:19:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor tempus dignissim venenatis Spring tempus sit ultricies sending to kafka topic twitter-topic
2023-05-14 15:19:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 741079484979125868, "id": 3109605546039103145, "text": "dolor tempus dignissim venenatis Spring tempus sit ultricies", "createdAt": 1684059546000}' to topic='twitter-topic'
2023-05-14 15:19:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis dolor ipsum tristique tempus lectus mauris Spring lectus tempus varius mauris ipsum sit sending to kafka topic twitter-topic
2023-05-14 15:19:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6038224516663758636, "id": 8805941316557999214, "text": "venenatis dolor ipsum tristique tempus lectus mauris Spring lectus tempus varius mauris ipsum sit", "createdAt": 1684059556000}' to topic='twitter-topic'
2023-05-14 15:19:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit adipiscing adipiscing adipiscing Spring consectetur varius sending to kafka topic twitter-topic
2023-05-14 15:19:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1745449845784651180, "id": 184119940693531267, "text": "sit adipiscing adipiscing adipiscing Spring consectetur varius", "createdAt": 1684059566000}' to topic='twitter-topic'
2023-05-14 15:19:32 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2023-05-14 15:19:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare venenatis id turpis pharetra pharetra Spring consectetur ultricies ut consectetur sending to kafka topic twitter-topic
2023-05-14 15:19:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8110027744139958073, "id": 5930415070963595627, "text": "ornare venenatis id turpis pharetra pharetra Spring consectetur ultricies ut consectetur", "createdAt": 1684059576000}' to topic='twitter-topic'
2023-05-14 15:19:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis turpis tempus venenatis pharetra adipiscing tristique Microservices mauris consectetur consectetur ipsum ultricies tempus sending to kafka topic twitter-topic
2023-05-14 15:19:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1881357217507725952, "id": 946498876782221275, "text": "turpis turpis tempus venenatis pharetra adipiscing tristique Microservices mauris consectetur consectetur ipsum ultricies tempus", "createdAt": 1684059586000}' to topic='twitter-topic'
2023-05-14 15:19:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra tristique tristique tempus Kafka dolor lectus sending to kafka topic twitter-topic
2023-05-14 15:19:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1372609375328829847, "id": 2305575327823030223, "text": "pharetra tristique tristique tempus Kafka dolor lectus", "createdAt": 1684059596000}' to topic='twitter-topic'
2023-05-14 15:20:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies id tempus pharetra lectus Spring elit tempus ultricies id sending to kafka topic twitter-topic
2023-05-14 15:20:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2239076306217890318, "id": 46008328712315590, "text": "ultricies id tempus pharetra lectus Spring elit tempus ultricies id", "createdAt": 1684059606000}' to topic='twitter-topic'
2023-05-14 15:20:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis tempus consectetur dignissim varius Java ornare id dolor dolor sending to kafka topic twitter-topic
2023-05-14 15:20:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6758272731295227575, "id": 6020252143659221429, "text": "turpis tempus consectetur dignissim varius Java ornare id dolor dolor", "createdAt": 1684059616000}' to topic='twitter-topic'
2023-05-14 15:20:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut lectus id varius venenatis elit Microservices ut id adipiscing dolor elit sending to kafka topic twitter-topic
2023-05-14 15:20:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3491430570262906996, "id": 750415952318275190, "text": "ut lectus id varius venenatis elit Microservices ut id adipiscing dolor elit", "createdAt": 1684059626000}' to topic='twitter-topic'
2023-05-14 15:20:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare tristique tempus mauris mauris sit Spring ornare adipiscing dolor tempus sending to kafka topic twitter-topic
2023-05-14 15:20:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 953365365423726704, "id": 697245070287943734, "text": "ornare tristique tempus mauris mauris sit Spring ornare adipiscing dolor tempus", "createdAt": 1684059636000}' to topic='twitter-topic'
2023-05-14 15:20:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit lectus tempus ornare Elasticsearch id pharetra sending to kafka topic twitter-topic
2023-05-14 15:20:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8454207684548678872, "id": 5009087918962279963, "text": "elit lectus tempus ornare Elasticsearch id pharetra", "createdAt": 1684059646000}' to topic='twitter-topic'
2023-05-14 15:20:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus dignissim sit adipiscing ut venenatis Java ultricies in in dolor mauris sending to kafka topic twitter-topic
2023-05-14 15:20:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7706319579447221128, "id": 7804466961647566013, "text": "tempus dignissim sit adipiscing ut venenatis Java ultricies in in dolor mauris", "createdAt": 1684059656000}' to topic='twitter-topic'
2023-05-14 15:21:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra pharetra in in ultricies Microservices ornare ipsum ipsum sending to kafka topic twitter-topic
2023-05-14 15:21:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3699459276481150987, "id": 6256493399934156619, "text": "pharetra pharetra in in ultricies Microservices ornare ipsum ipsum", "createdAt": 1684059666000}' to topic='twitter-topic'
2023-05-14 15:21:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit in adipiscing venenatis elit turpis ultricies Microservices pharetra id turpis id dolor sending to kafka topic twitter-topic
2023-05-14 15:21:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 386003746525136677, "id": 2970452786760397492, "text": "elit in adipiscing venenatis elit turpis ultricies Microservices pharetra id turpis id dolor", "createdAt": 1684059676000}' to topic='twitter-topic'
2023-05-14 15:21:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis consectetur ut mauris Microservices ut varius sending to kafka topic twitter-topic
2023-05-14 15:21:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 525110790138076277, "id": 1328136708663080030, "text": "turpis consectetur ut mauris Microservices ut varius", "createdAt": 1684059686000}' to topic='twitter-topic'
2023-05-14 15:21:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare id ornare in adipiscing Spring ipsum pharetra pharetra ultricies sending to kafka topic twitter-topic
2023-05-14 15:21:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7059901365164264053, "id": 8505594869566329359, "text": "ornare id ornare in adipiscing Spring ipsum pharetra pharetra ultricies", "createdAt": 1684059696000}' to topic='twitter-topic'
2023-05-14 15:21:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur dignissim turpis mauris Kafka in in sending to kafka topic twitter-topic
2023-05-14 15:21:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4307625713022652615, "id": 947440015138901351, "text": "consectetur dignissim turpis mauris Kafka in in", "createdAt": 1684059706000}' to topic='twitter-topic'
2023-05-14 15:21:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis ipsum dolor id Elasticsearch turpis in varius sending to kafka topic twitter-topic
2023-05-14 15:21:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8080411365344139562, "id": 2871899478096324737, "text": "turpis ipsum dolor id Elasticsearch turpis in varius", "createdAt": 1684059716000}' to topic='twitter-topic'
2023-05-14 15:22:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim dignissim tristique Java tristique dignissim sending to kafka topic twitter-topic
2023-05-14 15:22:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1491339351264117363, "id": 1180962377242644472, "text": "dignissim dignissim tristique Java tristique dignissim", "createdAt": 1684059726000}' to topic='twitter-topic'
2023-05-14 15:22:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique ornare lectus in turpis in adipiscing dignissim Kafka elit mauris dolor pharetra ut tristique consectetur sending to kafka topic twitter-topic
2023-05-14 15:22:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8604449036821436327, "id": 280635392245785470, "text": "tristique ornare lectus in turpis in adipiscing dignissim Kafka elit mauris dolor pharetra ut tristique consectetur", "createdAt": 1684059736000}' to topic='twitter-topic'
2023-05-14 15:22:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum ipsum sit ipsum tempus turpis Elasticsearch in turpis lectus consectetur id sending to kafka topic twitter-topic
2023-05-14 15:22:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1964681556095181897, "id": 8429231348380049861, "text": "ipsum ipsum sit ipsum tempus turpis Elasticsearch in turpis lectus consectetur id", "createdAt": 1684059746000}' to topic='twitter-topic'
2023-05-14 15:22:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus dolor consectetur ut Spring id varius ipsum sending to kafka topic twitter-topic
2023-05-14 15:22:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2514877321922791770, "id": 6055458879663800242, "text": "lectus dolor consectetur ut Spring id varius ipsum", "createdAt": 1684059756000}' to topic='twitter-topic'
2023-05-14 15:22:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies elit mauris id Spring consectetur ultricies ut sending to kafka topic twitter-topic
2023-05-14 15:22:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4841317408896592525, "id": 6396827256108178397, "text": "ultricies elit mauris id Spring consectetur ultricies ut", "createdAt": 1684059766000}' to topic='twitter-topic'
2023-05-14 15:22:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing tempus mauris tempus tempus Spring varius lectus mauris sending to kafka topic twitter-topic
2023-05-14 15:22:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7720366904679942862, "id": 8228635550880146439, "text": "adipiscing tempus mauris tempus tempus Spring varius lectus mauris", "createdAt": 1684059776000}' to topic='twitter-topic'
2023-05-14 15:23:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing dolor ultricies pharetra ornare Elasticsearch ipsum lectus id ornare sending to kafka topic twitter-topic
2023-05-14 15:23:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3071240047197203789, "id": 1188550765131927385, "text": "adipiscing dolor ultricies pharetra ornare Elasticsearch ipsum lectus id ornare", "createdAt": 1684059786000}' to topic='twitter-topic'
2023-05-14 15:23:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare tristique dolor dolor ultricies sit Java ultricies dolor elit varius sending to kafka topic twitter-topic
2023-05-14 15:23:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1756793435279519316, "id": 3621198418579171068, "text": "ornare tristique dolor dolor ultricies sit Java ultricies dolor elit varius", "createdAt": 1684059796000}' to topic='twitter-topic'
2023-05-14 15:23:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis elit tempus pharetra tempus ipsum ornare in Kafka dignissim dolor tempus venenatis dignissim mauris venenatis sending to kafka topic twitter-topic
2023-05-14 15:23:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4183823571423289656, "id": 2995046304849323474, "text": "turpis elit tempus pharetra tempus ipsum ornare in Kafka dignissim dolor tempus venenatis dignissim mauris venenatis", "createdAt": 1684059806000}' to topic='twitter-topic'
2023-05-14 15:23:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in ultricies sit tristique ut turpis turpis pharetra Kafka varius sit dignissim tempus ultricies ut venenatis sending to kafka topic twitter-topic
2023-05-14 15:23:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3241796239403419424, "id": 2790285962217116299, "text": "in ultricies sit tristique ut turpis turpis pharetra Kafka varius sit dignissim tempus ultricies ut venenatis", "createdAt": 1684059816000}' to topic='twitter-topic'
2023-05-14 15:23:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing pharetra sit ipsum ultricies Java ipsum in turpis sending to kafka topic twitter-topic
2023-05-14 15:23:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2131023627201400369, "id": 9022091667226675583, "text": "adipiscing pharetra sit ipsum ultricies Java ipsum in turpis", "createdAt": 1684059826000}' to topic='twitter-topic'
2023-05-14 15:23:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris pharetra dignissim ornare Microservices dignissim varius ultricies sending to kafka topic twitter-topic
2023-05-14 15:23:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 525876793769803317, "id": 715540588889294057, "text": "mauris pharetra dignissim ornare Microservices dignissim varius ultricies", "createdAt": 1684059836000}' to topic='twitter-topic'
2023-05-14 15:24:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id mauris ornare consectetur consectetur turpis Spring sit ultricies mauris ipsum sending to kafka topic twitter-topic
2023-05-14 15:24:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6539593098934423455, "id": 9113119570904160873, "text": "id mauris ornare consectetur consectetur turpis Spring sit ultricies mauris ipsum", "createdAt": 1684059846000}' to topic='twitter-topic'
2023-05-14 15:24:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies pharetra ultricies ornare Microservices dolor varius in sending to kafka topic twitter-topic
2023-05-14 15:24:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1461198080647876334, "id": 4398938011996696172, "text": "ultricies pharetra ultricies ornare Microservices dolor varius in", "createdAt": 1684059856000}' to topic='twitter-topic'
2023-05-14 15:24:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra dolor turpis in ornare in Kafka turpis tristique id consectetur sending to kafka topic twitter-topic
2023-05-14 15:24:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7125298834190797206, "id": 7798753772445113955, "text": "pharetra dolor turpis in ornare in Kafka turpis tristique id consectetur", "createdAt": 1684059866000}' to topic='twitter-topic'
2023-05-14 15:24:32 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 2 disconnected.
2023-05-14 15:24:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing tempus tempus varius tristique in Kafka pharetra pharetra dignissim dignissim in sending to kafka topic twitter-topic
2023-05-14 15:24:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4286676395259413022, "id": 2372035054481566188, "text": "adipiscing tempus tempus varius tristique in Kafka pharetra pharetra dignissim dignissim in", "createdAt": 1684059876000}' to topic='twitter-topic'
2023-05-14 15:24:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis tristique mauris dignissim ornare ipsum Elasticsearch ultricies ultricies sit elit sending to kafka topic twitter-topic
2023-05-14 15:24:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3649777772180025356, "id": 5090798028069566112, "text": "turpis tristique mauris dignissim ornare ipsum Elasticsearch ultricies ultricies sit elit", "createdAt": 1684059886000}' to topic='twitter-topic'
2023-05-14 15:24:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis ipsum varius dignissim dignissim mauris venenatis Microservices venenatis venenatis mauris ornare consectetur sending to kafka topic twitter-topic
2023-05-14 15:24:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2030851336833886593, "id": 8692551001831328722, "text": "venenatis ipsum varius dignissim dignissim mauris venenatis Microservices venenatis venenatis mauris ornare consectetur", "createdAt": 1684059896000}' to topic='twitter-topic'
2023-05-14 15:25:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor varius id ultricies Java venenatis dolor sending to kafka topic twitter-topic
2023-05-14 15:25:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2575051141215574131, "id": 8571530427515817515, "text": "dolor varius id ultricies Java venenatis dolor", "createdAt": 1684059906000}' to topic='twitter-topic'
2023-05-14 15:25:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in sit dolor consectetur tempus Kafka mauris elit dignissim dolor sending to kafka topic twitter-topic
2023-05-14 15:25:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3153265551566528341, "id": 7406755031239337170, "text": "in sit dolor consectetur tempus Kafka mauris elit dignissim dolor", "createdAt": 1684059916000}' to topic='twitter-topic'
2023-05-14 15:25:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra ultricies ut in Java adipiscing varius sending to kafka topic twitter-topic
2023-05-14 15:25:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7294613822606526179, "id": 4497511705636517061, "text": "pharetra ultricies ut in Java adipiscing varius", "createdAt": 1684059926000}' to topic='twitter-topic'
2023-05-14 15:25:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum in tempus tristique tristique Kafka id mauris mauris ipsum sending to kafka topic twitter-topic
2023-05-14 15:25:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8170921930115577512, "id": 7109709959114133068, "text": "ipsum in tempus tristique tristique Kafka id mauris mauris ipsum", "createdAt": 1684059936000}' to topic='twitter-topic'
2023-05-14 15:25:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare tempus venenatis id sit id tristique Elasticsearch dignissim dolor tempus ultricies varius elit sending to kafka topic twitter-topic
2023-05-14 15:25:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1602881756938742697, "id": 3399643721608081553, "text": "ornare tempus venenatis id sit id tristique Elasticsearch dignissim dolor tempus ultricies varius elit", "createdAt": 1684059946000}' to topic='twitter-topic'
2023-05-14 15:25:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut adipiscing ultricies pharetra ultricies tempus elit elit Microservices id venenatis ornare sit lectus ornare sending to kafka topic twitter-topic
2023-05-14 15:25:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9093882618616247907, "id": 7713733224167186363, "text": "ut adipiscing ultricies pharetra ultricies tempus elit elit Microservices id venenatis ornare sit lectus ornare", "createdAt": 1684059956000}' to topic='twitter-topic'
2023-05-14 15:26:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit tempus lectus in turpis tristique consectetur venenatis Java mauris in ipsum sit ipsum elit sending to kafka topic twitter-topic
2023-05-14 15:26:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1145940197963850145, "id": 1020969721991158021, "text": "elit tempus lectus in turpis tristique consectetur venenatis Java mauris in ipsum sit ipsum elit", "createdAt": 1684059966000}' to topic='twitter-topic'
2023-05-14 15:26:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur id in dolor mauris lectus adipiscing Java elit ut id venenatis pharetra consectetur sending to kafka topic twitter-topic
2023-05-14 15:26:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2428917258184334999, "id": 4398442415686934897, "text": "consectetur id in dolor mauris lectus adipiscing Java elit ut id venenatis pharetra consectetur", "createdAt": 1684059976000}' to topic='twitter-topic'
2023-05-14 15:26:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit venenatis dolor venenatis tristique Java adipiscing pharetra mauris sending to kafka topic twitter-topic
2023-05-14 15:26:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3981896860289976767, "id": 5338872252258817507, "text": "sit venenatis dolor venenatis tristique Java adipiscing pharetra mauris", "createdAt": 1684059986000}' to topic='twitter-topic'
2023-05-14 15:26:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis venenatis sit dignissim venenatis lectus mauris Microservices ut venenatis ornare in dignissim tempus sending to kafka topic twitter-topic
2023-05-14 15:26:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8006893216364646168, "id": 5523357541973264358, "text": "turpis venenatis sit dignissim venenatis lectus mauris Microservices ut venenatis ornare in dignissim tempus", "createdAt": 1684059996000}' to topic='twitter-topic'
2023-05-14 15:26:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra venenatis tristique consectetur consectetur id turpis Elasticsearch varius venenatis dignissim varius ornare sending to kafka topic twitter-topic
2023-05-14 15:26:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2326195874698082833, "id": 8332183233411197588, "text": "pharetra venenatis tristique consectetur consectetur id turpis Elasticsearch varius venenatis dignissim varius ornare", "createdAt": 1684060006000}' to topic='twitter-topic'
2023-05-14 15:26:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus adipiscing elit consectetur in venenatis in Java dolor mauris adipiscing dignissim dignissim sending to kafka topic twitter-topic
2023-05-14 15:26:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7894375035171914853, "id": 1502967831170634365, "text": "tempus adipiscing elit consectetur in venenatis in Java dolor mauris adipiscing dignissim dignissim", "createdAt": 1684060016000}' to topic='twitter-topic'
2023-05-14 15:27:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id adipiscing varius ornare Java dignissim dolor sending to kafka topic twitter-topic
2023-05-14 15:27:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5990079286214084426, "id": 4353546678521762624, "text": "id adipiscing varius ornare Java dignissim dolor", "createdAt": 1684060026000}' to topic='twitter-topic'
2023-05-14 15:27:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius ipsum in elit turpis dignissim adipiscing pharetra Kafka dignissim tristique ut in varius dolor sending to kafka topic twitter-topic
2023-05-14 15:27:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9006131700669070211, "id": 8286356900623194236, "text": "varius ipsum in elit turpis dignissim adipiscing pharetra Kafka dignissim tristique ut in varius dolor", "createdAt": 1684060036000}' to topic='twitter-topic'
2023-05-14 15:27:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus id dignissim varius Spring in tristique ut sending to kafka topic twitter-topic
2023-05-14 15:27:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8138821460523771997, "id": 2509024132538381996, "text": "lectus id dignissim varius Spring in tristique ut", "createdAt": 1684060046000}' to topic='twitter-topic'
2023-05-14 15:27:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum ut ornare dignissim Spring sit ornare lectus sending to kafka topic twitter-topic
2023-05-14 15:27:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2175415682086648171, "id": 1612368844090919479, "text": "ipsum ut ornare dignissim Spring sit ornare lectus", "createdAt": 1684060056000}' to topic='twitter-topic'
2023-05-14 15:27:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text adipiscing ornare ultricies sit pharetra venenatis Kafka lectus pharetra consectetur ipsum sending to kafka topic twitter-topic
2023-05-14 15:27:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8578929372588534573, "id": 7471517252115032821, "text": "adipiscing ornare ultricies sit pharetra venenatis Kafka lectus pharetra consectetur ipsum", "createdAt": 1684060066000}' to topic='twitter-topic'
2023-05-14 15:27:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus ut id turpis varius Kafka tempus ornare lectus consectetur sending to kafka topic twitter-topic
2023-05-14 15:27:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1149973102128462517, "id": 5617225008011992747, "text": "tempus ut id turpis varius Kafka tempus ornare lectus consectetur", "createdAt": 1684060076000}' to topic='twitter-topic'
2023-05-14 15:28:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra dolor adipiscing id ipsum ornare Java lectus ipsum dolor varius tristique sending to kafka topic twitter-topic
2023-05-14 15:28:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4152741128410070384, "id": 8322706752110469258, "text": "pharetra dolor adipiscing id ipsum ornare Java lectus ipsum dolor varius tristique", "createdAt": 1684060086000}' to topic='twitter-topic'
2023-05-14 15:28:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut varius dignissim turpis ipsum dignissim varius elit Kafka in adipiscing pharetra ultricies consectetur elit id sending to kafka topic twitter-topic
2023-05-14 15:28:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6662892572711191639, "id": 4678767093571585547, "text": "ut varius dignissim turpis ipsum dignissim varius elit Kafka in adipiscing pharetra ultricies consectetur elit id", "createdAt": 1684060096000}' to topic='twitter-topic'
2023-05-14 15:28:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim turpis venenatis venenatis ornare id tempus dolor Elasticsearch dignissim lectus lectus dignissim dignissim sit lectus sending to kafka topic twitter-topic
2023-05-14 15:28:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3540942726977214746, "id": 5472957234165585700, "text": "dignissim turpis venenatis venenatis ornare id tempus dolor Elasticsearch dignissim lectus lectus dignissim dignissim sit lectus", "createdAt": 1684060106000}' to topic='twitter-topic'
2023-05-14 15:28:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis in lectus ut in pharetra ipsum dolor Elasticsearch id pharetra ultricies mauris id mauris dolor sending to kafka topic twitter-topic
2023-05-14 15:28:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3317661283213227101, "id": 629811160926409992, "text": "venenatis in lectus ut in pharetra ipsum dolor Elasticsearch id pharetra ultricies mauris id mauris dolor", "createdAt": 1684060116000}' to topic='twitter-topic'
2023-05-14 15:28:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis ut dolor ultricies ornare ipsum tempus Microservices venenatis lectus dignissim tristique ut sending to kafka topic twitter-topic
2023-05-14 15:28:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5435164591138331025, "id": 6242074342780221437, "text": "venenatis ut dolor ultricies ornare ipsum tempus Microservices venenatis lectus dignissim tristique ut", "createdAt": 1684060126000}' to topic='twitter-topic'
2023-05-14 15:28:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis venenatis id in venenatis turpis tristique dignissim Kafka venenatis id in ut in pharetra sit sending to kafka topic twitter-topic
2023-05-14 15:28:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3547758774175096568, "id": 9167268817388075303, "text": "venenatis venenatis id in venenatis turpis tristique dignissim Kafka venenatis id in ut in pharetra sit", "createdAt": 1684060136000}' to topic='twitter-topic'
2023-05-14 15:29:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in varius turpis dolor sit Microservices tempus ultricies elit sending to kafka topic twitter-topic
2023-05-14 15:29:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7214118409498850259, "id": 2280615940804895642, "text": "in varius turpis dolor sit Microservices tempus ultricies elit", "createdAt": 1684060146000}' to topic='twitter-topic'
2023-05-14 15:29:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus dolor turpis ultricies tempus ipsum Java tempus ut turpis mauris sending to kafka topic twitter-topic
2023-05-14 15:29:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4401151420105839011, "id": 7758078434598085132, "text": "tempus dolor turpis ultricies tempus ipsum Java tempus ut turpis mauris", "createdAt": 1684060156000}' to topic='twitter-topic'
2023-05-14 15:29:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus turpis turpis ipsum sit pharetra tristique turpis Java elit pharetra mauris sit venenatis in sit sending to kafka topic twitter-topic
2023-05-14 15:29:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6518003261419947165, "id": 194702403545815318, "text": "lectus turpis turpis ipsum sit pharetra tristique turpis Java elit pharetra mauris sit venenatis in sit", "createdAt": 1684060166000}' to topic='twitter-topic'
2023-05-14 15:29:32 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 1 disconnected.
2023-05-14 15:29:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis adipiscing id sit sit Java turpis sit elit adipiscing sending to kafka topic twitter-topic
2023-05-14 15:29:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7775870137288225217, "id": 2868207023056432036, "text": "turpis adipiscing id sit sit Java turpis sit elit adipiscing", "createdAt": 1684060176000}' to topic='twitter-topic'
2023-05-14 15:29:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius pharetra mauris mauris ultricies tristique Java elit venenatis ut lectus sending to kafka topic twitter-topic
2023-05-14 15:29:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9166624745103076366, "id": 8093045474268596792, "text": "varius pharetra mauris mauris ultricies tristique Java elit venenatis ut lectus", "createdAt": 1684060186000}' to topic='twitter-topic'
2023-05-14 15:29:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut tristique ornare elit id sit Microservices turpis lectus ut consectetur elit sending to kafka topic twitter-topic
2023-05-14 15:29:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9203400652821026805, "id": 6574795522719319151, "text": "ut tristique ornare elit id sit Microservices turpis lectus ut consectetur elit", "createdAt": 1684060196000}' to topic='twitter-topic'
2023-05-14 15:30:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor ornare adipiscing mauris tristique Elasticsearch lectus adipiscing ornare varius sending to kafka topic twitter-topic
2023-05-14 15:30:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5876143914382336433, "id": 6330053764594667926, "text": "dolor ornare adipiscing mauris tristique Elasticsearch lectus adipiscing ornare varius", "createdAt": 1684060206000}' to topic='twitter-topic'
2023-05-14 15:30:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus ornare id turpis ornare lectus ut Spring tristique ipsum adipiscing in tempus id sending to kafka topic twitter-topic
2023-05-14 15:30:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3762941272398051434, "id": 4958132627119532654, "text": "tempus ornare id turpis ornare lectus ut Spring tristique ipsum adipiscing in tempus id", "createdAt": 1684060216000}' to topic='twitter-topic'
2023-05-14 15:30:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim dignissim ipsum adipiscing venenatis venenatis venenatis Java sit ultricies ut adipiscing consectetur lectus sending to kafka topic twitter-topic
2023-05-14 15:30:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1746563686696511547, "id": 1353588952740865951, "text": "dignissim dignissim ipsum adipiscing venenatis venenatis venenatis Java sit ultricies ut adipiscing consectetur lectus", "createdAt": 1684060226000}' to topic='twitter-topic'
2023-05-14 15:30:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus dolor lectus consectetur Spring mauris venenatis sending to kafka topic twitter-topic
2023-05-14 15:30:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8776770211518129179, "id": 8106894067495918994, "text": "lectus dolor lectus consectetur Spring mauris venenatis", "createdAt": 1684060236000}' to topic='twitter-topic'
2023-05-14 15:30:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies ultricies ultricies ultricies ut lectus in dignissim Kafka ultricies tempus sit venenatis varius ultricies sending to kafka topic twitter-topic
2023-05-14 15:30:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1893381807825842452, "id": 7509854286972356789, "text": "ultricies ultricies ultricies ultricies ut lectus in dignissim Kafka ultricies tempus sit venenatis varius ultricies", "createdAt": 1684060246000}' to topic='twitter-topic'
2023-05-14 15:30:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris ornare elit turpis dignissim id in Microservices tempus tristique dolor adipiscing adipiscing pharetra sending to kafka topic twitter-topic
2023-05-14 15:30:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 309768466988185044, "id": 5456177174740567951, "text": "mauris ornare elit turpis dignissim id in Microservices tempus tristique dolor adipiscing adipiscing pharetra", "createdAt": 1684060256000}' to topic='twitter-topic'
2023-05-14 15:31:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis adipiscing tempus pharetra sit turpis varius consectetur Spring varius dolor in id varius ipsum sending to kafka topic twitter-topic
2023-05-14 15:31:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5716424532306058202, "id": 9047360126930674472, "text": "turpis adipiscing tempus pharetra sit turpis varius consectetur Spring varius dolor in id varius ipsum", "createdAt": 1684060266000}' to topic='twitter-topic'
2023-05-14 15:31:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum elit turpis ut Microservices mauris tristique sending to kafka topic twitter-topic
2023-05-14 15:31:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 228046173578612244, "id": 3591391782774361972, "text": "ipsum elit turpis ut Microservices mauris tristique", "createdAt": 1684060276000}' to topic='twitter-topic'
2023-05-14 15:31:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis ornare venenatis turpis dignissim dignissim ipsum Spring ultricies adipiscing ut ornare ultricies elit sending to kafka topic twitter-topic
2023-05-14 15:31:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 901229472886622351, "id": 7542461588594185837, "text": "turpis ornare venenatis turpis dignissim dignissim ipsum Spring ultricies adipiscing ut ornare ultricies elit", "createdAt": 1684060286000}' to topic='twitter-topic'
2023-05-14 15:31:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id ut ornare id Elasticsearch tristique id sending to kafka topic twitter-topic
2023-05-14 15:31:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2446403174376072713, "id": 2413944059030394403, "text": "id ut ornare id Elasticsearch tristique id", "createdAt": 1684060296000}' to topic='twitter-topic'
2023-05-14 15:31:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim ultricies in lectus Kafka sit consectetur mauris sending to kafka topic twitter-topic
2023-05-14 15:31:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4957130753967620204, "id": 8000009364316773802, "text": "dignissim ultricies in lectus Kafka sit consectetur mauris", "createdAt": 1684060306000}' to topic='twitter-topic'
2023-05-14 15:31:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text venenatis id venenatis turpis Java ultricies lectus ultricies sending to kafka topic twitter-topic
2023-05-14 15:31:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5260639439094850514, "id": 2638797729679118372, "text": "venenatis id venenatis turpis Java ultricies lectus ultricies", "createdAt": 1684060316000}' to topic='twitter-topic'
2023-05-14 15:32:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor dignissim consectetur dolor ornare Elasticsearch id mauris elit sending to kafka topic twitter-topic
2023-05-14 15:32:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8995746421141931688, "id": 7114998620497295741, "text": "dolor dignissim consectetur dolor ornare Elasticsearch id mauris elit", "createdAt": 1684060326000}' to topic='twitter-topic'
2023-05-14 15:32:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus id consectetur pharetra Microservices dolor sit tristique sending to kafka topic twitter-topic
2023-05-14 15:32:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3238148573851905699, "id": 6222836580594703906, "text": "tempus id consectetur pharetra Microservices dolor sit tristique", "createdAt": 1684060336000}' to topic='twitter-topic'
2023-05-14 15:32:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id venenatis varius venenatis elit in ut lectus Kafka tempus tristique venenatis turpis sit pharetra sending to kafka topic twitter-topic
2023-05-14 15:32:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8031068160154989785, "id": 4278827184493564180, "text": "id venenatis varius venenatis elit in ut lectus Kafka tempus tristique venenatis turpis sit pharetra", "createdAt": 1684060346000}' to topic='twitter-topic'
2023-05-14 15:32:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut adipiscing consectetur sit Kafka ornare tempus elit sending to kafka topic twitter-topic
2023-05-14 15:32:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2046205297531034275, "id": 4129561534597805319, "text": "ut adipiscing consectetur sit Kafka ornare tempus elit", "createdAt": 1684060356000}' to topic='twitter-topic'
2023-05-14 15:32:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique venenatis ultricies pharetra elit Microservices lectus ipsum ut sending to kafka topic twitter-topic
2023-05-14 15:32:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2487909670549228593, "id": 8877653398839573571, "text": "tristique venenatis ultricies pharetra elit Microservices lectus ipsum ut", "createdAt": 1684060366000}' to topic='twitter-topic'
2023-05-14 15:32:56 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit pharetra ultricies adipiscing sit Kafka ut consectetur pharetra ornare sending to kafka topic twitter-topic
2023-05-14 15:32:56 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2881016812123148275, "id": 8317979177701374441, "text": "elit pharetra ultricies adipiscing sit Kafka ut consectetur pharetra ornare", "createdAt": 1684060376000}' to topic='twitter-topic'
2023-05-14 15:33:06 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis in dolor ut varius mauris Spring varius ut ut sit in sending to kafka topic twitter-topic
2023-05-14 15:33:06 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6830452899685993032, "id": 6002489302368306127, "text": "turpis in dolor ut varius mauris Spring varius ut ut sit in", "createdAt": 1684060386000}' to topic='twitter-topic'
2023-05-14 15:33:16 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in venenatis ornare consectetur tristique mauris Kafka tempus dignissim tristique elit tristique sending to kafka topic twitter-topic
2023-05-14 15:33:16 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2725179296672207648, "id": 4387227282024077062, "text": "in venenatis ornare consectetur tristique mauris Kafka tempus dignissim tristique elit tristique", "createdAt": 1684060396000}' to topic='twitter-topic'
2023-05-14 15:33:26 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius varius in pharetra venenatis tempus Kafka ornare ultricies pharetra turpis sending to kafka topic twitter-topic
2023-05-14 15:33:26 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5481069169765279207, "id": 514135256674308163, "text": "varius varius in pharetra venenatis tempus Kafka ornare ultricies pharetra turpis", "createdAt": 1684060406000}' to topic='twitter-topic'
2023-05-14 15:33:36 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id consectetur ut ut sit Kafka elit consectetur venenatis sending to kafka topic twitter-topic
2023-05-14 15:33:36 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8655279544264731179, "id": 7429599961686607117, "text": "id consectetur ut ut sit Kafka elit consectetur venenatis", "createdAt": 1684060416000}' to topic='twitter-topic'
2023-05-14 15:33:46 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris varius ut elit Elasticsearch pharetra pharetra sending to kafka topic twitter-topic
2023-05-14 15:33:46 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 621080945351495092, "id": 7150639043224778292, "text": "mauris varius ut elit Elasticsearch pharetra pharetra", "createdAt": 1684060426000}' to topic='twitter-topic'
2023-05-14 15:33:57 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique dignissim ultricies varius ultricies Java varius dignissim adipiscing sending to kafka topic twitter-topic
2023-05-14 15:33:57 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6439485711231664732, "id": 3852751314380471115, "text": "tristique dignissim ultricies varius ultricies Java varius dignissim adipiscing", "createdAt": 1684060436000}' to topic='twitter-topic'
2023-05-14 15:34:07 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies tempus mauris sit lectus id Java dolor mauris id id sending to kafka topic twitter-topic
2023-05-14 15:34:07 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6199281572672579206, "id": 8707045080978002875, "text": "ultricies tempus mauris sit lectus id Java dolor mauris id id", "createdAt": 1684060447000}' to topic='twitter-topic'
2023-05-14 15:34:17 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris sit pharetra varius turpis ut sit Microservices ornare mauris consectetur ut dolor tristique sending to kafka topic twitter-topic
2023-05-14 15:34:17 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8560953161829132921, "id": 116128189086259104, "text": "mauris sit pharetra varius turpis ut sit Microservices ornare mauris consectetur ut dolor tristique", "createdAt": 1684060457000}' to topic='twitter-topic'
2023-05-14 15:34:27 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit ut tristique lectus lectus ultricies dignissim Java elit in pharetra dignissim mauris sending to kafka topic twitter-topic
2023-05-14 15:34:27 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7307245637668491261, "id": 3112117810031618410, "text": "sit ut tristique lectus lectus ultricies dignissim Java elit in pharetra dignissim mauris", "createdAt": 1684060467000}' to topic='twitter-topic'
2023-05-14 15:34:32 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node 3 disconnected.
2023-05-14 15:34:37 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id lectus ut dignissim dignissim Spring adipiscing venenatis consectetur sending to kafka topic twitter-topic
2023-05-14 15:34:37 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1546977214707967008, "id": 1784131229612520930, "text": "id lectus ut dignissim dignissim Spring adipiscing venenatis consectetur", "createdAt": 1684060477000}' to topic='twitter-topic'
2023-05-14 15:34:47 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut mauris lectus dolor Java adipiscing ipsum sending to kafka topic twitter-topic
2023-05-14 15:34:47 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2130437722681395244, "id": 4352613157199741778, "text": "ut mauris lectus dolor Java adipiscing ipsum", "createdAt": 1684060487000}' to topic='twitter-topic'
2023-05-14 15:34:57 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus adipiscing varius adipiscing dignissim varius Java ipsum dignissim consectetur consectetur sending to kafka topic twitter-topic
2023-05-14 15:34:57 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7098672380770899606, "id": 872369195986004373, "text": "lectus adipiscing varius adipiscing dignissim varius Java ipsum dignissim consectetur consectetur", "createdAt": 1684060497000}' to topic='twitter-topic'
2023-05-14 15:35:07 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis adipiscing turpis mauris varius sit consectetur dignissim Elasticsearch mauris adipiscing dignissim turpis dignissim id lectus sending to kafka topic twitter-topic
2023-05-14 15:35:07 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4660864295718029185, "id": 6403946841741477279, "text": "turpis adipiscing turpis mauris varius sit consectetur dignissim Elasticsearch mauris adipiscing dignissim turpis dignissim id lectus", "createdAt": 1684060507000}' to topic='twitter-topic'
2023-05-14 15:35:17 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris pharetra tempus tempus consectetur adipiscing lectus varius Elasticsearch mauris ipsum varius elit ultricies in varius sending to kafka topic twitter-topic
2023-05-14 15:35:17 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1598055307922145213, "id": 4398379881658958263, "text": "mauris pharetra tempus tempus consectetur adipiscing lectus varius Elasticsearch mauris ipsum varius elit ultricies in varius", "createdAt": 1684060517000}' to topic='twitter-topic'
2023-05-14 15:35:27 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit tristique dolor consectetur venenatis Java ipsum id elit sending to kafka topic twitter-topic
2023-05-14 15:35:27 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1927592855048213543, "id": 3550537888730988214, "text": "sit tristique dolor consectetur venenatis Java ipsum id elit", "createdAt": 1684060527000}' to topic='twitter-topic'
2023-05-14 15:35:37 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tristique turpis ipsum in elit dignissim Java adipiscing ultricies in ornare tempus sending to kafka topic twitter-topic
2023-05-14 15:35:37 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8477523693740013552, "id": 3486571077539301046, "text": "tristique turpis ipsum in elit dignissim Java adipiscing ultricies in ornare tempus", "createdAt": 1684060537000}' to topic='twitter-topic'
2023-05-14 15:35:47 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim ornare ultricies dignissim dignissim Elasticsearch id turpis elit in sending to kafka topic twitter-topic
2023-05-14 15:35:47 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6067478845002053770, "id": 7270171474582381358, "text": "dignissim ornare ultricies dignissim dignissim Elasticsearch id turpis elit in", "createdAt": 1684060547000}' to topic='twitter-topic'
2023-05-14 15:35:57 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit in varius id mauris dolor Elasticsearch ultricies ornare varius venenatis ornare sending to kafka topic twitter-topic
2023-05-14 15:35:57 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1432823586521914498, "id": 6455348050463522300, "text": "sit in varius id mauris dolor Elasticsearch ultricies ornare varius venenatis ornare", "createdAt": 1684060557000}' to topic='twitter-topic'
2023-05-14 15:36:07 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus ut in Java id ornare sending to kafka topic twitter-topic
2023-05-14 15:36:07 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3005131966519120523, "id": 7273365603471462492, "text": "tempus ut in Java id ornare", "createdAt": 1684060567000}' to topic='twitter-topic'
2023-05-14 15:36:17 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit ipsum turpis tristique tempus in dignissim sit Microservices dolor tempus lectus dolor dolor sit elit sending to kafka topic twitter-topic
2023-05-14 15:36:17 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4452543427648245537, "id": 8157895036171118781, "text": "elit ipsum turpis tristique tempus in dignissim sit Microservices dolor tempus lectus dolor dolor sit elit", "createdAt": 1684060577000}' to topic='twitter-topic'
2023-05-14 15:36:27 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis venenatis elit lectus elit ipsum Java ultricies in elit turpis lectus sending to kafka topic twitter-topic
2023-05-14 15:36:27 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 922384367717543745, "id": 8180905256355939121, "text": "turpis venenatis elit lectus elit ipsum Java ultricies in elit turpis lectus", "createdAt": 1684060587000}' to topic='twitter-topic'
2023-05-14 15:36:37 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim dolor turpis Spring ornare varius sending to kafka topic twitter-topic
2023-05-14 15:36:37 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5877079085697848381, "id": 2654561046836288836, "text": "dignissim dolor turpis Spring ornare varius", "createdAt": 1684060597000}' to topic='twitter-topic'
2023-05-14 15:36:47 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in venenatis tristique tempus adipiscing Kafka tristique tempus in sending to kafka topic twitter-topic
2023-05-14 15:36:47 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1202278184441081266, "id": 1124708603895088350, "text": "in venenatis tristique tempus adipiscing Kafka tristique tempus in", "createdAt": 1684060607000}' to topic='twitter-topic'
2023-05-14 15:36:57 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor varius lectus id consectetur Spring id ut ornare sending to kafka topic twitter-topic
2023-05-14 15:36:57 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8520426718650181519, "id": 4399224165205471812, "text": "dolor varius lectus id consectetur Spring id ut ornare", "createdAt": 1684060617000}' to topic='twitter-topic'
2023-05-14 15:37:07 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit ultricies sit Spring ornare adipiscing sending to kafka topic twitter-topic
2023-05-14 15:37:07 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1885390443237311921, "id": 2673011766294958041, "text": "elit ultricies sit Spring ornare adipiscing", "createdAt": 1684060627000}' to topic='twitter-topic'
2023-05-14 15:37:17 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare venenatis consectetur tristique Spring mauris turpis sending to kafka topic twitter-topic
2023-05-14 15:37:17 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3821400724267943579, "id": 4545125830588370207, "text": "ornare venenatis consectetur tristique Spring mauris turpis", "createdAt": 1684060637000}' to topic='twitter-topic'
2023-05-14 15:37:27 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit sit dignissim Kafka tempus ornare sending to kafka topic twitter-topic
2023-05-14 15:37:27 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6193617876594467261, "id": 421030360266006849, "text": "elit sit dignissim Kafka tempus ornare", "createdAt": 1684060647000}' to topic='twitter-topic'
2023-05-14 15:37:37 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id consectetur mauris ornare ipsum pharetra venenatis varius Java id venenatis venenatis lectus mauris id sending to kafka topic twitter-topic
2023-05-14 15:37:37 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1464037456375116051, "id": 5016027471800999749, "text": "id consectetur mauris ornare ipsum pharetra venenatis varius Java id venenatis venenatis lectus mauris id", "createdAt": 1684060657000}' to topic='twitter-topic'
2023-05-14 15:37:47 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius ut ornare ultricies lectus in varius sit Microservices dignissim id ornare turpis in id sending to kafka topic twitter-topic
2023-05-14 15:37:47 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7762599005908171073, "id": 7232808136151180544, "text": "varius ut ornare ultricies lectus in varius sit Microservices dignissim id ornare turpis in id", "createdAt": 1684060667000}' to topic='twitter-topic'
2023-05-14 15:37:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2023-05-14 15:37:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 15:37:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 15:37:52 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 15:37:52 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing Kafka Producer!
2023-05-14 15:37:52 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-14 15:37:52 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 15:37:52 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 15:37:52 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 15:37:52 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2023-05-14 15:38:14 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 23852 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 15:38:14 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 15:38:14 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 15:38:14 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-twitter_to_kafa, profiles=[twitter_to_kafka], label=null, version=b0ca094de8445b97d315635006f60f065b7069bb, state=null
2023-05-14 15:38:15 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=daaf60a2-b938-3f7c-89aa-d106401a9d4c
2023-05-14 15:38:16 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2023-05-14 15:38:16 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-05-14 15:38:16 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 61 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:749)
	at java.base/java.util.Map.of(Map.java:1307)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:23)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$800da873.CGLIB$adminClient$0(<generated>)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$800da873$$FastClassBySpringCGLIB$$dc38f91a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$800da873.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2023-05-14 16:08:22 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 25407 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 16:08:22 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 16:08:22 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 16:08:23 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db0c59ef-7d75-3dec-9a1d-f209261da3a7
2023-05-14 16:08:23 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2023-05-14 16:08:24 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-05-14 16:08:24 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 61 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:749)
	at java.base/java.util.Map.of(Map.java:1307)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:23)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$d2fde510.CGLIB$adminClient$0(<generated>)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$d2fde510$$FastClassBySpringCGLIB$$7ce09cf6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$d2fde510.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2023-05-14 16:09:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 25602 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 16:09:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 16:09:30 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 16:09:31 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db0c59ef-7d75-3dec-9a1d-f209261da3a7
2023-05-14 16:09:31 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2023-05-14 16:09:31 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-05-14 16:09:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 61 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:749)
	at java.base/java.util.Map.of(Map.java:1307)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:23)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$93eee0b2.CGLIB$adminClient$0(<generated>)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$93eee0b2$$FastClassBySpringCGLIB$$3d4d80d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$93eee0b2.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2023-05-14 16:09:52 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 25696 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 16:09:52 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 16:09:52 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 16:09:54 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=db0c59ef-7d75-3dec-9a1d-f209261da3a7
2023-05-14 16:09:54 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2023-05-14 16:09:54 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-05-14 16:09:54 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 61 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:749)
	at java.base/java.util.Map.of(Map.java:1307)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:23)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$5e7a3ee5.CGLIB$adminClient$0(<generated>)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$5e7a3ee5$$FastClassBySpringCGLIB$$a3f32237.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$5e7a3ee5.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2023-05-14 16:16:56 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 25985 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 16:16:56 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 16:16:56 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 16:16:58 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=daaf60a2-b938-3f7c-89aa-d106401a9d4c
2023-05-14 16:16:58 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2023-05-14 16:16:58 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-05-14 16:16:58 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 61 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:749)
	at java.base/java.util.Map.of(Map.java:1307)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:23)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$968a588d.CGLIB$adminClient$0(<generated>)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$968a588d$$FastClassBySpringCGLIB$$8ee807f0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$968a588d.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2023-05-14 16:24:57 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 26625 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 16:24:57 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 16:24:57 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 16:24:58 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=daaf60a2-b938-3f7c-89aa-d106401a9d4c
2023-05-14 16:24:59 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
2023-05-14 16:24:59 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-05-14 16:24:59 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:920)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:27)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaStreamInitializer' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes/com/microservices/demo/twitter/to/kafka/service/init/impl/KafkaStreamInitializer.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaAdminClient' defined in file [/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/kafka/kafka-admin/target/classes/com/microservices/demo/kafka/admin/client/KafkaAdminClient.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'adminClient' defined in class path resource [com/microservices/demo/kafka/admin/config/KafkaAdminConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.kafka.clients.admin.AdminClient]: Factory method 'adminClient' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 61 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at java.base/java.util.ImmutableCollections$Map1.<init>(ImmutableCollections.java:749)
	at java.base/java.util.Map.of(Map.java:1307)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig.adminClient(KafkaAdminConfig.java:23)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$14cf2b24.CGLIB$adminClient$0(<generated>)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$14cf2b24$$FastClassBySpringCGLIB$$2fb84253.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.admin.config.KafkaAdminConfig$$EnhancerBySpringCGLIB$$14cf2b24.adminClient(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 62 common frames omitted
2023-05-14 16:28:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 11.0.16 on localhost.localdomain with PID 27294 (/root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo/twitter-to-kafka-service/target/classes started by root in /root/Downloads/technicalWork/idea-IC-222.3345.118/microservices-demo)
2023-05-14 16:28:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - The following 1 profile is active: "twitter_to_kafka"
2023-05-14 16:28:09 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2023-05-14 16:28:09 [main] INFO  o.s.c.c.c.ConfigServerConfigDataLoader - Located environment: name=config-client-twitter_to_kafa, profiles=[twitter_to_kafka], label=null, version=d3d644e4ac9063ae46708e5a2f0e92133bf64938, state=null
2023-05-14 16:28:10 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=b85f663c-99fd-3c7d-8473-7eeec3db94e8
2023-05-14 16:28:10 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2023-05-14 16:28:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 16:28:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 16:28:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684063691158
2023-05-14 16:28:12 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2023-05-14 16:28:12 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 9.412 seconds (JVM running for 10.779)
2023-05-14 16:28:12 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - App is started
2023-05-14 16:28:12 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics with name twitter-topic is ready for operations !
2023-05-14 16:28:12 [main] INFO  c.m.d.t.t.k.s.r.i.MockKafkaStreamRunner - Starting mock filtering twitter streams for keywords [Java, Microservices, Spring, Kafka, Elasticsearch]
2023-05-14 16:28:12 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus adipiscing venenatis venenatis Kafka ut adipiscing sending to kafka topic twitter-topic
2023-05-14 16:28:12 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6840644871435343367, "id": 4683957273942404770, "text": "tempus adipiscing venenatis venenatis Kafka ut adipiscing", "createdAt": 1684063692000}' to topic='twitter-topic'
2023-05-14 16:28:12 [pool-4-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-05-14 16:28:12 [pool-4-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-05-14 16:28:12 [pool-4-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2023-05-14 16:28:12 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 16:28:12 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 16:28:12 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684063692779
2023-05-14 16:28:12 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: YgSOnTn1SGGysXelibqEnQ
2023-05-14 16:28:12 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 22002 with epoch 0
2023-05-14 16:28:22 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text varius elit dolor dignissim turpis ultricies ornare ipsum Spring ipsum ornare dignissim turpis consectetur ultricies sending to kafka topic twitter-topic
2023-05-14 16:28:22 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6496812275276195807, "id": 1912123757368301878, "text": "varius elit dolor dignissim turpis ultricies ornare ipsum Spring ipsum ornare dignissim turpis consectetur ultricies", "createdAt": 1684063702000}' to topic='twitter-topic'
2023-05-14 16:28:32 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim tristique dolor tempus Spring ut dolor venenatis sending to kafka topic twitter-topic
2023-05-14 16:28:32 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8288381771951241790, "id": 444682276615808774, "text": "dignissim tristique dolor tempus Spring ut dolor venenatis", "createdAt": 1684063712000}' to topic='twitter-topic'
2023-05-14 16:28:42 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum venenatis in tristique Spring tristique tristique sending to kafka topic twitter-topic
2023-05-14 16:28:42 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 618008025086567081, "id": 5238623021785046911, "text": "ipsum venenatis in tristique Spring tristique tristique", "createdAt": 1684063722000}' to topic='twitter-topic'
2023-05-14 16:28:52 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris ultricies id venenatis Java turpis sit sending to kafka topic twitter-topic
2023-05-14 16:28:52 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8930226647201384500, "id": 6362975474684103402, "text": "mauris ultricies id venenatis Java turpis sit", "createdAt": 1684063732000}' to topic='twitter-topic'
2023-05-14 16:29:02 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit mauris turpis turpis pharetra adipiscing varius venenatis Spring ornare sit ut ultricies ornare ut sending to kafka topic twitter-topic
2023-05-14 16:29:02 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7889164588194425180, "id": 3636256379994005289, "text": "elit mauris turpis turpis pharetra adipiscing varius venenatis Spring ornare sit ut ultricies ornare ut", "createdAt": 1684063742000}' to topic='twitter-topic'
2023-05-14 16:29:12 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim dignissim lectus dolor sit elit id Java turpis ut ipsum id tristique ultricies sending to kafka topic twitter-topic
2023-05-14 16:29:12 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2554294319659842451, "id": 3038831490702784797, "text": "dignissim dignissim lectus dolor sit elit id Java turpis ut ipsum id tristique ultricies", "createdAt": 1684063752000}' to topic='twitter-topic'
2023-05-14 16:29:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor pharetra ut lectus elit Java ipsum in adipiscing sending to kafka topic twitter-topic
2023-05-14 16:29:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6239722569254940776, "id": 8406641562845812778, "text": "dolor pharetra ut lectus elit Java ipsum in adipiscing", "createdAt": 1684063763000}' to topic='twitter-topic'
2023-05-14 16:29:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text mauris sit varius id elit pharetra ipsum lectus Kafka elit lectus turpis adipiscing pharetra tristique sending to kafka topic twitter-topic
2023-05-14 16:29:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4986235930357677002, "id": 199112342953275295, "text": "mauris sit varius id elit pharetra ipsum lectus Kafka elit lectus turpis adipiscing pharetra tristique", "createdAt": 1684063773000}' to topic='twitter-topic'
2023-05-14 16:29:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis ultricies in tristique sit venenatis in Spring pharetra pharetra ultricies dolor tristique id sending to kafka topic twitter-topic
2023-05-14 16:29:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3361594388138537212, "id": 1547182796429077360, "text": "turpis ultricies in tristique sit venenatis in Spring pharetra pharetra ultricies dolor tristique id", "createdAt": 1684063783000}' to topic='twitter-topic'
2023-05-14 16:29:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis dolor ornare dignissim pharetra varius varius consectetur Kafka tempus id ornare id ut ultricies sit sending to kafka topic twitter-topic
2023-05-14 16:29:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8721659610921728537, "id": 5761321662023947510, "text": "turpis dolor ornare dignissim pharetra varius varius consectetur Kafka tempus id ornare id ut ultricies sit", "createdAt": 1684063793000}' to topic='twitter-topic'
2023-05-14 16:30:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur elit tempus ornare Kafka tristique lectus consectetur sending to kafka topic twitter-topic
2023-05-14 16:30:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1288931590149142571, "id": 9202633337192138144, "text": "consectetur elit tempus ornare Kafka tristique lectus consectetur", "createdAt": 1684063803000}' to topic='twitter-topic'
2023-05-14 16:30:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies ornare id turpis ornare Kafka venenatis tristique tristique varius sending to kafka topic twitter-topic
2023-05-14 16:30:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 407010523477114213, "id": 5870292703019381169, "text": "ultricies ornare id turpis ornare Kafka venenatis tristique tristique varius", "createdAt": 1684063813000}' to topic='twitter-topic'
2023-05-14 16:30:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum consectetur tristique turpis lectus mauris Java elit consectetur ipsum ornare id sending to kafka topic twitter-topic
2023-05-14 16:30:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1272271397208504361, "id": 7747846794328417479, "text": "ipsum consectetur tristique turpis lectus mauris Java elit consectetur ipsum ornare id", "createdAt": 1684063823000}' to topic='twitter-topic'
2023-05-14 16:30:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare in pharetra tempus dolor varius adipiscing dolor Java in ipsum lectus ut lectus pharetra venenatis sending to kafka topic twitter-topic
2023-05-14 16:30:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3073490246035592414, "id": 874823889250848670, "text": "ornare in pharetra tempus dolor varius adipiscing dolor Java in ipsum lectus ut lectus pharetra venenatis", "createdAt": 1684063833000}' to topic='twitter-topic'
2023-05-14 16:30:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id varius tempus ipsum consectetur mauris lectus Spring id id sit lectus mauris turpis sending to kafka topic twitter-topic
2023-05-14 16:30:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1155992976801584877, "id": 8735396881246979219, "text": "id varius tempus ipsum consectetur mauris lectus Spring id id sit lectus mauris turpis", "createdAt": 1684063843000}' to topic='twitter-topic'
2023-05-14 16:30:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dignissim id dignissim ultricies adipiscing id Spring sit venenatis varius venenatis tristique sending to kafka topic twitter-topic
2023-05-14 16:30:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1349024902430598671, "id": 158745613795952000, "text": "dignissim id dignissim ultricies adipiscing id Spring sit venenatis varius venenatis tristique", "createdAt": 1684063853000}' to topic='twitter-topic'
2023-05-14 16:31:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur mauris dignissim id sit mauris Java tempus tempus varius ornare sending to kafka topic twitter-topic
2023-05-14 16:31:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5125558814923280678, "id": 6854694282060862387, "text": "consectetur mauris dignissim id sit mauris Java tempus tempus varius ornare", "createdAt": 1684063863000}' to topic='twitter-topic'
2023-05-14 16:31:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit turpis consectetur varius ipsum ornare varius in Microservices turpis varius dolor mauris venenatis tristique in sending to kafka topic twitter-topic
2023-05-14 16:31:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2141135508308043415, "id": 294762290183960787, "text": "sit turpis consectetur varius ipsum ornare varius in Microservices turpis varius dolor mauris venenatis tristique in", "createdAt": 1684063873000}' to topic='twitter-topic'
2023-05-14 16:31:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis sit consectetur lectus adipiscing sit dolor Elasticsearch dignissim turpis lectus lectus adipiscing turpis sending to kafka topic twitter-topic
2023-05-14 16:31:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1960952929561428402, "id": 887456411513868854, "text": "turpis sit consectetur lectus adipiscing sit dolor Elasticsearch dignissim turpis lectus lectus adipiscing turpis", "createdAt": 1684063883000}' to topic='twitter-topic'
2023-05-14 16:31:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text elit elit consectetur ultricies varius Kafka ipsum lectus turpis ipsum sending to kafka topic twitter-topic
2023-05-14 16:31:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5883007007224960719, "id": 351348165399781446, "text": "elit elit consectetur ultricies varius Kafka ipsum lectus turpis ipsum", "createdAt": 1684063893000}' to topic='twitter-topic'
2023-05-14 16:31:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut ut turpis id Spring ipsum ipsum id sending to kafka topic twitter-topic
2023-05-14 16:31:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5449647240879664011, "id": 4797793671152872969, "text": "ut ut turpis id Spring ipsum ipsum id", "createdAt": 1684063903000}' to topic='twitter-topic'
2023-05-14 16:31:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus pharetra tempus elit Java lectus ornare sending to kafka topic twitter-topic
2023-05-14 16:31:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 5150620352060021035, "id": 2228413587922657527, "text": "lectus pharetra tempus elit Java lectus ornare", "createdAt": 1684063913000}' to topic='twitter-topic'
2023-05-14 16:32:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text id consectetur tristique dignissim Spring lectus dignissim tempus sending to kafka topic twitter-topic
2023-05-14 16:32:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8653124314269987872, "id": 2885337914539685451, "text": "id consectetur tristique dignissim Spring lectus dignissim tempus", "createdAt": 1684063923000}' to topic='twitter-topic'
2023-05-14 16:32:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text turpis mauris tempus ultricies lectus in Elasticsearch lectus consectetur ipsum varius sending to kafka topic twitter-topic
2023-05-14 16:32:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1612267474282247817, "id": 2804587514413661820, "text": "turpis mauris tempus ultricies lectus in Elasticsearch lectus consectetur ipsum varius", "createdAt": 1684063933000}' to topic='twitter-topic'
2023-05-14 16:32:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in adipiscing ornare Kafka dignissim ornare sending to kafka topic twitter-topic
2023-05-14 16:32:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7944313415024346004, "id": 4837256616586084639, "text": "in adipiscing ornare Kafka dignissim ornare", "createdAt": 1684063943000}' to topic='twitter-topic'
2023-05-14 16:32:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit ultricies dignissim Microservices ut tristique sending to kafka topic twitter-topic
2023-05-14 16:32:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9115740266710176623, "id": 6428679511213381324, "text": "sit ultricies dignissim Microservices ut tristique", "createdAt": 1684063953000}' to topic='twitter-topic'
2023-05-14 16:32:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ultricies dolor tempus ultricies ultricies lectus ornare tempus Microservices varius ipsum ultricies ornare mauris dignissim sending to kafka topic twitter-topic
2023-05-14 16:32:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8589951692872288059, "id": 1759379976314941066, "text": "ultricies dolor tempus ultricies ultricies lectus ornare tempus Microservices varius ipsum ultricies ornare mauris dignissim", "createdAt": 1684063963000}' to topic='twitter-topic'
2023-05-14 16:32:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra lectus dolor id consectetur Kafka consectetur mauris ipsum mauris sending to kafka topic twitter-topic
2023-05-14 16:32:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4717825902670561442, "id": 8787014056023569619, "text": "pharetra lectus dolor id consectetur Kafka consectetur mauris ipsum mauris", "createdAt": 1684063973000}' to topic='twitter-topic'
2023-05-14 16:33:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus id dolor lectus ut sit dolor ornare Microservices id ipsum dolor venenatis adipiscing varius mauris sending to kafka topic twitter-topic
2023-05-14 16:33:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1013128806615300904, "id": 6762624356502162474, "text": "lectus id dolor lectus ut sit dolor ornare Microservices id ipsum dolor venenatis adipiscing varius mauris", "createdAt": 1684063983000}' to topic='twitter-topic'
2023-05-14 16:33:12 [kafka-admin-client-thread | adminclient-1] INFO  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Node -3 disconnected.
2023-05-14 16:33:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text tempus ultricies ultricies Spring varius ornare sending to kafka topic twitter-topic
2023-05-14 16:33:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1181852544438404677, "id": 8425543451439888037, "text": "tempus ultricies ultricies Spring varius ornare", "createdAt": 1684063993000}' to topic='twitter-topic'
2023-05-14 16:33:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text in dignissim tristique turpis Spring sit in sending to kafka topic twitter-topic
2023-05-14 16:33:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3569117925419253632, "id": 919063901498135312, "text": "in dignissim tristique turpis Spring sit in", "createdAt": 1684064003000}' to topic='twitter-topic'
2023-05-14 16:33:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text sit dolor id Elasticsearch varius venenatis sending to kafka topic twitter-topic
2023-05-14 16:33:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8858123590408277126, "id": 5419414346603399886, "text": "sit dolor id Elasticsearch varius venenatis", "createdAt": 1684064013000}' to topic='twitter-topic'
2023-05-14 16:33:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text dolor turpis tempus consectetur ut pharetra Elasticsearch dolor tristique ipsum consectetur consectetur sending to kafka topic twitter-topic
2023-05-14 16:33:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9027135688874189635, "id": 5197597381392399612, "text": "dolor turpis tempus consectetur ut pharetra Elasticsearch dolor tristique ipsum consectetur consectetur", "createdAt": 1684064023000}' to topic='twitter-topic'
2023-05-14 16:33:53 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ornare in venenatis elit Kafka ipsum mauris ultricies sending to kafka topic twitter-topic
2023-05-14 16:33:53 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 8071731916043882661, "id": 1391315410753687090, "text": "ornare in venenatis elit Kafka ipsum mauris ultricies", "createdAt": 1684064033000}' to topic='twitter-topic'
2023-05-14 16:34:03 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text consectetur tristique turpis consectetur ultricies pharetra ornare Elasticsearch elit tempus mauris ultricies venenatis varius sending to kafka topic twitter-topic
2023-05-14 16:34:03 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 6210933021090395032, "id": 5837332944716431587, "text": "consectetur tristique turpis consectetur ultricies pharetra ornare Elasticsearch elit tempus mauris ultricies venenatis varius", "createdAt": 1684064043000}' to topic='twitter-topic'
2023-05-14 16:34:13 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ipsum dignissim ornare ultricies ipsum elit Microservices ultricies ultricies lectus sit sending to kafka topic twitter-topic
2023-05-14 16:34:13 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4966940396324166370, "id": 3160247565784907447, "text": "ipsum dignissim ornare ultricies ipsum elit Microservices ultricies ultricies lectus sit", "createdAt": 1684064053000}' to topic='twitter-topic'
2023-05-14 16:34:23 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text lectus ultricies elit turpis tempus adipiscing tempus ipsum Microservices pharetra tempus consectetur adipiscing dignissim lectus ut sending to kafka topic twitter-topic
2023-05-14 16:34:23 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 7873609658811141586, "id": 6612451969381990445, "text": "lectus ultricies elit turpis tempus adipiscing tempus ipsum Microservices pharetra tempus consectetur adipiscing dignissim lectus ut", "createdAt": 1684064063000}' to topic='twitter-topic'
2023-05-14 16:34:33 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text pharetra turpis sit dignissim tempus ornare consectetur Microservices venenatis turpis tristique venenatis consectetur sit sending to kafka topic twitter-topic
2023-05-14 16:34:33 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4256348184282721137, "id": 4009265038470869591, "text": "pharetra turpis sit dignissim tempus ornare consectetur Microservices venenatis turpis tristique venenatis consectetur sit", "createdAt": 1684064073000}' to topic='twitter-topic'
2023-05-14 16:34:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2023-05-14 16:34:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 16:34:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 16:34:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 16:34:41 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing Kafka Producer!
2023-05-14 16:34:41 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2023-05-14 16:34:41 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2023-05-14 16:34:41 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2023-05-14 16:34:41 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2023-05-14 16:34:41 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2023-05-14 16:34:43 [pool-4-thread-1] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - Received status text ut tristique consectetur ultricies Java in tempus sit sending to kafka topic twitter-topic
2023-05-14 16:34:43 [pool-4-thread-1] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4873838334280504988, "id": 705949011440788991, "text": "ut tristique consectetur ultricies Java in tempus sit", "createdAt": 1684064083000}' to topic='twitter-topic'
2023-05-14 16:34:43 [pool-4-thread-1] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-2
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2023-05-14 16:34:43 [pool-4-thread-1] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	bearer.auth.token = [hidden]
	proxy.port = -1
	schema.reflection = false
	auto.register.schemas = true
	max.schemas.per.subject = 1000
	basic.auth.credentials.source = URL
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	schema.registry.url = [http://localhost:8081]
	basic.auth.user.info = [hidden]
	proxy.host = 
	use.latest.version = false
	schema.registry.basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2023-05-14 16:34:43 [pool-4-thread-1] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-2] Instantiated an idempotent producer.
2023-05-14 16:34:43 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2023-05-14 16:34:43 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2023-05-14 16:34:43 [pool-4-thread-1] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1684064083235
2023-05-14 16:34:43 [kafka-producer-network-thread | producer-2] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-2] Cluster ID: YgSOnTn1SGGysXelibqEnQ
2023-05-14 16:34:43 [kafka-producer-network-thread | producer-2] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-2] ProducerId set to 20001 with epoch 0
